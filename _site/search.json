[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "title": "Hands-on Exercise 2",
    "section": "Working with ggrepel",
    "text": "Working with ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "title": "Hands-on Exercise 2",
    "section": "Working with ggtheme package",
    "text": "Working with ggtheme package\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthems-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthems-package",
    "title": "Hands-on Exercise 2",
    "section": "Working with hrbthems package",
    "text": "Working with hrbthems package\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-pathwork-methods",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-pathwork-methods",
    "title": "Hands-on Exercise 2",
    "section": "Creating Composite Graphics: pathwork methods",
    "text": "Creating Composite Graphics: pathwork methods"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "title": "Hands-on Exercise 2",
    "section": "Combining two ggplot2 graphs",
    "text": "Combining two ggplot2 graphs\n\np1 + p2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "title": "Hands-on Exercise 2",
    "section": "Combining three ggplot2 graphs",
    "text": "Combining three ggplot2 graphs\n\n(p1 / p2) | p3"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "title": "Hands-on Exercise 2",
    "section": "Creating a composite figure with tag",
    "text": "Creating a composite figure with tag\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "title": "Hands-on Exercise 2",
    "section": "Creating figure with insert",
    "text": "Creating figure with insert\n\np12 <- p1|p2\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "title": "Hands-on Exercise 2",
    "section": "Creating a composite figure by using patchwork and ggtheme",
    "text": "Creating a composite figure by using patchwork and ggtheme\n\npatchwork <- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#tooltip-effect-with-tooltip-aesthetic",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#tooltip-effect-with-tooltip-aesthetic",
    "title": "Hands-on Exercise 3",
    "section": "Tooltip effect with tooltip aesthetic",
    "text": "Tooltip effect with tooltip aesthetic\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-multiple-information-on-tooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-multiple-information-on-tooltip",
    "title": "Hands-on Exercise 3",
    "section": "Displaying multiple information on tooltip",
    "text": "Displaying multiple information on tooltip\n\nexam_data$tooltip <- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#customising-tooltip-style",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#customising-tooltip-style",
    "title": "Hands-on Exercise 3",
    "section": "Customising Tooltip style",
    "text": "Customising Tooltip style\n\ntooltip_css <- \"background-color:white; #<<\nfont-style:bold; color:black;\" #<<\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #<<\n    opts_tooltip(    #<<\n      css = tooltip_css)) #<<\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-statistics-on-tooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-statistics-on-tooltip",
    "title": "Hands-on Exercise 3",
    "section": "Displaying statistics on tooltip",
    "text": "Displaying statistics on tooltip\n\ntooltip <- function(y, ymax, accuracy = .01) {\n  mean <- scales::number(y, accuracy = accuracy)\n  sem <- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point <- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#hover-effect-with-data_id-aesthetic",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#hover-effect-with-data_id-aesthetic",
    "title": "Hands-on Exercise 3",
    "section": "Hover effect with data_id aesthetic",
    "text": "Hover effect with data_id aesthetic\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#styling-hover-effect",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#styling-hover-effect",
    "title": "Hands-on Exercise 3",
    "section": "Styling hover effect",
    "text": "Styling hover effect\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#combining-tooltip-and-hover-effect",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#combining-tooltip-and-hover-effect",
    "title": "Hands-on Exercise 3",
    "section": "Combining tooltip and hover effect",
    "text": "Combining tooltip and hover effect\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#click-effect-with-onclick",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#click-effect-with-onclick",
    "title": "Hands-on Exercise 3",
    "section": "Click effect with onclick",
    "text": "Click effect with onclick\n\nexam_data$onclick <- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-ggiraph",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-ggiraph",
    "title": "Hands-on Exercise 3",
    "section": "Coordinated Multiple Views with ggiraph",
    "text": "Coordinated Multiple Views with ggiraph\n\np1 <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 <- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "title": "Hands-on Exercise 3",
    "section": "Creating an interactive scatter plot: plot_ly() method",
    "text": "Creating an interactive scatter plot: plot_ly() method\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-visual-variable-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-visual-variable-plot_ly-method",
    "title": "Hands-on Exercise 3",
    "section": "Working with visual variable: plot_ly() method",
    "text": "Working with visual variable: plot_ly() method\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "title": "Hands-on Exercise 3",
    "section": "Creating an interactive scatter plot: ggplotly() method",
    "text": "Creating an interactive scatter plot: ggplotly() method\n\np <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-plotly",
    "title": "Hands-on Exercise 3",
    "section": "Coordinated Multiple Views with plotly",
    "text": "Coordinated Multiple Views with plotly\n\nd <- highlight_key(exam_data)\np1 <- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 <- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table-dt-package",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table-dt-package",
    "title": "Hands-on Exercise 3",
    "section": "Interactive Data Table: DT package",
    "text": "Interactive Data Table: DT package\n\nDT::datatable(exam_data, class= \"compact\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk-method",
    "title": "Hands-on Exercise 3",
    "section": "Linked brushing: crosstalk method",
    "text": "Linked brushing: crosstalk method\n\nd <- highlight_key(exam_data) \np <- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg <- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#install-and-launching-r-packages-1",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#install-and-launching-r-packages-1",
    "title": "Hands-on Exercise 3",
    "section": "Install and launching R packages",
    "text": "Install and launching R packages\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#importing-the-data-1",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#importing-the-data-1",
    "title": "Hands-on Exercise 3",
    "section": "Importing the data",
    "text": "Importing the data\n\ncol <- c(\"Country\", \"Continent\")\nglobalPop <- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %>%\n  mutate_each_(funs(factor(.)), col) %>%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-a-static-population-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-a-static-population-bubble-plot",
    "title": "Hands-on Exercise 3",
    "section": "Building a static population bubble plot",
    "text": "Building a static population bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-the-animated-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-the-animated-bubble-plot",
    "title": "Hands-on Exercise 3",
    "section": "Building the animated bubble plot",
    "text": "Building the animated bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-an-animated-bubble-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-an-animated-bubble-plot-ggplotly-method",
    "title": "Hands-on Exercise 3",
    "section": "Building an animated bubble plot: ggplotly() method",
    "text": "Building an animated bubble plot: ggplotly() method\n\ngg <- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-an-animated-bubble-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-an-animated-bubble-plot-plot_ly-method",
    "title": "Hands-on Exercise 3",
    "section": "Building an animated bubble plot: plot_ly() method",
    "text": "Building an animated bubble plot: plot_ly() method\n\nbp <- globalPop %>%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent, \n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          )\nbp"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal() +\n  theme(panel.background = element_rect(\n    fill = \"lightblue\",\n    colour = \"lightblue\",\n    size = 0.5,\n    linetype = \"solid\"),\n    panel.grid.major = element_line(\n      size = 0.5,\n      linetype = 'solid',\n      colour = \"white\"), \n    panel.grid.minor = element_line(\n      size = 0.25,\n      linetype = 'solid',\n      colour = \"white\"))\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x=reorder(RACE,RACE,\n                function(x)-length(x))))+\n  geom_bar() +\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(..count.., \", \", \n      round(..count../sum(..count..)*100,\n            1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))\n\n\n\n\n\nexam_data %>%\n  mutate(RACE = fct_infreq(RACE)) %>%\n  ggplot(aes(x = RACE)) + \n  geom_bar()+\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(..count.., \", \", \n      round(..count../sum(..count..)*100,\n            1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  geom_vline(aes(xintercept=mean(MATHS,\n                                 na.rm=T)),\n             color=\"red\", \n             linetype=\"dashed\", \n             size=1) +\n  geom_vline(aes(xintercept=median(MATHS,\n                                  na.rm=T)),\n             color=\"grey30\",\n             linetype=\"dashed\", \n             size=1)\n\n\n\n\n\nd <- exam_data   \nd_bg <- d[, -3]  \n\nggplot(d, aes(x = ENGLISH, fill = GENDER)) +\n  geom_histogram(data = d_bg, fill = \"grey\", alpha = .5) +\n  geom_histogram(colour = \"black\") +\n  facet_wrap(~ GENDER) +\n  guides(fill = FALSE) +  \n  theme_bw()\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=MATHS, y=ENGLISH)) +\n  geom_point() +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  geom_hline(yintercept=50,\n             linetype=\"dashed\",\n             color=\"grey60\",\n             size=1) + \n  geom_vline(xintercept=50, \n             linetype=\"dashed\",\n             color=\"grey60\",\n             size=1)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "pacman::p_load(ggstatsplot, tidyverse)\n\n\n\n\n\nexam <- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n\n\nexam1 <- exam %>% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on Exercise 4",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\n\npacman::p_load(readxl, performance, parameters, see)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#importing-excel-file-readxl-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#importing-excel-file-readxl-methods",
    "title": "Hands-on Exercise 4",
    "section": "Importing Excel file: readxl methods",
    "text": "Importing Excel file: readxl methods\n\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   <dbl> <chr>    <dbl>     <dbl>     <dbl>    <dbl>  <dbl>         <dbl>  <dbl>\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period <dbl>, HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>, …"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#multiple-regression-model-using-lm",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#multiple-regression-model-using-lm",
    "title": "Hands-on Exercise 4",
    "section": "Multiple Regression Model using lm()",
    "text": "Multiple Regression Model using lm()\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#model-diagnostic-checking-for-multicolinearity",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#model-diagnostic-checking-for-multicolinearity",
    "title": "Hands-on Exercise 4",
    "section": "Model Diagnostic: checking for multicolinearity:",
    "text": "Model Diagnostic: checking for multicolinearity:\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\ncheck_c <- check_collinearity(model)\nplot(check_c)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#model-diagnostic-checking-normality-assumption",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#model-diagnostic-checking-normality-assumption",
    "title": "Hands-on Exercise 4",
    "section": "Model Diagnostic: checking normality assumption",
    "text": "Model Diagnostic: checking normality assumption\n\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\ncheck_n <- check_normality(model1)\n\nplot(check_n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "title": "Hands-on Exercise 4",
    "section": "Model Diagnostic: Check model for homogeneity of variances",
    "text": "Model Diagnostic: Check model for homogeneity of variances\n\ncheck_h <- check_heteroscedasticity(model1)\n\nplot(check_h)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#model-diagnostic-complete-check",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#model-diagnostic-complete-check",
    "title": "Hands-on Exercise 4",
    "section": "Model Diagnostic: Complete check",
    "text": "Model Diagnostic: Complete check\n\ncheck_model(model1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-regression-parameters-see-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-regression-parameters-see-methods",
    "title": "Hands-on Exercise 4",
    "section": "Visualising Regression Parameters: see methods",
    "text": "Visualising Regression Parameters: see methods\n\nplot(parameters(model1))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-regression-parameters-ggcoefstats-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-regression-parameters-ggcoefstats-methods",
    "title": "Hands-on Exercise 4",
    "section": "Visualising Regression Parameters: ggcoefstats() methods",
    "text": "Visualising Regression Parameters: ggcoefstats() methods\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#install-and-launching-r-packages-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#install-and-launching-r-packages-1",
    "title": "Hands-on Exercise 4",
    "section": "Install and launching R packages",
    "text": "Install and launching R packages\n\npacman::p_load(tidyverse, plotly, crosstalk, DT, ggdist, gganimate)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#importing-the-data-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#importing-the-data-1",
    "title": "Hands-on Exercise 4",
    "section": "Importing the data",
    "text": "Importing the data\n\nexam <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggplot2 methods",
    "text": "Visualizing the uncertainty of point estimates: ggplot2 methods\n\nmy_sum <- exam %>%\n  group_by(RACE) %>%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %>%\n  mutate(se=sd/sqrt(n-1))\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n \n  \n    RACE \n    n \n    mean \n    sd \n    se \n  \n \n\n  \n    Chinese \n    193 \n    76.50777 \n    15.69040 \n    1.132357 \n  \n  \n    Indian \n    12 \n    60.66667 \n    23.35237 \n    7.041005 \n  \n  \n    Malay \n    108 \n    57.44444 \n    21.13478 \n    2.043177 \n  \n  \n    Others \n    9 \n    69.66667 \n    10.72381 \n    3.791438"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods-1",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggplot2 methods",
    "text": "Visualizing the uncertainty of point estimates: ggplot2 methods\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean \n          maths score by race\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods-2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods-2",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggplot2 methods",
    "text": "Visualizing the uncertainty of point estimates: ggplot2 methods\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-(1.96*se), \n        ymax=mean+(1.96*se)), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"95% CI of mean \n          maths score by race\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates with interactive error bars",
    "text": "Visualizing the uncertainty of point estimates with interactive error bars\n\np <- ggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-(2.58*se), \n        ymax=mean+(2.58*se)),\n#        text = paste(\"Race: \", RACE, \"<br>N: \", n, \"<br>Avg. Scores: \", mean, \"<br>99% CI: [\", round(ymin, 3), \", \", round(ymax, 3), \"]\")), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"99% CI of mean \n          maths score by race\")\n\n#ggplotly(p, tooltip = c(\"text\"), hoverinfo = \"text\")\nggplotly(p)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "Visualizing the uncertainty of point estimates: ggdist methods\n\nexam %>%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +   #<<\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\nexam %>%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-1",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "Visualizing the uncertainty of point estimates: ggdist methods\n\nexam %>%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(\n    show.legend = FALSE) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-2",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "Visualizing the uncertainty of point estimates: ggdist methods\n\nexam %>%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#installing-ungeviz-package",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#installing-ungeviz-package",
    "title": "Hands-on Exercise 4",
    "section": "Installing ungeviz package",
    "text": "Installing ungeviz package\n\ndevtools::install_github(\"wilkelab/ungeviz\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#launch-the-application-in-r",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#launch-the-application-in-r",
    "title": "Hands-on Exercise 4",
    "section": "Launch the application in R",
    "text": "Launch the application in R\n\nlibrary(ungeviz)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plot-the-graph",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plot-the-graph",
    "title": "Hands-on Exercise 4",
    "section": "Plot the graph",
    "text": "Plot the graph\n\nggplot(data = exam, \n       (aes(x = factor(RACE), y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(25, group = RACE), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  # `.draw` is a generated column indicating the sample draw\n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#installing-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#installing-and-launching-r-packages",
    "title": "Hands-on Exercise 4",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#importing-the-data-2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#importing-the-data-2",
    "title": "Hands-on Exercise 4",
    "section": "Importing the data",
    "text": "Importing the data\n\ncovid19 <- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %>%\n  mutate_if(is.character, as.factor)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods-the-basic-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods-the-basic-plot",
    "title": "Hands-on Exercise 4",
    "section": "FunnelPlotR methods: The basic plot",
    "text": "FunnelPlotR methods: The basic plot\n\nfunnel_plot(\n  numerator = covid19$Positive,\n  denominator = covid19$Death,\n  group = covid19$`Sub-district`\n)\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods-makeover-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods-makeover-1",
    "title": "Hands-on Exercise 4",
    "section": "FunnelPlotR methods: Makeover 1",
    "text": "FunnelPlotR methods: Makeover 1\n\nfunnel_plot(\n  numerator = covid19$Death,\n  denominator = covid19$Positive,\n  group = covid19$`Sub-district`,\n  data_type = \"PR\",     #<<\n  xrange = c(0, 6500),  #<<\n  yrange = c(0, 0.05)   #<<\n)\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods-makeover-2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods-makeover-2",
    "title": "Hands-on Exercise 4",
    "section": "FunnelPlotR methods: Makeover 2",
    "text": "FunnelPlotR methods: Makeover 2\n\nfunnel_plot(\n  numerator = covid19$Death,\n  denominator = covid19$Positive,\n  group = covid19$`Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #<<           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #<<\n  y_label = \"Cumulative Fatality Rate\"  #<<\n)\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#computing-the-basic-derived-fields",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#computing-the-basic-derived-fields",
    "title": "Hands-on Exercise 4",
    "section": "Computing the basic derived fields",
    "text": "Computing the basic derived fields\n\ndf <- covid19 %>%\n  mutate(rate = Death / Positive) %>%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %>%\n  filter(rate > 0)\n\nfit.mean <- weighted.mean(df$rate, 1/df$rate.se^2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "title": "Hands-on Exercise 4",
    "section": "Calculate lower and upper limits for 95% and 99.9% CI",
    "text": "Calculate lower and upper limits for 95% and 99.9% CI\n\nnumber.seq <- seq(1, max(df$Positive), 1)\nnumber.ll95 <- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 <- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 <- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 <- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI <- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-a-static-funnel-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-a-static-funnel-plot",
    "title": "Hands-on Exercise 4",
    "section": "Plotting a static funnel plot",
    "text": "Plotting a static funnel plot\n\np <- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#interactive-funnel-plot-plotly-ggplot2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#interactive-funnel-plot-plotly-ggplot2",
    "title": "Hands-on Exercise 4",
    "section": "Interactive Funnel Plot: plotly + ggplot2",
    "text": "Interactive Funnel Plot: plotly + ggplot2\n\nfp_ggplotly <- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "pacman::p_load(rstatix, gt, patchwork, tidyverse, webshot2, png)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data,\n       aes(sample=ENGLISH)) +\n  stat_qq() +\n  stat_qq_line()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can see that the points deviate significantly from the straight diagonal line. This is a clear indication that the set of data is not normally distributed.\n\n\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nqq <- ggplot(exam_data,\n       aes(sample=ENGLISH)) +\n  stat_qq() +\n  stat_qq_line()\n\nsw_t <- exam_data %>%\n  shapiro_test(ENGLISH) %>%\n  gt()\n\ntmp <- tempfile(fileext = '.png')\ngtsave(sw_t, tmp)\ntable_png <- png::readPNG(tmp,\n                          native = TRUE)\n\nqq + table_png"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "This exercise aims to uncover the demographic and financial characteristics of the City of Engagement using appropriate analytical visualisation techniques. The visualization is designed using ggplot2, its extensions, and tidyverse packages.\nThe original dataset was originated from Vast Challenge 2022.\nThere are 2 files downloaded: FinancialJournal.csv and Participants.csv"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-preparation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-preparation",
    "title": "Take-home Exercise 1",
    "section": "2. Data Preparation",
    "text": "2. Data Preparation\n\n2.1 Install R packages and import dataset\nThe code chunk below uses pacman::p_load() to check if packages are installed. If they are, they will be launched into R.\n\n#Load packages\npacman::p_load(plotly, ggstatsplot, knitr, patchwork, ggdist, ggthemes, ggridges, viridis, gganimate, lubridate, tidyverse, ungeviz)\n\nImport data from csv using readr::read_csv().\n\n#Import data\nfinancial <- read_csv(\"data/FinancialJournal.csv\", show_col_types = FALSE)\n\nparticipants <- read_csv(\"data/Participants.csv\", show_col_types = FALSE)\n\n\n\n\n\n\n2.2 Data wrangling\nLooking at the data below, we notice a few problems\nParticipants:\n\nhaveKids is in <lgl> format and needs to be converted to binary\neducationLevel is in <chr> format. It needs to be converted to <fct> so that we can rank the levels from low to high\nage should be binned\n\nFinancial:\n\nThe time in timestamp is redundant and not meaningful and should be removed\nThe various financial categories in category should be separated and transposed into individual columns for ease of analysis\nCreate 2 new variables, Income and Expense, to sum the monthly income and expenses for each participant\n\nThereafter, the 2 tables should be merged into a new table\n\n\nShow the code\nparticipants\n\n\n# A tibble: 1,011 × 7\n   participantId householdSize haveKids   age educationLevel      interestGroup\n           <dbl>         <dbl> <lgl>    <dbl> <chr>               <chr>        \n 1             0             3 TRUE        36 HighSchoolOrCollege H            \n 2             1             3 TRUE        25 HighSchoolOrCollege B            \n 3             2             3 TRUE        35 HighSchoolOrCollege A            \n 4             3             3 TRUE        21 HighSchoolOrCollege I            \n 5             4             3 TRUE        43 Bachelors           H            \n 6             5             3 TRUE        32 HighSchoolOrCollege D            \n 7             6             3 TRUE        26 HighSchoolOrCollege I            \n 8             7             3 TRUE        27 Bachelors           A            \n 9             8             3 TRUE        20 Bachelors           G            \n10             9             3 TRUE        35 Bachelors           D            \n# ℹ 1,001 more rows\n# ℹ 1 more variable: joviality <dbl>\n\n\nShow the code\nfinancial\n\n\n# A tibble: 1,513,636 × 4\n   participantId timestamp           category  amount\n           <dbl> <dttm>              <chr>      <dbl>\n 1             0 2022-03-01 00:00:00 Wage      2473. \n 2             0 2022-03-01 00:00:00 Shelter   -555. \n 3             0 2022-03-01 00:00:00 Education  -38.0\n 4             1 2022-03-01 00:00:00 Wage      2047. \n 5             1 2022-03-01 00:00:00 Shelter   -555. \n 6             1 2022-03-01 00:00:00 Education  -38.0\n 7             2 2022-03-01 00:00:00 Wage      2437. \n 8             2 2022-03-01 00:00:00 Shelter   -557. \n 9             2 2022-03-01 00:00:00 Education  -12.8\n10             3 2022-03-01 00:00:00 Wage      2367. \n# ℹ 1,513,626 more rows\n\n\nis.na() function is also used to confirm that there are no missing values in the participants and financial datasets.\n\n\nShow the code\n#Check for missing values\nany(is.na(participants))\n\n\n[1] FALSE\n\n\nShow the code\nany(is.na(financial))\n\n\n[1] FALSE\n\n\nThe code chunk below performs the required data wrangling to clean participants and financial datasets and store them in new variable p and f2 respectively.\n\n\nShow the code\n#Data preparation\n#store participants dataset in new variable p\np <- participants \n\n#Reformat haveKids to binary\np$haveKids <- as.integer(p$haveKids)\n\n#Reformat educationLevel to factor\np$educationLevel <- as.factor(p$educationLevel)\n\n#Bin age variable\np$age <- cut(p$age, seq(0, 100, 10))\n\n#Store financial dataset in new variable f\nf <- financial \n\n#Remove time from timestamp\nf$timestamp <- format(as_datetime(f$timestamp), \"%Y-%m\")\nf$timestamp <- lubridate::ym(f$timestamp)\n\n#Split category and transpose to new columns\nf1 <- f %>% group_by(participantId) %>%\n  pivot_wider(\n    names_from = category, \n    values_from = amount, \n    values_fn = list(amount = sum),\n    values_fill = 0\n    )\n\n#Create new variables, Income and Expense. Convert Expense values to positive. Store as new table f2\nf2 <- f1 %>%\n    group_by(participantId, timestamp) %>% \n    mutate(Income=sum(Wage, RentAdjustment),\n           Expense=sum(Shelter, Education, Food, Recreation)\n           )\n\nf2$Expense <- abs(f2$Expense)\n\n#Create new variables, Annual_income and Annual_Expense. Store as new table f3\n\nf3 <- f2 %>%\n  group_by(participantId) %>%\n  transmute(Annual_income=sum(Income),\n         Annual_expense=sum(Expense)\n         ) %>%\n  distinct()\n\n#Merge the 2 tables, p and f2 into new table, nt\nnt <- left_join(p, f2,\nby = join_by(participantId == participantId))\n\n\nThe final dataset nt is displayed below using knitr::kable() function. The summary statistics for each of the variables is displayed below using psych::describe() function.\n\n\nShow the code\nkable(head(nt), \"simple\")\n\n\n\n\n\nparticipantId\nhouseholdSize\nhaveKids a\nge e\nducationLevel i\nnterestGroup\njoviality t\nimestamp\nWage\nShelter\nEducation\nRentAdjustment\nFood\nRecreation\nIncome\nExpense\n\n\n\n\n0\n3\n1\n(30,40]\nHighSchoolOrCollege\nH\n0.0016267\n2022-03-01\n11931.95\n-1109.9772\n-76.01076\n0\n-268.3380\n-348.7174\n11931.95\n1803.043\n\n\n0\n3\n1\n(30,40]\nHighSchoolOrCollege\nH\n0.0016267\n2022-04-01\n8636.88\n-554.9886\n-38.00538\n0\n-265.8560\n-219.4290\n8636.88\n1078.279\n\n\n0\n3\n1\n(30,40]\nHighSchoolOrCollege\nH\n0.0016267\n2022-05-01\n9048.16\n-554.9886\n-38.00538\n0\n-264.6161\n-383.0088\n9048.16\n1240.619\n\n\n0\n3\n1\n(30,40]\nHighSchoolOrCollege\nH\n0.0016267\n2022-06-01\n9048.16\n-554.9886\n-38.00538\n0\n-256.9723\n-465.6816\n9048.16\n1315.648\n\n\n0\n3\n1\n(30,40]\nHighSchoolOrCollege\nH\n0.0016267\n2022-07-01\n8636.88\n-554.9886\n-38.00538\n0\n-270.2128\n-1069.5441\n8636.88\n1932.751\n\n\n0\n3\n1\n(30,40]\nHighSchoolOrCollege\nH\n0.0016267\n2022-08-01\n9459.44\n-554.9886\n-38.00538\n0\n-261.8386\n-314.1417\n9459.44\n1168.974\n\n\n\n\n\nShow the code\npsych::describe(nt)\n\n\n                vars     n    mean      sd  median trimmed     mad      min\nparticipantId      1 10691  483.30  294.17  466.00  477.84  370.65     0.00\nhouseholdSize      2 10691    1.90    0.81    2.00    1.88    1.48     1.00\nhaveKids           3 10691    0.28    0.45    0.00    0.23    0.00     0.00\nage*               4 10691    4.34    1.26    4.00    4.39    1.48     2.00\neducationLevel*    5 10691    2.35    0.94    3.00    2.36    1.48     1.00\ninterestGroup*     6 10691    5.59    2.90    6.00    5.61    4.45     1.00\njoviality          7 10691    0.47    0.29    0.45    0.46    0.35     0.00\ntimestamp          8 10691     NaN      NA      NA     NaN      NA      Inf\nWage               9 10691 4265.05 2436.30 3613.88 3867.84 1786.00  1600.00\nShelter           10 10691 -683.48  325.00 -676.33 -646.97  230.46 -7385.95\nEducation         11 10691  -14.44   29.89    0.00   -6.63    0.00  -182.29\nRentAdjustment    12 10691    5.14   96.52    0.00    0.00    0.00     0.00\nFood              13 10691 -346.41   85.25 -308.58 -342.51   67.67  -590.42\nRecreation        14 10691 -387.55  249.97 -377.40 -373.71  201.59 -1962.10\nIncome            15 10691 4270.19 2444.33 3613.88 3870.78 1787.74  1600.00\nExpense           16 10691 1431.88  535.31 1403.69 1401.27  387.84    32.00\n                     max    range  skew kurtosis    se\nparticipantId    1010.00  1010.00  0.13    -1.17  2.85\nhouseholdSize       3.00     2.00  0.18    -1.44  0.01\nhaveKids            1.00     1.00  0.97    -1.06  0.00\nage*                6.00     4.00 -0.18    -1.09  0.01\neducationLevel*     4.00     3.00 -0.28    -1.14  0.01\ninterestGroup*     10.00     9.00 -0.05    -1.24  0.03\njoviality           1.00     1.00  0.21    -1.15  0.00\ntimestamp           -Inf     -Inf    NA       NA    NA\nWage            21334.65 19734.65  1.95     5.24 23.56\nShelter             0.00  7385.95 -3.09    35.31  3.14\nEducation           0.00   182.29 -2.51     7.00  0.29\nRentAdjustment   4809.28  4809.28 31.10  1187.56  0.93\nFood              -32.00   558.42 -0.13     0.41  0.82\nRecreation          0.00  1962.10 -0.90     2.50  2.42\nIncome          21334.65 19734.65  1.94     5.21 23.64\nExpense          9056.66  9024.66  1.51     9.94  5.18"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#visualisation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#visualisation",
    "title": "Take-home Exercise 1",
    "section": "3. Visualisation",
    "text": "3. Visualisation\n\n3.1 Exploratory Data Visualisation\nThe plots here are preliminary in nature but designed with interactivity to allow users to perform Exploratory Data Analysis (EDA) Visualisation to study the data. Hence plotly is mainly used.\n\n3.1.1 Demographic Distribution\n\nDesign Consideration\nBar charts and histograms are plotted to observe the overall distribution of the dataset. The graphs are placed in individual tabs for ease of reference.\n\nHousehold SizeHave Kids?AgeEducation LevelInterest GroupJoviality\n\n\n\n\nShow the code\ng <- ggplot(data = p,\n       aes(x = householdSize)) +\n  geom_bar(color=\"black\", fill=\"light blue\")\n\nggplotly(g)\n\n\n\n\n\n\n\n\n\n\nShow the code\ng <- ggplot(data = participants,\n       aes(x = haveKids)) +\n  geom_bar(color=\"black\", fill=\"light blue\")\n\nggplotly(g)\n\n\n\n\n\n\n\n\n\n\nShow the code\n#g <- ggplot(data = participants,\n#       aes(x = age)) +\n#  geom_histogram(bins=20,    \n#                 binwidth = 10,\n#                 color=\"black\",      \n#                 fill=\"light blue\")\n#ggplotly(g)\n\ng <- ggplot(data = p,\n       aes(x = age)) +\n  geom_bar(color=\"black\", fill=\"light blue\")\n\nggplotly(g)\n\n\n\n\n\n\n\n\n\n\nShow the code\ng <- ggplot(data = p,\n       aes(x = educationLevel)) +\n  geom_bar(color=\"black\", fill=\"light blue\")\n\nggplotly(g)\n\n\n\n\n\n\n\n\n\n\nShow the code\ng <- ggplot(data = p,\n       aes(x = interestGroup)) +\n  geom_bar(color=\"black\", fill=\"light blue\")\n\nggplotly(g)\n\n\n\n\n\n\n\n\n\n\nShow the code\ng <- ggplot(data = p,\n       aes(x = joviality)) +\n  geom_histogram(bins=20,    \n                 binwidth = 0.1,\n                 color=\"black\",      \n                 fill=\"light blue\")\nggplotly(g)\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\nAbout 70% of the participants do not have kid.\nThe smallest age group belong to seniors age 50-60 (11%).\nAbout 50% of the participants have up to high school or college education.\n\n\n\n\n3.1.2 Relationship Between Monthly Income and Other Variables\n\nDesign Consideration\nBoxplots are used to visualize the relationship between monthly income and other discrete variables. Violin plot is also be added to visualize the kernel density of the data.\n\nA dropdown menu is included to select variables for x-axis while the y-axis is monthly income.\nThe x-axis variables that can be selected are namely: householdSize, haveKids, age, educationLevel, and interestGroup. Note that month (timestamp) is treated as discrete variable as we want to find out any seasonal variations (statistically significant difference in mean/median) of price.\nTooltip is used to show mean, quartiles, and outliers.\nThe variables are Ordered by ascending order (mean).\n\nplot_ly is used to prepare the interactive plot. Steps taken are:\n\nBox visible argument is set to T to ensure the boxplot is visible. The same is applied to meanline visible.\nSet the opacity of the dots to 0.5 and the color of the meanline to dark pink to improve visualisation.\nLayout argument is used to add plot title, and y-axis title.\nThe updatemenus argument is used to create dropdown menu buttons.\nCategoryorder is set for each button to determine the order of discrete variables.\n\n\n\nShow the code\n#Initiating the base plot\nplot_ly(data = nt,\n        x = ~householdSize,\n        y = ~Income,\n        line = list(width =1),\n        type = \"violin\",\n        marker = list(opacity = 0.5,\n          line = list(width = 2)),\n        box = list(visible = T),\n        meanline = list(visible = T,\n                        color = \"rgb(231, 99, 250)\")) |> \n  \n#Generating plot and y-axis title  \n  layout(title = \"Distribution of Monthly Income by selected factors\",\n         xaxis = list(title = \"\"),\n         yaxis = list(title = \"Monthly Income\"),\n         \n#creating dropdown menus to allow selection of parameters on x-axis \n         updatemenus = list(list(type = 'dropdown',\n                                 xref = \"paper\",\n                                 yref = \"paper\",\n                                 xanchor = \"left\",\n                                 x = 0.04, \n                                 y = 0.95,\n                                 buttons = list(\n                                   list(method = \"update\",\n                                        args = list(list(x = list(nt$householdSize)),\n                                                    list(xaxis = list(categoryorder = \"category ascending\"))),\n                                        label = \"Household Size\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(nt$haveKids)),\n                                                    list(xaxis = list(categoryorder = \"category ascending\"))),\n                                        label = \"Have Kids?\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(nt$age)),\n                                                    list(xaxis = list(categoryorder = \"category ascending\"))),\n                                        label = \"Age Group\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(nt$educationLevel)),\n                                                    list(xaxis = list(categoryorder = \"mean ascending\"))),\n                                        label = \"Education Level\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(nt$interestGroup)),\n                                                    list(xaxis = list(categoryorder = \"category ascending\"))),\n                                        label = \"Interest Group\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(nt$timestamp)),\n                                                    list(xaxis = list(tickmode = \"array\")),\n                                                    list(color = list(nt$timestamp))),\n                                        label = \"Month\")\n                              \n                                   )\n                                 )\n                            )\n         )\n\n\n\n\n\n\n\n\nInsights\n\nThe median monthly income increases with household size.\nHouseholds with kids have higher median monthly income.\nAge group 30-40 has highest median monthly income ($3,806) while 40-50 has lowest median monthly income ($3,458).\nGraduates have the highest median monthly income ($5,523).\nInterest Group D has the highest median monthly income ($4,145) while E has the lowest ($3,226).\nMar 2022 registered the highest median monthly income ($5,800) while Feb 2023 registered the lowest ($3,191).\n\n\n\n\n3.1.3 Monthly Income Over the Months by Age Group and Education Level\n\nDesign Consideration\nRidgeline plot is a set of overlapped density plots, and it helps us to compare multiple distirbutions among dataset. They are useful for visualizing changes in distributions over time or space.\n\nAge GroupEducation Level\n\n\n\n\nShow the code\nggplot(data = nt, aes(x = Income, y = age, fill = after_stat(x))) +\n  \n  geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +\n  \n  theme_minimal() +\n  \n    labs(title = 'Monthly Income by age, Time: {frame_time}',\n       x = \"Monthly income\",\n       y = \"Age\") +\n  \n  theme(legend.position=\"none\",\n  text = element_text(family = \"Garamond\"),\n  plot.title = element_text(face = \"bold\", size = 12),\n  \n  axis.title.x = element_text(size = 10, hjust = 1),\n  axis.title.y = element_text(size = 10),\n  axis.text = element_text(size = 8)) +\n  \n  scale_fill_viridis(name = \"Income\", option = \"D\") +\n  \n  transition_time(nt$timestamp) +\n  ease_aes('linear')\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = nt, aes(x = Income, y = educationLevel, fill = after_stat(x))) +\n  \n  geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +\n  \n  theme_minimal() +\n  \n    labs(title = 'Monthly Income by Education Level, Time: {frame_time}',\n       x = \"Monthly Income\",\n       y = \"Education Level\") +\n  \n  theme(legend.position=\"none\",\n  text = element_text(family = \"Garamond\"),\n  plot.title = element_text(face = \"bold\", size = 12),\n  \n  axis.title.x = element_text(size = 10, hjust = 1),\n  axis.title.y = element_text(size = 10),\n  axis.text = element_text(size = 8)) +\n  \n  scale_fill_viridis(name = \"Wage\", option = \"D\") +\n  \n  transition_time(nt$timestamp) +\n  ease_aes('linear')\n\n\n\n\n\n\n\n\n\n\nInsights\n\nThere …\n\n\n\n\n\n3.2 Confirmatory Data Analysis Visualisation\nThe plots here are focused on visual statistical testing used in Confirmatory Data Analysis.\n\n3.2.1 Correlation Between Monthly Income and Monthly Expense\n\nDesign Consideration\nInteractive and correlation scatterplots are plotted to assess the correlation between monthly income and expense. Correlation scatterplot is also plotted to assess the correlation between monthly wage and joviality level.\n\nScatterplotCorrelation\n\n\n\n\nShow the code\np <- ggplot(data=nt, \n            aes(x = Expense,\n                y = Income)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,10000),\n                  ylim=c(0,22000))\nggplotly(p)\n\n\n\n\n\n\n\n\n\n\nShow the code\np <- ggstatsplot::ggscatterstats(\n  data=nt, \n  x = Expense,\n  y = Income,\n  marginal = FALSE\n  ) +\n  \n  theme_minimal() +\n  \n  labs(title = 'Correlation of Monthly Income and Monthly Expenses', x = \"Monthly Expense\", y = \"Monthly Income\") +\n\ntheme(text = element_text(family = \"Garamond\"),\n        plot.title = element_text(hjust = 0.2, size = 15, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\",\n        \n        axis.text = element_text(size = 10, face = \"bold\"),\n        axis.title = element_text(size = 12, face = \"bold\"))\np\n\n\n\n\n\n\n\n\n\n\nInsights\nThere is sufficient evidence to conclude that there is a significant linear relationship between monthly income and monthly expenses because the p-value (2.42e-49) < 0.05 and correlation coefficient (0.14) is significantly different from zero.\n\n\n\n3.2.2 Correlation Between Monthly Wage and Joviality\n\n\nShow the code\np <- ggstatsplot::ggscatterstats(\n  data=nt, \n  x = Wage,\n  y = joviality,\n  marginal = FALSE\n  ) +\n  \n  theme_minimal() +\n  \n  labs(title = 'Correlation of Monthly Wage and Joviality', x = \"Monthly Wage\", y = \"Joviality\") +\n\ntheme(text = element_text(family = \"Garamond\"),\n        plot.title = element_text(hjust = 0.2, size = 15, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\",\n        \n        axis.text = element_text(size = 10, face = \"bold\"),\n        axis.title = element_text(size = 12, face = \"bold\"))\np\n\n\n\n\n\n\nInsights\nThere is a significant negative linear relationship between monthly wage and joviality because the p-value (7.38e-195) < 0.05 and correlation coefficient (-0.284) is significantly different from zero..\n\n\n\n3.2.3 Difference in Monthly Income Across Age Groups\n\n\nShow the code\n#Order the age variables by median of monthly income\nnt$age <- fct_reorder(nt$age, nt$Income, median)\n\n#set the color pallete\ncol13_1 <- c(\"dodgerblue2\", \"#E31A1C\", \n  \"green4\",\n  \"#6A3D9A\", \n  \"#FF7F00\"\n  ) \n  \n#Initiating the base plot\np1 <- ggbetweenstats(\n  data = nt |> \n  group_by(age),\n  x = age, \n  y = Income, \n  ylab = \"Monthly Income\",\n  title = \"One-way ANOVA (age)\",\n  type = \"np\", \n  pairwise.comparisons = TRUE,\n  pairwise.display = \"ns\",\n  mean.ci = TRUE,\n  p.adjust.method = \"fdr\", \n  messages = FALSE \n  ) +\n  scale_color_manual(values = col13_1) +\n  theme(axis.title.x = element_blank()) +\n  scale_y_continuous(limits = c(0, 25000))\n\np1 + plot_annotation(\n  title = 'One-way ANOVA reveals differences in monthly income across different age groups',\n  subtitle = 'Monthly Income by Age',\n  theme = theme(plot.title = element_text(face = \"bold\", size = 12))\n)\n\n\n\n\n\n\nInsights\nAs noted above, the hypothesis testing is done using Kruskal-Wallis test with 95% confidence level for the individual plot. For each plot, the hypothesis is:\n\nH0 : There is no difference between median monthly income across age groups\nH1 : There is difference between median monthly income across age groups\n\n\n\n\n\n\n\nNote\n\n\n\nSince the p-value < critical value of 0.05, there is statistical evidence to reject the null hypothesis. We can conclude that there is difference in median monthly income across the age groups.\n\n\n\n\n\n3.2.4 Difference in Monthly Income Across Education Levels\n\n\nShow the code\n#Order the educationLevel variables by median of monthly income\nnt$age <- fct_reorder(nt$educationLevel, nt$Income, median)\n\n#set the color pallete\ncol13_1 <- c(\"dodgerblue2\", \"#E31A1C\", \n  \"green4\",\n  \"#6A3D9A\" \n  ) \n  \n#Initiating the base plot\np1 <- ggbetweenstats(\n  data = nt |> \n  group_by(educationLevel),\n  x = educationLevel, \n  y = Income, \n  ylab = \"Monthly Income\",\n  title = \"One-way ANOVA (education)\",\n  type = \"np\", \n  pairwise.comparisons = TRUE,\n  pairwise.display = \"ns\",\n  mean.ci = TRUE,\n  p.adjust.method = \"fdr\", \n  messages = FALSE \n  ) +\n  scale_color_manual(values = col13_1) +\n  theme(axis.title.x = element_blank()) +\n  scale_y_continuous(limits = c(0, 25000))\n\np1 + plot_annotation(\n  title = 'One-way ANOVA reveals differences in monthly income across education levels',\n  subtitle = 'Monthly Income by Education Levels',\n  theme = theme(plot.title = element_text(face = \"bold\", size = 12))\n)\n\n\n\n\n\n\n\n3.2.5 Normality Assumption\n\n\nShow the code\n##| fig-height: 11\n##| fig-width: 12.5\n\n#Computing summary statistics of mean, median and lower and upper whiskers in boxplot\nIncome_mean <- round(mean(nt$Income))\nIncome_median <- round(median(nt$Income))\nymax <- as.numeric(round((IQR(nt$Income)*1.5) +\n                quantile(nt$Income,0.75)))\nymin <- as.integer(min(nt$Income))\n\n#plotting histogram\nh <- ggplot(data = nt, aes(x = Income)) + \n  geom_histogram(color=\"black\", fill=\"azure4\", binwidth = 500) + \n  scale_x_continuous(limits = c(0,22000), labels = scales::comma) +\n  labs(x = \"Income\", y = \"Distribution\") +\n  geom_vline(aes(xintercept = Income_mean), col=\"darkblue\", linewidth=1) +\n  annotate(\"text\", x=6000, y=1800, label=\"Mean Income:\", \n           size=3, color=\"darkblue\") +\n  annotate(\"text\", x=5500, y=1700, label=format(Income_mean, big.mark = \",\"),\n           size=3, color=\"darkblue\") +\n  geom_vline(aes(xintercept = Income_median), col=\"lightpink4\", linewidth=1) +\n  annotate(\"text\", x=1800, y=1800, label=\"Median Income\", \n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=2400, y=1700, label=format(Income_median, big.mark = \",\"),\n           size=3, color=\"lightpink4\") +\n  theme(axis.text.x = element_text(size=8))\n\n#plotting boxplot\nb <- ggplot(data = nt, aes(y = Income)) + \n  geom_boxplot(outlier.colour=\"firebrick\", outlier.shape=16,\n               outlier.size=1, notch=FALSE) + \n  coord_flip() + labs(y = \"\", x = \"\") + \n  scale_y_continuous(limits = c(0,22000), labels = scales::comma) +\n  theme(axis.text = element_blank(), axis.ticks = element_blank()) + \n  stat_boxplot(geom=\"errorbar\", width=0.5) + \n  annotate(\"text\", x=0.35, y=ymax, label=format(ymax, big.mark = \",\"), \n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=0.35, y=ymin, label=format(ymin, big.mark = \",\"), \n           size=3, color=\"lightpink4\")\n\n#combining plots\nincome_distri <- b / h + plot_layout(heights = c(1, 4)) \n\nincome_distri + plot_annotation(title = \"Distribution of Monthly Income\", \n                               subtitle = \"There is a right-skewed distribution i.e. mean monthly income > median monthly income. There is also a large number of outliers (income >$9,115).\",\n                               theme = theme(\n                                 plot.title = element_text(size = 16),\n                                 plot.subtitle = element_text(size = 8)))\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can see that the monthly income has a right-skewed distribution. This is a clear indication that the set of data is not normally distributed.\n\n\n\nDesign Consideration\n\n\n\n\n\n\nNote\n\n\n\nSince we are unable to confirm normality assumption, one-sample Wilcoxon test will be used for hypothesis testing. Note that the null hypothesis is no difference in median monthly income.\n\n\nTo ensure that best practices (APA standard) of statistical reporting is followed, ggstatsplot library is used in this section. Median is used instead of mean as point estimates due to high presence of outliers and skewness of data. This will also complement the non-parametric test as well.\nPerform a one-sample Wilcoxon test to test the null hypothesis:\n\nH0: the monthly income median is equal to $3614\nH1: the monthly income median is different from $3614\n\n\n\nShow the code\nset.seed(1234)\n\ngghistostats(\n  data = nt,\n  x = Income,\n  type = \"nonparametric\",\n  test.value = 3614,\n  xlab = \"Income\"\n)\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nBased on the results of the test (at the significance level of 0.05), we reject the null hypothesis. There is enough evidence to conclude that the median monthly income is significantly different from $3614 (p-value = 4.47e-44).\n\n\n\n\n\n3.2.6 Visualising the Uncertainty of Median Estimates of Monthly Income by Age Group\n\n\nShow the code\ndevtools::install_github(\"wilkelab/ungeviz\")\nlibrary(ungeviz)\n\nggplot(data = nt, \n       (aes(x = age, y = Income))) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(25, group = age), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#install-r-packages-and-import-dataset",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#install-r-packages-and-import-dataset",
    "title": "Take-home Exercise 1",
    "section": "2.1 Install R packages and import dataset",
    "text": "2.1 Install R packages and import dataset\nThe code chunk below uses pacman::p_load() to check if packages are installed. If they are, they will be launched into R.\n\n#Load packages\npacman::p_load(plotly, ggstatsplot, knitr, patchwork, ggdist, ggthemes, ggridges, viridis, gganimate, lubridate, tidyverse, ungeviz, colorspace)\n\nImport data from csv using readr::read_csv().\n\n#Import data\nfinancial <- read_csv(\"data/FinancialJournal.csv\", show_col_types = FALSE)\n\nparticipants <- read_csv(\"data/Participants.csv\", show_col_types = FALSE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-wrangling",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-wrangling",
    "title": "Take-home Exercise 1",
    "section": "2.2 Data wrangling",
    "text": "2.2 Data wrangling\nLooking at the data below, we notice a few problems as follows:\nParticipants:\n\nhaveKids is in <lgl> format and needs to be converted to binary.\neducationLevel is in <chr> format. It needs to be converted to <fct> so that we can rank the levels from low to high.\nage can be binned for ease of trend visualisation.\n\nFinancial:\n\nThe time in timestamp is redundant and not meaningful and should be removed.\nThe various financial categories in category should be separated and transposed into individual columns for ease of analysis.\n2 new variables, Income and Expense, should be created to sum up the monthly income and expenses for each participant.\n\nThereafter, the 2 tables should be merged into a new table\n\n\nShow the code\nparticipants\n\n\n# A tibble: 1,011 × 7\n   participantId householdSize haveKids   age educationLevel      interestGroup\n           <dbl>         <dbl> <lgl>    <dbl> <chr>               <chr>        \n 1             0             3 TRUE        36 HighSchoolOrCollege H            \n 2             1             3 TRUE        25 HighSchoolOrCollege B            \n 3             2             3 TRUE        35 HighSchoolOrCollege A            \n 4             3             3 TRUE        21 HighSchoolOrCollege I            \n 5             4             3 TRUE        43 Bachelors           H            \n 6             5             3 TRUE        32 HighSchoolOrCollege D            \n 7             6             3 TRUE        26 HighSchoolOrCollege I            \n 8             7             3 TRUE        27 Bachelors           A            \n 9             8             3 TRUE        20 Bachelors           G            \n10             9             3 TRUE        35 Bachelors           D            \n# ℹ 1,001 more rows\n# ℹ 1 more variable: joviality <dbl>\n\n\nShow the code\nfinancial\n\n\n# A tibble: 1,513,636 × 4\n   participantId timestamp           category  amount\n           <dbl> <dttm>              <chr>      <dbl>\n 1             0 2022-03-01 00:00:00 Wage      2473. \n 2             0 2022-03-01 00:00:00 Shelter   -555. \n 3             0 2022-03-01 00:00:00 Education  -38.0\n 4             1 2022-03-01 00:00:00 Wage      2047. \n 5             1 2022-03-01 00:00:00 Shelter   -555. \n 6             1 2022-03-01 00:00:00 Education  -38.0\n 7             2 2022-03-01 00:00:00 Wage      2437. \n 8             2 2022-03-01 00:00:00 Shelter   -557. \n 9             2 2022-03-01 00:00:00 Education  -12.8\n10             3 2022-03-01 00:00:00 Wage      2367. \n# ℹ 1,513,626 more rows\n\n\nis.na() function is also used to confirm that there are no missing values in the participants and financial datasets.\n\n\nShow the code\n#Check for missing values\nany(is.na(participants))\n\n\n[1] FALSE\n\n\nShow the code\nany(is.na(financial))\n\n\n[1] FALSE\n\n\nThe code chunk below performs the required data wrangling to clean participants and financial datasets and store them in new variable p and f2 respectively.\n\n\nShow the code\n#Data preparation\n#store participants dataset in new variable p\np <- participants \n\n#Reformat haveKids to binary\np$haveKids <- as.integer(p$haveKids)\n\n#Reformat educationLevel to factor\np$educationLevel <- as.factor(p$educationLevel)\n\n#Bin age variable\np$age <- cut(p$age, seq(0, 100, 10))\n\n#Store financial dataset in new variable f\nf <- financial \n\n#Remove time from timestamp\nf$timestamp <- format(as_datetime(f$timestamp), \"%Y-%m\")\nf$timestamp <- lubridate::ym(f$timestamp)\n\n#Split category and transpose to new columns\nf1 <- f %>% group_by(participantId) %>%\n  pivot_wider(\n    names_from = category, \n    values_from = amount, \n    values_fn = list(amount = sum),\n    values_fill = 0\n    ) %>%\n  ungroup()\n\n#Create new variables, Income and Expense. Convert Expense values to positive. Store as new table f2\nf2 <- f1 %>%\n  group_by(participantId, timestamp) %>%\n  mutate(Income=sum(Wage, RentAdjustment),\n         Expense=sum(Shelter, Education, Food, Recreation)\n         ) %>%\n  ungroup()\n\nf2$Expense <- abs(f2$Expense)\n\n#Merge the 2 tables, p and f2 into new table, nt\nnt <- left_join(p, f2,\nby = join_by(participantId == participantId))\n\n\nThe final dataset nt is displayed below using knitr::kable() function. The summary statistics for each of the variables is displayed below using psych::describe() function.\n\n\nShow the code\nkable(head(nt), \"simple\")\n\n\n\n\n\nparticipantId\nhouseholdSize\nhaveKids a\nge e\nducationLevel i\nnterestGroup\njoviality t\nimestamp\nWage\nShelter\nEducation\nRentAdjustment\nFood\nRecreation\nIncome\nExpense\n\n\n\n\n0\n3\n1\n(30,40]\nHighSchoolOrCollege\nH\n0.0016267\n2022-03-01\n11931.95\n-1109.9772\n-76.01076\n0\n-268.3380\n-348.7174\n11931.95\n1803.043\n\n\n0\n3\n1\n(30,40]\nHighSchoolOrCollege\nH\n0.0016267\n2022-04-01\n8636.88\n-554.9886\n-38.00538\n0\n-265.8560\n-219.4290\n8636.88\n1078.279\n\n\n0\n3\n1\n(30,40]\nHighSchoolOrCollege\nH\n0.0016267\n2022-05-01\n9048.16\n-554.9886\n-38.00538\n0\n-264.6161\n-383.0088\n9048.16\n1240.619\n\n\n0\n3\n1\n(30,40]\nHighSchoolOrCollege\nH\n0.0016267\n2022-06-01\n9048.16\n-554.9886\n-38.00538\n0\n-256.9723\n-465.6816\n9048.16\n1315.648\n\n\n0\n3\n1\n(30,40]\nHighSchoolOrCollege\nH\n0.0016267\n2022-07-01\n8636.88\n-554.9886\n-38.00538\n0\n-270.2128\n-1069.5441\n8636.88\n1932.751\n\n\n0\n3\n1\n(30,40]\nHighSchoolOrCollege\nH\n0.0016267\n2022-08-01\n9459.44\n-554.9886\n-38.00538\n0\n-261.8386\n-314.1417\n9459.44\n1168.974\n\n\n\n\n\nShow the code\npsych::describe(nt)\n\n\n                vars     n    mean      sd  median trimmed     mad      min\nparticipantId      1 10691  483.30  294.17  466.00  477.84  370.65     0.00\nhouseholdSize      2 10691    1.90    0.81    2.00    1.88    1.48     1.00\nhaveKids           3 10691    0.28    0.45    0.00    0.23    0.00     0.00\nage*               4 10691    4.34    1.26    4.00    4.39    1.48     2.00\neducationLevel*    5 10691    2.35    0.94    3.00    2.36    1.48     1.00\ninterestGroup*     6 10691    5.59    2.90    6.00    5.61    4.45     1.00\njoviality          7 10691    0.47    0.29    0.45    0.46    0.35     0.00\ntimestamp          8 10691     NaN      NA      NA     NaN      NA      Inf\nWage               9 10691 4265.05 2436.30 3613.88 3867.84 1786.00  1600.00\nShelter           10 10691 -683.48  325.00 -676.33 -646.97  230.46 -7385.95\nEducation         11 10691  -14.44   29.89    0.00   -6.63    0.00  -182.29\nRentAdjustment    12 10691    5.14   96.52    0.00    0.00    0.00     0.00\nFood              13 10691 -346.41   85.25 -308.58 -342.51   67.67  -590.42\nRecreation        14 10691 -387.55  249.97 -377.40 -373.71  201.59 -1962.10\nIncome            15 10691 4270.19 2444.33 3613.88 3870.78 1787.74  1600.00\nExpense           16 10691 1431.88  535.31 1403.69 1401.27  387.84    32.00\n                     max    range  skew kurtosis    se\nparticipantId    1010.00  1010.00  0.13    -1.17  2.85\nhouseholdSize       3.00     2.00  0.18    -1.44  0.01\nhaveKids            1.00     1.00  0.97    -1.06  0.00\nage*                6.00     4.00 -0.18    -1.09  0.01\neducationLevel*     4.00     3.00 -0.28    -1.14  0.01\ninterestGroup*     10.00     9.00 -0.05    -1.24  0.03\njoviality           1.00     1.00  0.21    -1.15  0.00\ntimestamp           -Inf     -Inf    NA       NA    NA\nWage            21334.65 19734.65  1.95     5.24 23.56\nShelter             0.00  7385.95 -3.09    35.31  3.14\nEducation           0.00   182.29 -2.51     7.00  0.29\nRentAdjustment   4809.28  4809.28 31.10  1187.56  0.93\nFood              -32.00   558.42 -0.13     0.41  0.82\nRecreation          0.00  1962.10 -0.90     2.50  2.42\nIncome          21334.65 19734.65  1.94     5.21 23.64\nExpense          9056.66  9024.66  1.51     9.94  5.18"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#exploratory-data-visualisation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#exploratory-data-visualisation",
    "title": "Take-home Exercise 1",
    "section": "3.1 Exploratory Data Visualisation",
    "text": "3.1 Exploratory Data Visualisation\nThe plots here are preliminary in nature but designed with interactivity to allow users to perform Exploratory Data Analysis (EDA) Visualisation to study the data. Hence plotly is mainly used.\n\n3.1.1 Demographic Distribution\n\nDesign Consideration\nBar charts and histograms are plotted to observe the overall distribution of the dataset. The graphs are placed in individual tabs for ease of reference.\n\nHousehold SizeHave Kids?AgeEducation LevelInterest GroupJoviality\n\n\n\n\nShow the code\ng <- ggplot(data = p,\n       aes(x = householdSize)) +\n  geom_bar(color=\"black\", fill=\"light blue\") +\n  labs(title = 'Distribution by Household Size',\n       x = \"Household Size\",\n       y = \"Frequency\")\n\nggplotly(g)\n\n\n\n\n\n\n\n\n\n\nShow the code\ng <- ggplot(data = participants,\n       aes(x = haveKids)) +\n  geom_bar(color=\"black\", fill=\"light blue\") +\n  labs(title = 'Distribution by Households With/without Kids',\n       x = \"Have Kids\",\n       y = \"Frequency\") \n  \n\nggplotly(g)\n\n\n\n\n\n\n\n\n\n\nShow the code\ng <- ggplot(data = p,\n       aes(x = age)) +\n  geom_bar(color=\"black\", fill=\"light blue\") +\n  labs(title = 'Distribution by Age Group',\n       x = \"Age Group\",\n       y = \"Frequency\")\n\nggplotly(g)\n\n\n\n\n\n\n\n\n\n\nShow the code\ng <- ggplot(data = p,\n       aes(x = factor(educationLevel, levels=c(\"Low\", \"HighSchoolOrCollege\",  \"Bachelors\", \"Graduate\")))) +\n  geom_bar(color=\"black\", fill=\"light blue\") +\n  labs(title = 'Distribution by Education Level',\n       x = \"Education Level\",\n       y = \"Frequency\")\n\nggplotly(g)\n\n\n\n\n\n\n\n\n\n\nShow the code\ng <- ggplot(data = p,\n       aes(x = interestGroup)) +\n  geom_bar(color=\"black\", fill=\"light blue\") +\n  labs(title = 'Distribution by Interest Group',\n       x = \"Interest Group\",\n       y = \"Frequency\")\n\nggplotly(g)\n\n\n\n\n\n\n\n\n\n\nShow the code\nmybreaks <- c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)\n\ng <- ggplot(data = p,\n       aes(x = joviality)) +\n  geom_histogram(\n    data = p,\n    breaks = mybreaks,\n    color=\"black\",\n    fill=\"light blue\") +\n  scale_x_continuous(breaks = mybreaks) +\n  labs(title = 'Distribution by Joviality',\n       x = \"Joviality\",\n       y = \"Frequency\")\n\nggplotly(g)\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\nAbout 70% of the participants do not have kid.\nThe smallest age group belong to seniors age 50-60 (11%).\nAbout 50% of the participants have up to high school or college education.\n\n\n\n\n3.1.2 Relationship Between Monthly Income and Other Variables\n\nDesign Consideration\nBoxplots are used to visualize the relationship between monthly income and other discrete variables. Violin plot is also be added to visualize the kernel density of the data.\n\nA dropdown menu is included to select variables for x-axis while the y-axis is monthly income.\nThe x-axis variables that can be selected are namely: householdSize, haveKids, age, educationLevel, and interestGroup. Note that month (timestamp) is treated as discrete variable as we want to find out any seasonal variations (statistically significant difference in mean/median) of price.\nTooltip is used to show mean, quartiles, and outliers.\nThe variables are Ordered by ascending order.\n\nplot_ly is used to prepare the interactive plot. Steps taken are:\n\nBox visible argument is set to T to ensure the boxplot is visible. The same is applied to meanline visible.\nSet the opacity of the dots to 0.5 and the color of the meanline to dark pink to improve visualisation.\nLayout argument is used to add plot title, and y-axis title.\nThe updatemenus argument is used to create dropdown menu buttons.\nCategoryorder is set for each button to determine the order of discrete variables.\n\n\n\nShow the code\n#Initiating the base plot\nplot_ly(data = nt,\n        x = ~householdSize,\n        y = ~Income,\n        line = list(width =1),\n        type = \"violin\",\n        marker = list(opacity = 0.5,\n          line = list(width = 2)),\n        box = list(visible = T),\n        meanline = list(visible = T,\n                        color = \"rgb(231, 99, 250)\")) |> \n  \n#Generating plot and y-axis title  \n  layout(title = \"Distribution of Monthly Income by selected factors\",\n         xaxis = list(title = \"\"),\n         yaxis = list(title = \"Monthly Income\"),\n         \n#creating dropdown menus to allow selection of parameters on x-axis \n         updatemenus = list(list(type = 'dropdown',\n                                 xref = \"paper\",\n                                 yref = \"paper\",\n                                 xanchor = \"left\",\n                                 x = 0.04, \n                                 y = 0.95,\n                                 buttons = list(\n                                   list(method = \"update\",\n                                        args = list(list(x = list(nt$householdSize)),\n                                                    list(xaxis = list(categoryorder = \"category ascending\"))),\n                                        label = \"Household Size\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(nt$haveKids)),\n                                                    list(xaxis = list(categoryorder = \"category ascending\"))),\n                                        label = \"Have Kids?\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(nt$age)),\n                                                    list(xaxis = list(categoryorder = \"category ascending\"))),\n                                        label = \"Age Group\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(nt$educationLevel)),\n                                                    list(xaxis = list(categoryorder = \"mean ascending\"))),\n                                        label = \"Education Level\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(nt$interestGroup)),\n                                                    list(xaxis = list(categoryorder = \"category ascending\"))),\n                                        label = \"Interest Group\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(nt$timestamp)),\n                                                    list(xaxis = list(tickmode = \"array\")),\n                                                    list(color = list(nt$timestamp))),\n                                        label = \"Month\")\n                              \n                                   )\n                                 )\n                            )\n         )\n\n\n\n\n\n\n\n\nInsights\n\nThe median monthly income increases with household size.\nHouseholds with kids have higher median monthly income.\nAge group 30-40 has highest median monthly income ($3,806) while 40-50 has lowest median monthly income ($3,458).\nGraduates have the highest median monthly income ($5,523).\nInterest Group D has the highest median monthly income ($4,145) while E has the lowest ($3,226).\nMar 2022 registered the highest median monthly income ($5,800) while Feb 2023 registered the lowest ($3,191).\n\n\n\n\n3.1.3 Monthly Income Over the Months by Age Group and Education Level\n\nDesign Consideration\nRidgeline plot is used to reveal the distribution of monthly income for age and education level variables. It is useful for visualization as distribution can be represented using histograms or density plots, all aligned to the same horizontal scale and presented with a slight overlap.\n\nAge GroupEducation Level\n\n\n\n\nShow the code\nwindowsFonts(\"Garamond\" = windowsFont(\"Garamond\"))\n\nggplot(data = nt, aes(x = Income, y = age, fill = after_stat(x))) +\n  \n  geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +\n  \n  theme_ridges() +\n  \n    labs(title = 'Monthly Income by Age Group, Time: {frame_time}',\n       x = \"Monthly income\",\n       y = \"Age\") +\n  \n  theme(legend.position=\"none\",\n  text = element_text(family = \"Garamond\"),\n  plot.title = element_text(face = \"bold\", size = 12),\n  \n  axis.title.x = element_text(size = 10, hjust = 1),\n  axis.title.y = element_text(size = 10),\n  axis.text = element_text(size = 8)) +\n  \n  scale_fill_viridis_c(name = \"Income\", option = \"C\") +\n  \n  transition_time(nt$timestamp) +\n  ease_aes('linear')\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = nt, aes(x = Income, y = factor(educationLevel, levels=c(\"Low\", \"HighSchoolOrCollege\",  \"Bachelors\", \"Graduate\")), fill = after_stat(x))) +\n  \n  geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +\n  \n  theme_ridges() +\n  \n    labs(title = 'Monthly Income by Education Level, Time: {frame_time}',\n       x = \"Monthly Income\",\n       y = \"Education Level\") +\n  \n  theme(legend.position=\"none\",\n  text = element_text(family = \"Garamond\"),\n  plot.title = element_text(face = \"bold\", size = 12),\n  \n  axis.title.x = element_text(size = 10, hjust = 1),\n  axis.title.y = element_text(size = 10),\n  axis.text = element_text(size = 8)) +\n  \n  scale_fill_viridis(name = \"Income\", option = \"C\") +\n  \n  transition_time(nt$timestamp) +\n  ease_aes('linear')\n\n\n\n\n\n\n\n\n\n\nInsights\n\nThe monthly income across the different age groups and education levels is more or less contained within the period of the dataset. This could be due to only 12 months of data given.\nNormal distribution is generally observed except for age group 30-40 and graduate education level."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#confirmatory-data-analysis-visualisation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#confirmatory-data-analysis-visualisation",
    "title": "Take-home Exercise 1",
    "section": "3.2 Confirmatory Data Analysis Visualisation",
    "text": "3.2 Confirmatory Data Analysis Visualisation\nThe plots here are focused on visual statistical testing used in Confirmatory Data Analysis.\n\n3.2.1 Correlation Scatterplots\n\nDesign Consideration\nCorrelation scatterplot is used to assess the correlation between monthly income and expense as well as the correlation between monthly wage and joviality level.\n\nMonthly Income vs. ExpenseMonthly Wage vs. Joviality\n\n\n\n\nShow the code\nie <- ggscatterstats(\n  data=nt, \n  x = Expense,\n  y = Income,\n  marginal = FALSE\n  ) +\n  \n  theme_minimal() +\n  \n  labs(title = 'Correlation of Monthly Income and Monthly Expense', x = \"Monthly Expense\", y = \"Monthly Income\") +\n\ntheme(text = element_text(family = \"Garamond\"),\n        plot.title = element_text(hjust = 0.2, size = 15, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\",\n        \n        axis.text = element_text(size = 10, face = \"bold\"),\n        axis.title = element_text(size = 12, face = \"bold\"))\nie\n\n\n\n\n\n\n\n\n\nShow the code\nwj <- ggscatterstats(\n  data=nt, \n  x = Wage,\n  y = joviality,\n  marginal = FALSE\n  ) +\n  \n  theme_minimal() +\n  \n  labs(title = 'Correlation of Monthly Wage and Joviality', x = \"Monthly Wage\", y = \"Joviality\") +\n\ntheme(text = element_text(family = \"Garamond\"),\n        plot.title = element_text(hjust = 0.2, size = 15, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\",\n        \n        axis.text = element_text(size = 10, face = \"bold\"),\n        axis.title = element_text(size = 12, face = \"bold\"))\nwj\n\n\n\n\n\n\n\n\n\n\nInsights\nCorrelation between monthly income and expense:\nThere is sufficient evidence to conclude that there is a significant linear relationship between monthly income and monthly expenses because the p-value (2.42e-49) < 0.05 and correlation coefficient (0.14) is significantly different from zero.\nCorrelation between monthly wage and joviality:\nThere is a significant negative linear relationship between monthly wage and joviality because the p-value (7.38e-195) < 0.05 and correlation coefficient (-0.284) is significantly different from zero..\n\n\n\n3.2.2 Normality Assumption\n\nDesign Consideration\nWe want to confirm the normality assumption for distribution of monthly income.\n\n\nShow the code\n#Computing summary statistics of mean, median and lower and upper whiskers in boxplot\nIncome_mean <- round(mean(nt$Income))\nIncome_median <- round(median(nt$Income))\nymax <- as.numeric(round((IQR(nt$Income)*1.5) +\n                quantile(nt$Income,0.75)))\nymin <- as.integer(min(nt$Income))\n\n#plotting histogram\nh <- ggplot(data = nt, aes(x = Income)) + \n  geom_histogram(color=\"black\", fill=\"azure4\", binwidth = 500) + \n  scale_x_continuous(limits = c(0,22000), labels = scales::comma) +\n  labs(x = \"Income\", y = \"Distribution\") +\n  geom_vline(aes(xintercept = Income_mean), col=\"darkblue\", linewidth=1) +\n  annotate(\"text\", x=6000, y=1800, label=\"Mean Income:\", \n           size=3, color=\"darkblue\") +\n  annotate(\"text\", x=5500, y=1700, label=format(Income_mean, big.mark = \",\"),\n           size=3, color=\"darkblue\") +\n  geom_vline(aes(xintercept = Income_median), col=\"lightpink4\", linewidth=1) +\n  annotate(\"text\", x=1800, y=1800, label=\"Median Income\", \n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=2400, y=1700, label=format(Income_median, big.mark = \",\"),\n           size=3, color=\"lightpink4\") +\n  theme(axis.text.x = element_text(size=8))\n\n#plotting boxplot\nb <- ggplot(data = nt, aes(y = Income)) + \n  geom_boxplot(outlier.colour=\"firebrick\", outlier.shape=16,\n               outlier.size=1, notch=FALSE) + \n  coord_flip() + labs(y = \"\", x = \"\") + \n  scale_y_continuous(limits = c(0,22000), labels = scales::comma) +\n  theme(axis.text = element_blank(), axis.ticks = element_blank()) + \n  stat_boxplot(geom=\"errorbar\", width=0.5) + \n  annotate(\"text\", x=0.35, y=ymax, label=format(ymax, big.mark = \",\"), \n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=0.35, y=ymin, label=format(ymin, big.mark = \",\"), \n           size=3, color=\"lightpink4\")\n\n#combining plots\nincome_distri <- b / h + plot_layout(heights = c(1, 4)) \n\nincome_distri + plot_annotation(title = \"Distribution of Monthly Income\", \n                               subtitle = \"There is a right-skewed distribution i.e. mean monthly income > median monthly income.\\n There is also a large number of outliers (income >$9,115).\",\n                               theme = theme(\n                                 plot.title = element_text(size = 16),\n                                 plot.subtitle = element_text(size = 10)))\n\n\n\n\n\nWe can see that the monthly income has a right-skewed distribution. This is a clear indication that the set of data is not normally distributed.\nSince we are unable to confirm normality assumption, one-sample Wilcoxon test will be used for hypothesis testing. Note that the null hypothesis is no difference in median monthly income.\nTo ensure that best practices (APA standard) of statistical reporting is followed, ggstatsplot library is used in this section. Median is used instead of mean as point estimates due to high presence of outliers and skewness of data. This will also complement the non-parametric test as well.\nPerform a one-sample Wilcoxon test to test the null hypothesis:\n\nH0: the monthly income median is equal to $3614\nH1: the monthly income median is different from $3614\n\n\n\nShow the code\nset.seed(1234)\n\ngghistostats(\n  data = nt,\n  x = Income,\n  type = \"nonparametric\",\n  test.value = 3614,\n  xlab = \"Income\"\n)\n\n\n\n\n\n\n\nInsights\nBased on the results of the test (at the significance level of 0.05), we reject the null hypothesis. There is enough evidence to conclude that the median monthly income is significantly different from $3614 (p-value = 4.47e-44).\n\n\n\n3.2.3 Difference in Monthly Income by Age Group and Education Level\n\nDesign Consideration\nWe want to confirm the normality assumption for distribution of monthly income by age group and education level.\n\nAge GroupEducation Level\n\n\n\n\nShow the code\n#Order the age variables by median of monthly income\nnt1 <- nt\nnt1$age <- fct_reorder(nt1$age, nt1$Income, median)\n\n#set the color pallete\ncol13_1 <- c(\"dodgerblue2\", \"#E31A1C\", \n  \"green4\",\n  \"#6A3D9A\", \n  \"#FF7F00\"\n  ) \n  \n#Initiating the base plot\np1 <- ggbetweenstats(\n  data = nt1 |> \n  group_by(age),\n  x = age, \n  y = Income, \n  ylab = \"Monthly Income\",\n  title = \"One-way ANOVA (age)\",\n  type = \"np\", \n  pairwise.comparisons = TRUE,\n  pairwise.display = \"ns\",\n  mean.ci = TRUE,\n  p.adjust.method = \"fdr\", \n  messages = FALSE \n  ) +\n  scale_color_manual(values = col13_1) +\n  theme(axis.title.x = element_blank()) +\n  scale_y_continuous(limits = c(0, 25000))\n\np1 + plot_annotation(\n  title = 'One-way ANOVA reveals differences in monthly income across different age groups',\n  subtitle = 'Monthly Income by Age',\n  theme = theme(plot.title = element_text(face = \"bold\", size = 12))\n)\n\n\n\n\n\n\n\n\n\nShow the code\n#Order the educationLevel variables by median of monthly income\nnt1$educationLevel <- fct_reorder(nt1$educationLevel, nt1$Income, median)\n\n#set the color pallete\ncol13_1 <- c(\"dodgerblue2\", \"#E31A1C\", \n  \"green4\",\n  \"#6A3D9A\" \n  ) \n  \n#Initiating the base plot\np1 <- ggbetweenstats(\n  data = nt1 |> \n  group_by(educationLevel),\n  x = educationLevel, \n  y = Income, \n  ylab = \"Monthly Income\",\n  title = \"One-way ANOVA (education level)\",\n  type = \"np\", \n  pairwise.comparisons = TRUE,\n  pairwise.display = \"ns\",\n  mean.ci = TRUE,\n  p.adjust.method = \"fdr\", \n  messages = FALSE \n  ) +\n  scale_color_manual(values = col13_1) +\n  theme(axis.title.x = element_blank()) +\n  scale_y_continuous(limits = c(0, 25000))\n\np1 + plot_annotation(\n  title = 'One-way ANOVA reveals differences in monthly income across education levels',\n  subtitle = 'Monthly Income by Education Levels',\n  theme = theme(plot.title = element_text(face = \"bold\", size = 12))\n)\n\n\n\n\n\n\n\n\n\n\nInsights\nBy age group:\nAs noted above, the hypothesis testing is done using Kruskal-Wallis test with 95% confidence level. The hypothesis is:\n\nH0 : There is no difference between median monthly income across age groups\nH1 : There is difference between median monthly income across age groups\n\nSince the p-value < critical value of 0.05, there is statistical evidence to reject the null hypothesis. We can conclude that there is significant difference in median monthly income across the age groups.\nBy education level:\nThe hypothesis is:\n\nH0 : There is no difference between median monthly income across education level\nH1 : There is difference between median monthly income across education level\n\nSince the p-value < critical value of 0.05, there is statistical evidence to reject the null hypothesis. We can conclude that there is significant difference in median monthly income across the education levels.\n\n\n\n3.2.4 Visualising Uncertainty of Monthly Income by Age Group and Education Level\n\nDesign Consideration\nWe would like to visualize the uncertainties surrounding the mean or median point estimates of the monthly income. Median point estimates are used instead of mean due to high presence of outliers and skewness of data. With this, user can still relate to the above one-way ANOVA analysis.\nWith median used as point estimate, quantile interval is used instead of confidence interval.\n95% and 99% intervals are used as they are commonly associated with 5% and 1% error rate, which are commonly used in hypothesis testing.\n\nAge GroupEducation Level\n\n\n\n\nShow the code\n#Base ggplot\nggplot(\n  data = nt,\n  aes(x = factor(age),\n      y = Income)) +\n  \n#Using stat_pointinterval to plot the points and intervals\n  stat_pointinterval(\n    aes(interval_color = stat(level)),\n    .width = c(0.95, 0.99),\n    .point = median,\n    .interval = qi,\n    point_color = \"darkred\",\n    show.legend = FALSE) +\n\n#Defining the color of the intervals \n  scale_color_manual(\n    values = c(\"blue2\", \"darkblue\"),\n    aesthetics = \"interval_color\") +\n  \n#Title, subtitle, and caption\n  labs(title = 'Visualising uncertainty in median estimates of monthly income by age group',\n  subtitle = 'Quantiles intervals (95% and 99%) of monthly income by Age Group',\n  x = \"Age Group\",\n  y = \"Monthly Income\") +\n  \n  theme_hc() +\n  \n  theme(plot.title = element_text(face = \"bold\", size = 12),\n        plot.subtitle = element_text(size = 10),\n        axis.text.x = element_text(hjust = 1))\n\n\n\n\n\n\n\n\n\nShow the code\n#Base ggplot\nggplot(\n  data = nt,\n  aes(x = factor(educationLevel, levels=c(\"Low\", \"HighSchoolOrCollege\",  \"Bachelors\", \"Graduate\")),\n      y = Income)) +\n  \n#Using stat_pointinterval to plot the points and intervals\n  stat_pointinterval(\n    aes(interval_color = stat(level)),\n    .width = c(0.95, 0.99),\n    .point = median,\n    .interval = qi,\n    point_color = \"darkred\",\n    show.legend = FALSE) +\n\n#Defining the color of the intervals \n  scale_color_manual(\n    values = c(\"blue2\", \"darkblue\"),\n    aesthetics = \"interval_color\") +\n  \n#Title, subtitle, and caption\n  labs(title = 'Visualising uncertainty in median estimates of monthly income by education level',\n  subtitle = 'Quantiles intervals (95% and 99%) of monthly income by education level',\n  x = \"Education Level\",\n  y = \"Monthly Income\") +\n  \n  theme_hc() +\n  \n  theme(plot.title = element_text(face = \"bold\", size = 10),\n        plot.subtitle = element_text(size = 9),\n        axis.text.x = element_text(hjust = 1))\n\n\n\n\n\n\n\n\n\n\nInsights\n\nAs noted above, age group 10-20 and 50-60 have higher uncertainties in the median estimates of the monthly income.\nBachelors and Graduates have higher uncertainties in the median estimates of the monthly income.\n\nVisualizing uncertainty of monthly income using Hypothetical Outcomes Plots based on 100 random samples:\n\nAge GroupEducation Level\n\n\n\n\nShow the code\nggplot(data = nt, \n       (aes(x = factor(age), y = Income))) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(100, group = age), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3) +\n  \n  #Title, subtitle, and caption\n  labs(title = 'Visualising uncertainty in monthly income by age group',\n  x = \"Age Group\",\n  y = \"Monthly Income\")\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = nt, \n       (aes(x = factor(educationLevel, levels=c(\"Low\", \"HighSchoolOrCollege\",  \"Bachelors\", \"Graduate\")), y = Income))) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(100, group = educationLevel), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3) +\n  \n  #Title, subtitle, and caption\n  labs(title = 'Visualising uncertainty in monthly income by education level',\n  x = \"Education Level\",\n  y = \"Monthly Income\")\n\n\n\n\n\n\n\n\n\n\nInsights\n\nAs noted above, age group 20-30 and 30-40 have higher uncertainties in the median estimates of the monthly income.\nBachelors and Graduates have higher uncertainties in the monthly income."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#age-group",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#age-group",
    "title": "Take-home Exercise 1",
    "section": "Age Group",
    "text": "Age Group\n\nEducation Level\n\n\n\n\nShow the code\nggplot(data = nt, aes(x = Income, y = educationLevel, fill = after_stat(x))) +\n  \n  geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +\n  \n  theme_ridges() +\n  \n    labs(title = 'Monthly Income by Education Level, Time: {frame_time}',\n       x = \"Monthly Income\",\n       y = \"Education Level\") +\n  \n  theme(legend.position=\"none\",\n  text = element_text(family = \"Garamond\"),\n  plot.title = element_text(face = \"bold\", size = 12),\n  \n  axis.title.x = element_text(size = 10, hjust = 1),\n  axis.title.y = element_text(size = 10),\n  axis.text = element_text(size = 8)) +\n  \n  scale_fill_viridis(name = \"Income\", option = \"C\") +\n  \n  transition_time(nt$timestamp) +\n  ease_aes('linear')\n\n\n\n\n\n\n\n\n\nInsights\n\nThere"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "pacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)\n\n\n\n\n\nGAStech_nodes <- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges <- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\n\n\n\n\nGAStech_edges <- GAStech_edges %>%\n  mutate(SendDate = dmy(SentDate)) %>%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\n\n\n\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(source, target, Weekday) %>%\n    summarise(Weight = n()) %>%\n  filter(source!=target) %>%\n  filter(Weight > 1) %>%\n  ungroup()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-tbl_graph-to-build-tidygraph-data-model.",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-tbl_graph-to-build-tidygraph-data-model.",
    "title": "Hands-on Exercise 5",
    "section": "Using tbl_graph() to build tidygraph data model.",
    "text": "Using tbl_graph() to build tidygraph data model.\n\nGAStech_graph <- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reviewing-the-output-tidygraphs-graph-object",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reviewing-the-output-tidygraphs-graph-object",
    "title": "Hands-on Exercise 5",
    "section": "Reviewing the output tidygraph’s graph object",
    "text": "Reviewing the output tidygraph’s graph object\n\nGAStech_graph\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 54 × 4\n     id label               Department     Title                                \n  <dbl> <chr>               <chr>          <chr>                                \n1     1 Mat.Bramar          Administration Assistant to CEO                     \n2     2 Anda.Ribera         Administration Assistant to CFO                     \n3     3 Rachel.Pantanal     Administration Assistant to CIO                     \n4     4 Linda.Lagos         Administration Assistant to COO                     \n5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Manag…\n6     6 Carla.Forluniau     Administration Assistant to IT Group Manager        \n# ℹ 48 more rows\n#\n# A tibble: 1,372 × 4\n   from    to Weekday Weight\n  <int> <int> <ord>    <int>\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-active-object",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-active-object",
    "title": "Hands-on Exercise 5",
    "section": "Changing the active object",
    "text": "Changing the active object\n\nGAStech_graph %>%\n  activate(edges) %>%\n  arrange(desc(Weight))\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 1,372 × 4\n   from    to Weekday  Weight\n  <int> <int> <ord>     <int>\n1    40    41 Saturday     13\n2    41    43 Monday       11\n3    35    31 Tuesday      10\n4    40    41 Monday       10\n5    40    43 Monday       10\n6    36    32 Sunday        9\n# ℹ 1,366 more rows\n#\n# A tibble: 54 × 4\n     id label           Department     Title           \n  <dbl> <chr>           <chr>          <chr>           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-a-basic-network-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-a-basic-network-graph",
    "title": "Hands-on Exercise 5",
    "section": "Plotting a basic network graph",
    "text": "Plotting a basic network graph\n\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-default-network-graph-theme",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-default-network-graph-theme",
    "title": "Hands-on Exercise 5",
    "section": "Changing the default network graph theme",
    "text": "Changing the default network graph theme\n\ng <- ggraph(GAStech_graph) + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-coloring-of-the-plot",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-coloring-of-the-plot",
    "title": "Hands-on Exercise 5",
    "section": "Changing the coloring of the plot",
    "text": "Changing the coloring of the plot\n\ng <- ggraph(GAStech_graph) + \n  geom_edge_link(aes(colour = 'grey50')) +\n  geom_node_point(aes(colour = 'grey40'))\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#fruchterman-and-reingold-layout",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#fruchterman-and-reingold-layout",
    "title": "Hands-on Exercise 5",
    "section": "Fruchterman and Reingold layout",
    "text": "Fruchterman and Reingold layout\n\ng <- ggraph(GAStech_graph, \n            layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-network-nodes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-network-nodes",
    "title": "Hands-on Exercise 5",
    "section": "Modifying network nodes",
    "text": "Modifying network nodes\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes(colour = Department, \n                      size = 3))\n\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-edges",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-edges",
    "title": "Hands-on Exercise 5",
    "section": "Modifying edges",
    "text": "Modifying edges\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\n\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edges",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edges",
    "title": "Hands-on Exercise 5",
    "section": "Working with facet_edges()",
    "text": "Working with facet_edges()\n\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n\ng + facet_edges(~Weekday)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edges-1",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edges-1",
    "title": "Hands-on Exercise 5",
    "section": "Working with facet_edges()",
    "text": "Working with facet_edges()\n\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2) +\n  theme(legend.position = 'bottom')\n  \ng + facet_edges(~Weekday)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#a-framed-facet-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#a-framed-facet-graph",
    "title": "Hands-on Exercise 5",
    "section": "A framed facet graph",
    "text": "A framed facet graph\n\nset_graph_style() \n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_edges(~Weekday) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_nodes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_nodes",
    "title": "Hands-on Exercise 5",
    "section": "Working with facet_nodes()",
    "text": "Working with facet_nodes()\n\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_nodes(~Department)+\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#computing-centrality-indices",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#computing-centrality-indices",
    "title": "Hands-on Exercise 5",
    "section": "Computing centrality indices",
    "text": "Computing centrality indices\n\ng <- GAStech_graph %>%\n  mutate(betweenness_centrality = centrality_betweenness()) %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department,\n            size=betweenness_centrality))\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-network-metrics",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-network-metrics",
    "title": "Hands-on Exercise 5",
    "section": "Visualising network metrics",
    "text": "Visualising network metrics\n\ng <- GAStech_graph %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department, \n                      size = centrality_betweenness()))\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-community",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-community",
    "title": "Hands-on Exercise 5",
    "section": "Visualising Community",
    "text": "Visualising Community\n\ng <- GAStech_graph %>%\n  mutate(community = as.factor(group_edge_betweenness(weights = Weight, directed = TRUE))) %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = community))  \n\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-preparation",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-preparation",
    "title": "Hands-on Exercise 5",
    "section": "Data preparation",
    "text": "Data preparation\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %>%\n  rename(from = id) %>%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %>%\n  rename(to = id) %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(from, to) %>%\n    summarise(weight = n()) %>%\n  filter(from!=to) %>%\n  filter(weight > 1) %>%\n  ungroup()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-the-first-interactive-network-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-the-first-interactive-network-graph",
    "title": "Hands-on Exercise 5",
    "section": "Plotting the first interactive network graph",
    "text": "Plotting the first interactive network graph\n\nvisNetwork(GAStech_nodes, \n           GAStech_edges_aggregated)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-layout",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-layout",
    "title": "Hands-on Exercise 5",
    "section": "Working with layout",
    "text": "Working with layout\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---nodes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---nodes",
    "title": "Hands-on Exercise 5",
    "section": "Working with visual attributes - Nodes",
    "text": "Working with visual attributes - Nodes\n\nGAStech_nodes <- GAStech_nodes %>%\n  rename(group = Department) \n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---edges",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---edges",
    "title": "Hands-on Exercise 5",
    "section": "Working with visual attributes - Edges",
    "text": "Working with visual attributes - Edges\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#interactivity",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#interactivity",
    "title": "Hands-on Exercise 5",
    "section": "Interactivity",
    "text": "Interactivity\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In-class_Ex05",
    "section": "",
    "text": "Show the code\npacman::p_load(jsonlite, igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)\n\n\n\n\n\n\n\nShow the code\nMC1 <- fromJSON(\"data/MC1.json\")\n\n\n\n\n\n\n\nShow the code\nMC1_nodes <- as_tibble(MC1$nodes) %>%\n  select(id, type, country)\n\n\n\n\nShow the code\nMC1_edges <- as_tibble(MC1$links) %>%\n  select(source, target, type, weight, key)"
  }
]