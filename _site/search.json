[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "title": "Hands-on Exercise 2",
    "section": "Working with ggrepel",
    "text": "Working with ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "title": "Hands-on Exercise 2",
    "section": "Working with ggtheme package",
    "text": "Working with ggtheme package\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthems-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthems-package",
    "title": "Hands-on Exercise 2",
    "section": "Working with hrbthems package",
    "text": "Working with hrbthems package\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-pathwork-methods",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-pathwork-methods",
    "title": "Hands-on Exercise 2",
    "section": "Creating Composite Graphics: pathwork methods",
    "text": "Creating Composite Graphics: pathwork methods"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "title": "Hands-on Exercise 2",
    "section": "Combining two ggplot2 graphs",
    "text": "Combining two ggplot2 graphs\n\np1 + p2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "title": "Hands-on Exercise 2",
    "section": "Combining three ggplot2 graphs",
    "text": "Combining three ggplot2 graphs\n\n(p1 / p2) | p3"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "title": "Hands-on Exercise 2",
    "section": "Creating a composite figure with tag",
    "text": "Creating a composite figure with tag\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "title": "Hands-on Exercise 2",
    "section": "Creating figure with insert",
    "text": "Creating figure with insert\n\np12 <- p1|p2\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "title": "Hands-on Exercise 2",
    "section": "Creating a composite figure by using patchwork and ggtheme",
    "text": "Creating a composite figure by using patchwork and ggtheme\n\npatchwork <- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#tooltip-effect-with-tooltip-aesthetic",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#tooltip-effect-with-tooltip-aesthetic",
    "title": "Hands-on Exercise 3",
    "section": "Tooltip effect with tooltip aesthetic",
    "text": "Tooltip effect with tooltip aesthetic\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-multiple-information-on-tooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-multiple-information-on-tooltip",
    "title": "Hands-on Exercise 3",
    "section": "Displaying multiple information on tooltip",
    "text": "Displaying multiple information on tooltip\n\nexam_data$tooltip <- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#customising-tooltip-style",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#customising-tooltip-style",
    "title": "Hands-on Exercise 3",
    "section": "Customising Tooltip style",
    "text": "Customising Tooltip style\n\ntooltip_css <- \"background-color:white; #<<\nfont-style:bold; color:black;\" #<<\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #<<\n    opts_tooltip(    #<<\n      css = tooltip_css)) #<<\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-statistics-on-tooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-statistics-on-tooltip",
    "title": "Hands-on Exercise 3",
    "section": "Displaying statistics on tooltip",
    "text": "Displaying statistics on tooltip\n\ntooltip <- function(y, ymax, accuracy = .01) {\n  mean <- scales::number(y, accuracy = accuracy)\n  sem <- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point <- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#hover-effect-with-data_id-aesthetic",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#hover-effect-with-data_id-aesthetic",
    "title": "Hands-on Exercise 3",
    "section": "Hover effect with data_id aesthetic",
    "text": "Hover effect with data_id aesthetic\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#styling-hover-effect",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#styling-hover-effect",
    "title": "Hands-on Exercise 3",
    "section": "Styling hover effect",
    "text": "Styling hover effect\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#combining-tooltip-and-hover-effect",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#combining-tooltip-and-hover-effect",
    "title": "Hands-on Exercise 3",
    "section": "Combining tooltip and hover effect",
    "text": "Combining tooltip and hover effect\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#click-effect-with-onclick",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#click-effect-with-onclick",
    "title": "Hands-on Exercise 3",
    "section": "Click effect with onclick",
    "text": "Click effect with onclick\n\nexam_data$onclick <- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-ggiraph",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-ggiraph",
    "title": "Hands-on Exercise 3",
    "section": "Coordinated Multiple Views with ggiraph",
    "text": "Coordinated Multiple Views with ggiraph\n\np1 <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 <- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "title": "Hands-on Exercise 3",
    "section": "Creating an interactive scatter plot: plot_ly() method",
    "text": "Creating an interactive scatter plot: plot_ly() method\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-visual-variable-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-visual-variable-plot_ly-method",
    "title": "Hands-on Exercise 3",
    "section": "Working with visual variable: plot_ly() method",
    "text": "Working with visual variable: plot_ly() method\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "title": "Hands-on Exercise 3",
    "section": "Creating an interactive scatter plot: ggplotly() method",
    "text": "Creating an interactive scatter plot: ggplotly() method\n\np <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-plotly",
    "title": "Hands-on Exercise 3",
    "section": "Coordinated Multiple Views with plotly",
    "text": "Coordinated Multiple Views with plotly\n\nd <- highlight_key(exam_data)\np1 <- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 <- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table-dt-package",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table-dt-package",
    "title": "Hands-on Exercise 3",
    "section": "Interactive Data Table: DT package",
    "text": "Interactive Data Table: DT package\n\nDT::datatable(exam_data, class= \"compact\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk-method",
    "title": "Hands-on Exercise 3",
    "section": "Linked brushing: crosstalk method",
    "text": "Linked brushing: crosstalk method\n\nd <- highlight_key(exam_data) \np <- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg <- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#install-and-launching-r-packages-1",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#install-and-launching-r-packages-1",
    "title": "Hands-on Exercise 3",
    "section": "Install and launching R packages",
    "text": "Install and launching R packages\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#importing-the-data-1",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#importing-the-data-1",
    "title": "Hands-on Exercise 3",
    "section": "Importing the data",
    "text": "Importing the data\n\ncol <- c(\"Country\", \"Continent\")\nglobalPop <- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %>%\n  mutate_each_(funs(factor(.)), col) %>%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-a-static-population-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-a-static-population-bubble-plot",
    "title": "Hands-on Exercise 3",
    "section": "Building a static population bubble plot",
    "text": "Building a static population bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-the-animated-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-the-animated-bubble-plot",
    "title": "Hands-on Exercise 3",
    "section": "Building the animated bubble plot",
    "text": "Building the animated bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-an-animated-bubble-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-an-animated-bubble-plot-ggplotly-method",
    "title": "Hands-on Exercise 3",
    "section": "Building an animated bubble plot: ggplotly() method",
    "text": "Building an animated bubble plot: ggplotly() method\n\ngg <- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-an-animated-bubble-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-an-animated-bubble-plot-plot_ly-method",
    "title": "Hands-on Exercise 3",
    "section": "Building an animated bubble plot: plot_ly() method",
    "text": "Building an animated bubble plot: plot_ly() method\n\nbp <- globalPop %>%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent, \n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          )\nbp"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal() +\n  theme(panel.background = element_rect(\n    fill = \"lightblue\",\n    colour = \"lightblue\",\n    size = 0.5,\n    linetype = \"solid\"),\n    panel.grid.major = element_line(\n      size = 0.5,\n      linetype = 'solid',\n      colour = \"white\"), \n    panel.grid.minor = element_line(\n      size = 0.25,\n      linetype = 'solid',\n      colour = \"white\"))\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x=reorder(RACE,RACE,\n                function(x)-length(x))))+\n  geom_bar() +\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(..count.., \", \", \n      round(..count../sum(..count..)*100,\n            1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))\n\n\n\n\n\nexam_data %>%\n  mutate(RACE = fct_infreq(RACE)) %>%\n  ggplot(aes(x = RACE)) + \n  geom_bar()+\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(..count.., \", \", \n      round(..count../sum(..count..)*100,\n            1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  geom_vline(aes(xintercept=mean(MATHS,\n                                 na.rm=T)),\n             color=\"red\", \n             linetype=\"dashed\", \n             size=1) +\n  geom_vline(aes(xintercept=median(MATHS,\n                                  na.rm=T)),\n             color=\"grey30\",\n             linetype=\"dashed\", \n             size=1)\n\n\n\n\n\nd <- exam_data   \nd_bg <- d[, -3]  \n\nggplot(d, aes(x = ENGLISH, fill = GENDER)) +\n  geom_histogram(data = d_bg, fill = \"grey\", alpha = .5) +\n  geom_histogram(colour = \"black\") +\n  facet_wrap(~ GENDER) +\n  guides(fill = FALSE) +  \n  theme_bw()\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=MATHS, y=ENGLISH)) +\n  geom_point() +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  geom_hline(yintercept=50,\n             linetype=\"dashed\",\n             color=\"grey60\",\n             size=1) + \n  geom_vline(xintercept=50, \n             linetype=\"dashed\",\n             color=\"grey60\",\n             size=1)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "pacman::p_load(ggstatsplot, tidyverse)\n\n\n\n\n\nexam <- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n\n\nexam1 <- exam %>% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on Exercise 4",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\n\npacman::p_load(readxl, performance, parameters, see)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#importing-excel-file-readxl-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#importing-excel-file-readxl-methods",
    "title": "Hands-on Exercise 4",
    "section": "Importing Excel file: readxl methods",
    "text": "Importing Excel file: readxl methods\n\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   <dbl> <chr>    <dbl>     <dbl>     <dbl>    <dbl>  <dbl>         <dbl>  <dbl>\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period <dbl>, HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>, …"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#multiple-regression-model-using-lm",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#multiple-regression-model-using-lm",
    "title": "Hands-on Exercise 4",
    "section": "Multiple Regression Model using lm()",
    "text": "Multiple Regression Model using lm()\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#model-diagnostic-checking-for-multicolinearity",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#model-diagnostic-checking-for-multicolinearity",
    "title": "Hands-on Exercise 4",
    "section": "Model Diagnostic: checking for multicolinearity:",
    "text": "Model Diagnostic: checking for multicolinearity:\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\ncheck_c <- check_collinearity(model)\nplot(check_c)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#model-diagnostic-checking-normality-assumption",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#model-diagnostic-checking-normality-assumption",
    "title": "Hands-on Exercise 4",
    "section": "Model Diagnostic: checking normality assumption",
    "text": "Model Diagnostic: checking normality assumption\n\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\ncheck_n <- check_normality(model1)\n\nplot(check_n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "title": "Hands-on Exercise 4",
    "section": "Model Diagnostic: Check model for homogeneity of variances",
    "text": "Model Diagnostic: Check model for homogeneity of variances\n\ncheck_h <- check_heteroscedasticity(model1)\n\nplot(check_h)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#model-diagnostic-complete-check",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#model-diagnostic-complete-check",
    "title": "Hands-on Exercise 4",
    "section": "Model Diagnostic: Complete check",
    "text": "Model Diagnostic: Complete check\n\ncheck_model(model1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-regression-parameters-see-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-regression-parameters-see-methods",
    "title": "Hands-on Exercise 4",
    "section": "Visualising Regression Parameters: see methods",
    "text": "Visualising Regression Parameters: see methods\n\nplot(parameters(model1))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-regression-parameters-ggcoefstats-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-regression-parameters-ggcoefstats-methods",
    "title": "Hands-on Exercise 4",
    "section": "Visualising Regression Parameters: ggcoefstats() methods",
    "text": "Visualising Regression Parameters: ggcoefstats() methods\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#install-and-launching-r-packages-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#install-and-launching-r-packages-1",
    "title": "Hands-on Exercise 4",
    "section": "Install and launching R packages",
    "text": "Install and launching R packages\n\npacman::p_load(tidyverse, plotly, crosstalk, DT, ggdist, gganimate)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#importing-the-data-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#importing-the-data-1",
    "title": "Hands-on Exercise 4",
    "section": "Importing the data",
    "text": "Importing the data\n\nexam <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggplot2 methods",
    "text": "Visualizing the uncertainty of point estimates: ggplot2 methods\n\nmy_sum <- exam %>%\n  group_by(RACE) %>%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %>%\n  mutate(se=sd/sqrt(n-1))\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n \n  \n    RACE \n    n \n    mean \n    sd \n    se \n  \n \n\n  \n    Chinese \n    193 \n    76.50777 \n    15.69040 \n    1.132357 \n  \n  \n    Indian \n    12 \n    60.66667 \n    23.35237 \n    7.041005 \n  \n  \n    Malay \n    108 \n    57.44444 \n    21.13478 \n    2.043177 \n  \n  \n    Others \n    9 \n    69.66667 \n    10.72381 \n    3.791438"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods-1",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggplot2 methods",
    "text": "Visualizing the uncertainty of point estimates: ggplot2 methods\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean \n          maths score by race\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods-2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods-2",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggplot2 methods",
    "text": "Visualizing the uncertainty of point estimates: ggplot2 methods\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-(1.96*se), \n        ymax=mean+(1.96*se)), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"95% CI of mean \n          maths score by race\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates with interactive error bars",
    "text": "Visualizing the uncertainty of point estimates with interactive error bars\n\np <- ggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-(2.58*se), \n        ymax=mean+(2.58*se)),\n#        text = paste(\"Race: \", RACE, \"<br>N: \", n, \"<br>Avg. Scores: \", mean, \"<br>99% CI: [\", round(ymin, 3), \", \", round(ymax, 3), \"]\")), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"99% CI of mean \n          maths score by race\")\n\n#ggplotly(p, tooltip = c(\"text\"), hoverinfo = \"text\")\nggplotly(p)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "Visualizing the uncertainty of point estimates: ggdist methods\n\nexam %>%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +   #<<\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\nexam %>%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-1",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "Visualizing the uncertainty of point estimates: ggdist methods\n\nexam %>%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(\n    show.legend = FALSE) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-2",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "Visualizing the uncertainty of point estimates: ggdist methods\n\nexam %>%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#installing-ungeviz-package",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#installing-ungeviz-package",
    "title": "Hands-on Exercise 4",
    "section": "Installing ungeviz package",
    "text": "Installing ungeviz package\n\ndevtools::install_github(\"wilkelab/ungeviz\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#launch-the-application-in-r",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#launch-the-application-in-r",
    "title": "Hands-on Exercise 4",
    "section": "Launch the application in R",
    "text": "Launch the application in R\n\nlibrary(ungeviz)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plot-the-graph",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plot-the-graph",
    "title": "Hands-on Exercise 4",
    "section": "Plot the graph",
    "text": "Plot the graph\n\nggplot(data = exam, \n       (aes(x = factor(RACE), y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(25, group = RACE), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  # `.draw` is a generated column indicating the sample draw\n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#installing-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#installing-and-launching-r-packages",
    "title": "Hands-on Exercise 4",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#importing-the-data-2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#importing-the-data-2",
    "title": "Hands-on Exercise 4",
    "section": "Importing the data",
    "text": "Importing the data\n\ncovid19 <- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %>%\n  mutate_if(is.character, as.factor)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods-the-basic-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods-the-basic-plot",
    "title": "Hands-on Exercise 4",
    "section": "FunnelPlotR methods: The basic plot",
    "text": "FunnelPlotR methods: The basic plot\n\nfunnel_plot(\n  numerator = covid19$Positive,\n  denominator = covid19$Death,\n  group = covid19$`Sub-district`\n)\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods-makeover-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods-makeover-1",
    "title": "Hands-on Exercise 4",
    "section": "FunnelPlotR methods: Makeover 1",
    "text": "FunnelPlotR methods: Makeover 1\n\nfunnel_plot(\n  numerator = covid19$Death,\n  denominator = covid19$Positive,\n  group = covid19$`Sub-district`,\n  data_type = \"PR\",     #<<\n  xrange = c(0, 6500),  #<<\n  yrange = c(0, 0.05)   #<<\n)\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods-makeover-2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods-makeover-2",
    "title": "Hands-on Exercise 4",
    "section": "FunnelPlotR methods: Makeover 2",
    "text": "FunnelPlotR methods: Makeover 2\n\nfunnel_plot(\n  numerator = covid19$Death,\n  denominator = covid19$Positive,\n  group = covid19$`Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #<<           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #<<\n  y_label = \"Cumulative Fatality Rate\"  #<<\n)\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#computing-the-basic-derived-fields",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#computing-the-basic-derived-fields",
    "title": "Hands-on Exercise 4",
    "section": "Computing the basic derived fields",
    "text": "Computing the basic derived fields\n\ndf <- covid19 %>%\n  mutate(rate = Death / Positive) %>%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %>%\n  filter(rate > 0)\n\nfit.mean <- weighted.mean(df$rate, 1/df$rate.se^2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "title": "Hands-on Exercise 4",
    "section": "Calculate lower and upper limits for 95% and 99.9% CI",
    "text": "Calculate lower and upper limits for 95% and 99.9% CI\n\nnumber.seq <- seq(1, max(df$Positive), 1)\nnumber.ll95 <- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 <- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 <- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 <- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI <- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-a-static-funnel-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-a-static-funnel-plot",
    "title": "Hands-on Exercise 4",
    "section": "Plotting a static funnel plot",
    "text": "Plotting a static funnel plot\n\np <- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#interactive-funnel-plot-plotly-ggplot2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#interactive-funnel-plot-plotly-ggplot2",
    "title": "Hands-on Exercise 4",
    "section": "Interactive Funnel Plot: plotly + ggplot2",
    "text": "Interactive Funnel Plot: plotly + ggplot2\n\nfp_ggplotly <- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "pacman::p_load(rstatix, gt, patchwork, tidyverse, webshot2, png)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data,\n       aes(sample=ENGLISH)) +\n  stat_qq() +\n  stat_qq_line()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can see that the points deviate significantly from the straight diagonal line. This is a clear indication that the set of data is not normally distributed.\n\n\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nqq <- ggplot(exam_data,\n       aes(sample=ENGLISH)) +\n  stat_qq() +\n  stat_qq_line()\n\nsw_t <- exam_data %>%\n  shapiro_test(ENGLISH) %>%\n  gt()\n\ntmp <- tempfile(fileext = '.png')\ngtsave(sw_t, tmp)\ntable_png <- png::readPNG(tmp,\n                          native = TRUE)\n\nqq + table_png"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "This exercise aims to uncover the demographic and financial characteristics of the City of Engagement using appropriate analytical visualisation techniques. The visualization is designed using ggplot2, its extensions, and tidyverse packages.\nThe original dataset was originated from Vast Challenge 2022.\nThere are 2 files downloaded: FinancialJournal.csv and Participants.csv"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-preparation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-preparation",
    "title": "Take-home Exercise 1",
    "section": "2. Data Preparation",
    "text": "2. Data Preparation\n\n2.1 Install R packages and import dataset\nThe code chunk below uses pacman::p_load() to check if packages are installed. If they are, they will be launched into R.\n\n#Load packages\npacman::p_load(plotly, ggstatsplot, knitr, patchwork, ggdist, ggthemes, ggridges, viridis, gganimate, lubridate, tidyverse, ungeviz)\n\nImport data from csv using readr::read_csv().\n\n#Import data\nfinancial <- read_csv(\"data/FinancialJournal.csv\", show_col_types = FALSE)\n\nparticipants <- read_csv(\"data/Participants.csv\", show_col_types = FALSE)\n\n\n\n\n\n\n2.2 Data wrangling\nLooking at the data below, we notice a few problems\nParticipants:\n\nhaveKids is in <lgl> format and needs to be converted to binary\neducationLevel is in <chr> format. It needs to be converted to <fct> so that we can rank the levels from low to high\nage should be binned\n\nFinancial:\n\nThe time in timestamp is redundant and not meaningful and should be removed\nThe various financial categories in category should be separated and transposed into individual columns for ease of analysis\nCreate 2 new variables, Income and Expense, to sum the monthly income and expenses for each participant\n\nThereafter, the 2 tables should be merged into a new table\n\n\nShow the code\nparticipants\n\n\n# A tibble: 1,011 × 7\n   participantId householdSize haveKids   age educationLevel      interestGroup\n           <dbl>         <dbl> <lgl>    <dbl> <chr>               <chr>        \n 1             0             3 TRUE        36 HighSchoolOrCollege H            \n 2             1             3 TRUE        25 HighSchoolOrCollege B            \n 3             2             3 TRUE        35 HighSchoolOrCollege A            \n 4             3             3 TRUE        21 HighSchoolOrCollege I            \n 5             4             3 TRUE        43 Bachelors           H            \n 6             5             3 TRUE        32 HighSchoolOrCollege D            \n 7             6             3 TRUE        26 HighSchoolOrCollege I            \n 8             7             3 TRUE        27 Bachelors           A            \n 9             8             3 TRUE        20 Bachelors           G            \n10             9             3 TRUE        35 Bachelors           D            \n# ℹ 1,001 more rows\n# ℹ 1 more variable: joviality <dbl>\n\n\nShow the code\nfinancial\n\n\n# A tibble: 1,513,636 × 4\n   participantId timestamp           category  amount\n           <dbl> <dttm>              <chr>      <dbl>\n 1             0 2022-03-01 00:00:00 Wage      2473. \n 2             0 2022-03-01 00:00:00 Shelter   -555. \n 3             0 2022-03-01 00:00:00 Education  -38.0\n 4             1 2022-03-01 00:00:00 Wage      2047. \n 5             1 2022-03-01 00:00:00 Shelter   -555. \n 6             1 2022-03-01 00:00:00 Education  -38.0\n 7             2 2022-03-01 00:00:00 Wage      2437. \n 8             2 2022-03-01 00:00:00 Shelter   -557. \n 9             2 2022-03-01 00:00:00 Education  -12.8\n10             3 2022-03-01 00:00:00 Wage      2367. \n# ℹ 1,513,626 more rows\n\n\nis.na() function is also used to confirm that there are no missing values in the participants and financial datasets.\n\n\nShow the code\n#Check for missing values\nany(is.na(participants))\n\n\n[1] FALSE\n\n\nShow the code\nany(is.na(financial))\n\n\n[1] FALSE\n\n\nThe code chunk below performs the required data wrangling to clean participants and financial datasets and store them in new variable p and f2 respectively.\n\n\nShow the code\n#Data preparation\n#store participants dataset in new variable p\np <- participants \n\n#Reformat haveKids to binary\np$haveKids <- as.integer(p$haveKids)\n\n#Reformat educationLevel to factor\np$educationLevel <- as.factor(p$educationLevel)\n\n#Bin age variable\np$age <- cut(p$age, seq(0, 100, 10))\n\n#Store financial dataset in new variable f\nf <- financial \n\n#Remove time from timestamp\nf$timestamp <- format(as_datetime(f$timestamp), \"%Y-%m\")\nf$timestamp <- lubridate::ym(f$timestamp)\n\n#Split category and transpose to new columns\nf1 <- f %>% group_by(participantId) %>%\n  pivot_wider(\n    names_from = category, \n    values_from = amount, \n    values_fn = list(amount = sum),\n    values_fill = 0\n    )\n\n#Create new variables, Income and Expense. Convert Expense values to positive. Store as new table f2\nf2 <- f1 %>%\n    group_by(participantId, timestamp) %>% \n    mutate(Income=sum(Wage, RentAdjustment),\n           Expense=sum(Shelter, Education, Food, Recreation)\n           )\n\nf2$Expense <- abs(f2$Expense)\n\n#Create new variables, Annual_income and Annual_Expense. Store as new table f3\n\nf3 <- f2 %>%\n  group_by(participantId) %>%\n  transmute(Annual_income=sum(Income),\n         Annual_expense=sum(Expense)\n         ) %>%\n  distinct()\n\n#Merge the 2 tables, p and f2 into new table, nt\nnt <- left_join(p, f2,\nby = join_by(participantId == participantId))\n\n\nThe final dataset nt is displayed below using knitr::kable() function. The summary statistics for each of the variables is displayed below using psych::describe() function.\n\n\nShow the code\nkable(head(nt), \"simple\")\n\n\n\n\n\nparticipantId\nhouseholdSize\nhaveKids a\nge e\nducationLevel i\nnterestGroup\njoviality t\nimestamp\nWage\nShelter\nEducation\nRentAdjustment\nFood\nRecreation\nIncome\nExpense\n\n\n\n\n0\n3\n1\n(30,40]\nHighSchoolOrCollege\nH\n0.0016267\n2022-03-01\n11931.95\n-1109.9772\n-76.01076\n0\n-268.3380\n-348.7174\n11931.95\n1803.043\n\n\n0\n3\n1\n(30,40]\nHighSchoolOrCollege\nH\n0.0016267\n2022-04-01\n8636.88\n-554.9886\n-38.00538\n0\n-265.8560\n-219.4290\n8636.88\n1078.279\n\n\n0\n3\n1\n(30,40]\nHighSchoolOrCollege\nH\n0.0016267\n2022-05-01\n9048.16\n-554.9886\n-38.00538\n0\n-264.6161\n-383.0088\n9048.16\n1240.619\n\n\n0\n3\n1\n(30,40]\nHighSchoolOrCollege\nH\n0.0016267\n2022-06-01\n9048.16\n-554.9886\n-38.00538\n0\n-256.9723\n-465.6816\n9048.16\n1315.648\n\n\n0\n3\n1\n(30,40]\nHighSchoolOrCollege\nH\n0.0016267\n2022-07-01\n8636.88\n-554.9886\n-38.00538\n0\n-270.2128\n-1069.5441\n8636.88\n1932.751\n\n\n0\n3\n1\n(30,40]\nHighSchoolOrCollege\nH\n0.0016267\n2022-08-01\n9459.44\n-554.9886\n-38.00538\n0\n-261.8386\n-314.1417\n9459.44\n1168.974\n\n\n\n\n\nShow the code\npsych::describe(nt)\n\n\n                vars     n    mean      sd  median trimmed     mad      min\nparticipantId      1 10691  483.30  294.17  466.00  477.84  370.65     0.00\nhouseholdSize      2 10691    1.90    0.81    2.00    1.88    1.48     1.00\nhaveKids           3 10691    0.28    0.45    0.00    0.23    0.00     0.00\nage*               4 10691    4.34    1.26    4.00    4.39    1.48     2.00\neducationLevel*    5 10691    2.35    0.94    3.00    2.36    1.48     1.00\ninterestGroup*     6 10691    5.59    2.90    6.00    5.61    4.45     1.00\njoviality          7 10691    0.47    0.29    0.45    0.46    0.35     0.00\ntimestamp          8 10691     NaN      NA      NA     NaN      NA      Inf\nWage               9 10691 4265.05 2436.30 3613.88 3867.84 1786.00  1600.00\nShelter           10 10691 -683.48  325.00 -676.33 -646.97  230.46 -7385.95\nEducation         11 10691  -14.44   29.89    0.00   -6.63    0.00  -182.29\nRentAdjustment    12 10691    5.14   96.52    0.00    0.00    0.00     0.00\nFood              13 10691 -346.41   85.25 -308.58 -342.51   67.67  -590.42\nRecreation        14 10691 -387.55  249.97 -377.40 -373.71  201.59 -1962.10\nIncome            15 10691 4270.19 2444.33 3613.88 3870.78 1787.74  1600.00\nExpense           16 10691 1431.88  535.31 1403.69 1401.27  387.84    32.00\n                     max    range  skew kurtosis    se\nparticipantId    1010.00  1010.00  0.13    -1.17  2.85\nhouseholdSize       3.00     2.00  0.18    -1.44  0.01\nhaveKids            1.00     1.00  0.97    -1.06  0.00\nage*                6.00     4.00 -0.18    -1.09  0.01\neducationLevel*     4.00     3.00 -0.28    -1.14  0.01\ninterestGroup*     10.00     9.00 -0.05    -1.24  0.03\njoviality           1.00     1.00  0.21    -1.15  0.00\ntimestamp           -Inf     -Inf    NA       NA    NA\nWage            21334.65 19734.65  1.95     5.24 23.56\nShelter             0.00  7385.95 -3.09    35.31  3.14\nEducation           0.00   182.29 -2.51     7.00  0.29\nRentAdjustment   4809.28  4809.28 31.10  1187.56  0.93\nFood              -32.00   558.42 -0.13     0.41  0.82\nRecreation          0.00  1962.10 -0.90     2.50  2.42\nIncome          21334.65 19734.65  1.94     5.21 23.64\nExpense          9056.66  9024.66  1.51     9.94  5.18"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#visualisation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#visualisation",
    "title": "Take-home Exercise 1",
    "section": "3. Visualisation",
    "text": "3. Visualisation\n\n3.1 Exploratory Data Visualisation\nThe plots here are preliminary in nature but designed with interactivity to allow users to perform Exploratory Data Analysis (EDA) Visualisation to study the data. Hence plotly is mainly used.\n\n3.1.1 Demographic Distribution\n\nDesign Consideration\nBar charts and histograms are plotted to observe the overall distribution of the dataset. The graphs are placed in individual tabs for ease of reference.\n\nHousehold SizeHave Kids?AgeEducation LevelInterest GroupJoviality\n\n\n\n\nShow the code\ng <- ggplot(data = p,\n       aes(x = householdSize)) +\n  geom_bar(color=\"black\", fill=\"light blue\")\n\nggplotly(g)\n\n\n\n\n\n\n\n\n\n\nShow the code\ng <- ggplot(data = participants,\n       aes(x = haveKids)) +\n  geom_bar(color=\"black\", fill=\"light blue\")\n\nggplotly(g)\n\n\n\n\n\n\n\n\n\n\nShow the code\n#g <- ggplot(data = participants,\n#       aes(x = age)) +\n#  geom_histogram(bins=20,    \n#                 binwidth = 10,\n#                 color=\"black\",      \n#                 fill=\"light blue\")\n#ggplotly(g)\n\ng <- ggplot(data = p,\n       aes(x = age)) +\n  geom_bar(color=\"black\", fill=\"light blue\")\n\nggplotly(g)\n\n\n\n\n\n\n\n\n\n\nShow the code\ng <- ggplot(data = p,\n       aes(x = educationLevel)) +\n  geom_bar(color=\"black\", fill=\"light blue\")\n\nggplotly(g)\n\n\n\n\n\n\n\n\n\n\nShow the code\ng <- ggplot(data = p,\n       aes(x = interestGroup)) +\n  geom_bar(color=\"black\", fill=\"light blue\")\n\nggplotly(g)\n\n\n\n\n\n\n\n\n\n\nShow the code\ng <- ggplot(data = p,\n       aes(x = joviality)) +\n  geom_histogram(bins=20,    \n                 binwidth = 0.1,\n                 color=\"black\",      \n                 fill=\"light blue\")\nggplotly(g)\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\nAbout 70% of the participants do not have kid.\nThe smallest age group belong to seniors age 50-60 (11%).\nAbout 50% of the participants have up to high school or college education.\n\n\n\n\n3.1.2 Relationship Between Monthly Income and Other Variables\n\nDesign Consideration\nBoxplots are used to visualize the relationship between monthly income and other discrete variables. Violin plot is also be added to visualize the kernel density of the data.\n\nA dropdown menu is included to select variables for x-axis while the y-axis is monthly income.\nThe x-axis variables that can be selected are namely: householdSize, haveKids, age, educationLevel, and interestGroup. Note that month (timestamp) is treated as discrete variable as we want to find out any seasonal variations (statistically significant difference in mean/median) of price.\nTooltip is used to show mean, quartiles, and outliers.\nThe variables are Ordered by ascending order (mean).\n\nplot_ly is used to prepare the interactive plot. Steps taken are:\n\nBox visible argument is set to T to ensure the boxplot is visible. The same is applied to meanline visible.\nSet the opacity of the dots to 0.5 and the color of the meanline to dark pink to improve visualisation.\nLayout argument is used to add plot title, and y-axis title.\nThe updatemenus argument is used to create dropdown menu buttons.\nCategoryorder is set for each button to determine the order of discrete variables.\n\n\n\nShow the code\n#Initiating the base plot\nplot_ly(data = nt,\n        x = ~householdSize,\n        y = ~Income,\n        line = list(width =1),\n        type = \"violin\",\n        marker = list(opacity = 0.5,\n          line = list(width = 2)),\n        box = list(visible = T),\n        meanline = list(visible = T,\n                        color = \"rgb(231, 99, 250)\")) |> \n  \n#Generating plot and y-axis title  \n  layout(title = \"Distribution of Monthly Income by selected factors\",\n         xaxis = list(title = \"\"),\n         yaxis = list(title = \"Monthly Income\"),\n         \n#creating dropdown menus to allow selection of parameters on x-axis \n         updatemenus = list(list(type = 'dropdown',\n                                 xref = \"paper\",\n                                 yref = \"paper\",\n                                 xanchor = \"left\",\n                                 x = 0.04, \n                                 y = 0.95,\n                                 buttons = list(\n                                   list(method = \"update\",\n                                        args = list(list(x = list(nt$householdSize)),\n                                                    list(xaxis = list(categoryorder = \"category ascending\"))),\n                                        label = \"Household Size\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(nt$haveKids)),\n                                                    list(xaxis = list(categoryorder = \"category ascending\"))),\n                                        label = \"Have Kids?\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(nt$age)),\n                                                    list(xaxis = list(categoryorder = \"category ascending\"))),\n                                        label = \"Age Group\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(nt$educationLevel)),\n                                                    list(xaxis = list(categoryorder = \"mean ascending\"))),\n                                        label = \"Education Level\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(nt$interestGroup)),\n                                                    list(xaxis = list(categoryorder = \"category ascending\"))),\n                                        label = \"Interest Group\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(nt$timestamp)),\n                                                    list(xaxis = list(tickmode = \"array\")),\n                                                    list(color = list(nt$timestamp))),\n                                        label = \"Month\")\n                              \n                                   )\n                                 )\n                            )\n         )\n\n\n\n\n\n\n\n\nInsights\n\nThe median monthly income increases with household size.\nHouseholds with kids have higher median monthly income.\nAge group 30-40 has highest median monthly income ($3,806) while 40-50 has lowest median monthly income ($3,458).\nGraduates have the highest median monthly income ($5,523).\nInterest Group D has the highest median monthly income ($4,145) while E has the lowest ($3,226).\nMar 2022 registered the highest median monthly income ($5,800) while Feb 2023 registered the lowest ($3,191).\n\n\n\n\n3.1.3 Monthly Income Over the Months by Age Group and Education Level\n\nDesign Consideration\nRidgeline plot is a set of overlapped density plots, and it helps us to compare multiple distirbutions among dataset. They are useful for visualizing changes in distributions over time or space.\n\nAge GroupEducation Level\n\n\n\n\nShow the code\nggplot(data = nt, aes(x = Income, y = age, fill = after_stat(x))) +\n  \n  geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +\n  \n  theme_minimal() +\n  \n    labs(title = 'Monthly Income by age, Time: {frame_time}',\n       x = \"Monthly income\",\n       y = \"Age\") +\n  \n  theme(legend.position=\"none\",\n  text = element_text(family = \"Garamond\"),\n  plot.title = element_text(face = \"bold\", size = 12),\n  \n  axis.title.x = element_text(size = 10, hjust = 1),\n  axis.title.y = element_text(size = 10),\n  axis.text = element_text(size = 8)) +\n  \n  scale_fill_viridis(name = \"Income\", option = \"D\") +\n  \n  transition_time(nt$timestamp) +\n  ease_aes('linear')\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = nt, aes(x = Income, y = educationLevel, fill = after_stat(x))) +\n  \n  geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +\n  \n  theme_minimal() +\n  \n    labs(title = 'Monthly Income by Education Level, Time: {frame_time}',\n       x = \"Monthly Income\",\n       y = \"Education Level\") +\n  \n  theme(legend.position=\"none\",\n  text = element_text(family = \"Garamond\"),\n  plot.title = element_text(face = \"bold\", size = 12),\n  \n  axis.title.x = element_text(size = 10, hjust = 1),\n  axis.title.y = element_text(size = 10),\n  axis.text = element_text(size = 8)) +\n  \n  scale_fill_viridis(name = \"Wage\", option = \"D\") +\n  \n  transition_time(nt$timestamp) +\n  ease_aes('linear')\n\n\n\n\n\n\n\n\n\n\nInsights\n\nThere …\n\n\n\n\n\n3.2 Confirmatory Data Analysis Visualisation\nThe plots here are focused on visual statistical testing used in Confirmatory Data Analysis.\n\n3.2.1 Correlation Between Monthly Income and Monthly Expense\n\nDesign Consideration\nInteractive and correlation scatterplots are plotted to assess the correlation between monthly income and expense. Correlation scatterplot is also plotted to assess the correlation between monthly wage and joviality level.\n\nScatterplotCorrelation\n\n\n\n\nShow the code\np <- ggplot(data=nt, \n            aes(x = Expense,\n                y = Income)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,10000),\n                  ylim=c(0,22000))\nggplotly(p)\n\n\n\n\n\n\n\n\n\n\nShow the code\np <- ggstatsplot::ggscatterstats(\n  data=nt, \n  x = Expense,\n  y = Income,\n  marginal = FALSE\n  ) +\n  \n  theme_minimal() +\n  \n  labs(title = 'Correlation of Monthly Income and Monthly Expenses', x = \"Monthly Expense\", y = \"Monthly Income\") +\n\ntheme(text = element_text(family = \"Garamond\"),\n        plot.title = element_text(hjust = 0.2, size = 15, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\",\n        \n        axis.text = element_text(size = 10, face = \"bold\"),\n        axis.title = element_text(size = 12, face = \"bold\"))\np\n\n\n\n\n\n\n\n\n\n\nInsights\nThere is sufficient evidence to conclude that there is a significant linear relationship between monthly income and monthly expenses because the p-value (2.42e-49) < 0.05 and correlation coefficient (0.14) is significantly different from zero.\n\n\n\n3.2.2 Correlation Between Monthly Wage and Joviality\n\n\nShow the code\np <- ggstatsplot::ggscatterstats(\n  data=nt, \n  x = Wage,\n  y = joviality,\n  marginal = FALSE\n  ) +\n  \n  theme_minimal() +\n  \n  labs(title = 'Correlation of Monthly Wage and Joviality', x = \"Monthly Wage\", y = \"Joviality\") +\n\ntheme(text = element_text(family = \"Garamond\"),\n        plot.title = element_text(hjust = 0.2, size = 15, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\",\n        \n        axis.text = element_text(size = 10, face = \"bold\"),\n        axis.title = element_text(size = 12, face = \"bold\"))\np\n\n\n\n\n\n\nInsights\nThere is a significant negative linear relationship between monthly wage and joviality because the p-value (7.38e-195) < 0.05 and correlation coefficient (-0.284) is significantly different from zero..\n\n\n\n3.2.3 Difference in Monthly Income Across Age Groups\n\n\nShow the code\n#Order the age variables by median of monthly income\nnt$age <- fct_reorder(nt$age, nt$Income, median)\n\n#set the color pallete\ncol13_1 <- c(\"dodgerblue2\", \"#E31A1C\", \n  \"green4\",\n  \"#6A3D9A\", \n  \"#FF7F00\"\n  ) \n  \n#Initiating the base plot\np1 <- ggbetweenstats(\n  data = nt |> \n  group_by(age),\n  x = age, \n  y = Income, \n  ylab = \"Monthly Income\",\n  title = \"One-way ANOVA (age)\",\n  type = \"np\", \n  pairwise.comparisons = TRUE,\n  pairwise.display = \"ns\",\n  mean.ci = TRUE,\n  p.adjust.method = \"fdr\", \n  messages = FALSE \n  ) +\n  scale_color_manual(values = col13_1) +\n  theme(axis.title.x = element_blank()) +\n  scale_y_continuous(limits = c(0, 25000))\n\np1 + plot_annotation(\n  title = 'One-way ANOVA reveals differences in monthly income across different age groups',\n  subtitle = 'Monthly Income by Age',\n  theme = theme(plot.title = element_text(face = \"bold\", size = 12))\n)\n\n\n\n\n\n\nInsights\nAs noted above, the hypothesis testing is done using Kruskal-Wallis test with 95% confidence level for the individual plot. For each plot, the hypothesis is:\n\nH0 : There is no difference between median monthly income across age groups\nH1 : There is difference between median monthly income across age groups\n\n\n\n\n\n\n\nNote\n\n\n\nSince the p-value < critical value of 0.05, there is statistical evidence to reject the null hypothesis. We can conclude that there is difference in median monthly income across the age groups.\n\n\n\n\n\n3.2.4 Difference in Monthly Income Across Education Levels\n\n\nShow the code\n#Order the educationLevel variables by median of monthly income\nnt$age <- fct_reorder(nt$educationLevel, nt$Income, median)\n\n#set the color pallete\ncol13_1 <- c(\"dodgerblue2\", \"#E31A1C\", \n  \"green4\",\n  \"#6A3D9A\" \n  ) \n  \n#Initiating the base plot\np1 <- ggbetweenstats(\n  data = nt |> \n  group_by(educationLevel),\n  x = educationLevel, \n  y = Income, \n  ylab = \"Monthly Income\",\n  title = \"One-way ANOVA (education)\",\n  type = \"np\", \n  pairwise.comparisons = TRUE,\n  pairwise.display = \"ns\",\n  mean.ci = TRUE,\n  p.adjust.method = \"fdr\", \n  messages = FALSE \n  ) +\n  scale_color_manual(values = col13_1) +\n  theme(axis.title.x = element_blank()) +\n  scale_y_continuous(limits = c(0, 25000))\n\np1 + plot_annotation(\n  title = 'One-way ANOVA reveals differences in monthly income across education levels',\n  subtitle = 'Monthly Income by Education Levels',\n  theme = theme(plot.title = element_text(face = \"bold\", size = 12))\n)\n\n\n\n\n\n\n\n3.2.5 Normality Assumption\n\n\nShow the code\n##| fig-height: 11\n##| fig-width: 12.5\n\n#Computing summary statistics of mean, median and lower and upper whiskers in boxplot\nIncome_mean <- round(mean(nt$Income))\nIncome_median <- round(median(nt$Income))\nymax <- as.numeric(round((IQR(nt$Income)*1.5) +\n                quantile(nt$Income,0.75)))\nymin <- as.integer(min(nt$Income))\n\n#plotting histogram\nh <- ggplot(data = nt, aes(x = Income)) + \n  geom_histogram(color=\"black\", fill=\"azure4\", binwidth = 500) + \n  scale_x_continuous(limits = c(0,22000), labels = scales::comma) +\n  labs(x = \"Income\", y = \"Distribution\") +\n  geom_vline(aes(xintercept = Income_mean), col=\"darkblue\", linewidth=1) +\n  annotate(\"text\", x=6000, y=1800, label=\"Mean Income:\", \n           size=3, color=\"darkblue\") +\n  annotate(\"text\", x=5500, y=1700, label=format(Income_mean, big.mark = \",\"),\n           size=3, color=\"darkblue\") +\n  geom_vline(aes(xintercept = Income_median), col=\"lightpink4\", linewidth=1) +\n  annotate(\"text\", x=1800, y=1800, label=\"Median Income\", \n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=2400, y=1700, label=format(Income_median, big.mark = \",\"),\n           size=3, color=\"lightpink4\") +\n  theme(axis.text.x = element_text(size=8))\n\n#plotting boxplot\nb <- ggplot(data = nt, aes(y = Income)) + \n  geom_boxplot(outlier.colour=\"firebrick\", outlier.shape=16,\n               outlier.size=1, notch=FALSE) + \n  coord_flip() + labs(y = \"\", x = \"\") + \n  scale_y_continuous(limits = c(0,22000), labels = scales::comma) +\n  theme(axis.text = element_blank(), axis.ticks = element_blank()) + \n  stat_boxplot(geom=\"errorbar\", width=0.5) + \n  annotate(\"text\", x=0.35, y=ymax, label=format(ymax, big.mark = \",\"), \n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=0.35, y=ymin, label=format(ymin, big.mark = \",\"), \n           size=3, color=\"lightpink4\")\n\n#combining plots\nincome_distri <- b / h + plot_layout(heights = c(1, 4)) \n\nincome_distri + plot_annotation(title = \"Distribution of Monthly Income\", \n                               subtitle = \"There is a right-skewed distribution i.e. mean monthly income > median monthly income. There is also a large number of outliers (income >$9,115).\",\n                               theme = theme(\n                                 plot.title = element_text(size = 16),\n                                 plot.subtitle = element_text(size = 8)))\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can see that the monthly income has a right-skewed distribution. This is a clear indication that the set of data is not normally distributed.\n\n\n\nDesign Consideration\n\n\n\n\n\n\nNote\n\n\n\nSince we are unable to confirm normality assumption, one-sample Wilcoxon test will be used for hypothesis testing. Note that the null hypothesis is no difference in median monthly income.\n\n\nTo ensure that best practices (APA standard) of statistical reporting is followed, ggstatsplot library is used in this section. Median is used instead of mean as point estimates due to high presence of outliers and skewness of data. This will also complement the non-parametric test as well.\nPerform a one-sample Wilcoxon test to test the null hypothesis:\n\nH0: the monthly income median is equal to $3614\nH1: the monthly income median is different from $3614\n\n\n\nShow the code\nset.seed(1234)\n\ngghistostats(\n  data = nt,\n  x = Income,\n  type = \"nonparametric\",\n  test.value = 3614,\n  xlab = \"Income\"\n)\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nBased on the results of the test (at the significance level of 0.05), we reject the null hypothesis. There is enough evidence to conclude that the median monthly income is significantly different from $3614 (p-value = 4.47e-44).\n\n\n\n\n\n3.2.6 Visualising the Uncertainty of Median Estimates of Monthly Income by Age Group\n\n\nShow the code\ndevtools::install_github(\"wilkelab/ungeviz\")\nlibrary(ungeviz)\n\nggplot(data = nt, \n       (aes(x = age, y = Income))) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(25, group = age), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#install-r-packages-and-import-dataset",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#install-r-packages-and-import-dataset",
    "title": "Take-home Exercise 1",
    "section": "2.1 Install R packages and import dataset",
    "text": "2.1 Install R packages and import dataset\nThe code chunk below uses pacman::p_load() to check if packages are installed. If they are, they will be launched into R.\n\n#Load packages\npacman::p_load(plotly, ggstatsplot, knitr, patchwork, ggdist, ggthemes, ggridges, viridis, gganimate, lubridate, tidyverse, ungeviz, colorspace)\n\nImport data from csv using readr::read_csv().\n\n#Import data\nfinancial <- read_csv(\"data/FinancialJournal.csv\", show_col_types = FALSE)\n\nparticipants <- read_csv(\"data/Participants.csv\", show_col_types = FALSE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-wrangling",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-wrangling",
    "title": "Take-home Exercise 1",
    "section": "2.2 Data wrangling",
    "text": "2.2 Data wrangling\nLooking at the data below, we notice a few problems as follows:\nParticipants:\n\nhaveKids is in <lgl> format and needs to be converted to binary.\neducationLevel is in <chr> format. It needs to be converted to <fct> so that we can rank the levels from low to high.\nage can be binned for ease of trend visualisation.\n\nFinancial:\n\nThe time in timestamp is redundant and not meaningful and should be removed.\nThe various financial categories in category should be separated and transposed into individual columns for ease of analysis.\n2 new variables, Income and Expense, should be created to sum up the monthly income and expenses for each participant.\n\nThereafter, the 2 tables should be merged into a new table\n\n\nShow the code\nparticipants\n\n\n# A tibble: 1,011 × 7\n   participantId householdSize haveKids   age educationLevel      interestGroup\n           <dbl>         <dbl> <lgl>    <dbl> <chr>               <chr>        \n 1             0             3 TRUE        36 HighSchoolOrCollege H            \n 2             1             3 TRUE        25 HighSchoolOrCollege B            \n 3             2             3 TRUE        35 HighSchoolOrCollege A            \n 4             3             3 TRUE        21 HighSchoolOrCollege I            \n 5             4             3 TRUE        43 Bachelors           H            \n 6             5             3 TRUE        32 HighSchoolOrCollege D            \n 7             6             3 TRUE        26 HighSchoolOrCollege I            \n 8             7             3 TRUE        27 Bachelors           A            \n 9             8             3 TRUE        20 Bachelors           G            \n10             9             3 TRUE        35 Bachelors           D            \n# ℹ 1,001 more rows\n# ℹ 1 more variable: joviality <dbl>\n\n\nShow the code\nfinancial\n\n\n# A tibble: 1,513,636 × 4\n   participantId timestamp           category  amount\n           <dbl> <dttm>              <chr>      <dbl>\n 1             0 2022-03-01 00:00:00 Wage      2473. \n 2             0 2022-03-01 00:00:00 Shelter   -555. \n 3             0 2022-03-01 00:00:00 Education  -38.0\n 4             1 2022-03-01 00:00:00 Wage      2047. \n 5             1 2022-03-01 00:00:00 Shelter   -555. \n 6             1 2022-03-01 00:00:00 Education  -38.0\n 7             2 2022-03-01 00:00:00 Wage      2437. \n 8             2 2022-03-01 00:00:00 Shelter   -557. \n 9             2 2022-03-01 00:00:00 Education  -12.8\n10             3 2022-03-01 00:00:00 Wage      2367. \n# ℹ 1,513,626 more rows\n\n\nis.na() function is also used to confirm that there are no missing values in the participants and financial datasets.\n\n\nShow the code\n#Check for missing values\nany(is.na(participants))\n\n\n[1] FALSE\n\n\nShow the code\nany(is.na(financial))\n\n\n[1] FALSE\n\n\nThe code chunk below performs the required data wrangling to clean participants and financial datasets and store them in new variable p and f2 respectively.\n\n\nShow the code\n#Data preparation\n#store participants dataset in new variable p\np <- participants \n\n#Reformat haveKids to binary\np$haveKids <- as.integer(p$haveKids)\n\n#Reformat educationLevel to factor\np$educationLevel <- as.factor(p$educationLevel)\n\n#Bin age variable\np$age <- cut(p$age, seq(0, 100, 10))\n\n#Store financial dataset in new variable f\nf <- financial \n\n#Remove time from timestamp\nf$timestamp <- format(as_datetime(f$timestamp), \"%Y-%m\")\nf$timestamp <- lubridate::ym(f$timestamp)\n\n#Split category and transpose to new columns\nf1 <- f %>% group_by(participantId) %>%\n  pivot_wider(\n    names_from = category, \n    values_from = amount, \n    values_fn = list(amount = sum),\n    values_fill = 0\n    ) %>%\n  ungroup()\n\n#Create new variables, Income and Expense. Convert Expense values to positive. Store as new table f2\nf2 <- f1 %>%\n  group_by(participantId, timestamp) %>%\n  mutate(Income=sum(Wage, RentAdjustment),\n         Expense=sum(Shelter, Education, Food, Recreation)\n         ) %>%\n  ungroup()\n\nf2$Expense <- abs(f2$Expense)\n\n#Merge the 2 tables, p and f2 into new table, nt\nnt <- left_join(p, f2,\nby = join_by(participantId == participantId))\n\n\nThe final dataset nt is displayed below using knitr::kable() function. The summary statistics for each of the variables is displayed below using psych::describe() function.\n\n\nShow the code\nkable(head(nt), \"simple\")\n\n\n\n\n\nparticipantId\nhouseholdSize\nhaveKids a\nge e\nducationLevel i\nnterestGroup\njoviality t\nimestamp\nWage\nShelter\nEducation\nRentAdjustment\nFood\nRecreation\nIncome\nExpense\n\n\n\n\n0\n3\n1\n(30,40]\nHighSchoolOrCollege\nH\n0.0016267\n2022-03-01\n11931.95\n-1109.9772\n-76.01076\n0\n-268.3380\n-348.7174\n11931.95\n1803.043\n\n\n0\n3\n1\n(30,40]\nHighSchoolOrCollege\nH\n0.0016267\n2022-04-01\n8636.88\n-554.9886\n-38.00538\n0\n-265.8560\n-219.4290\n8636.88\n1078.279\n\n\n0\n3\n1\n(30,40]\nHighSchoolOrCollege\nH\n0.0016267\n2022-05-01\n9048.16\n-554.9886\n-38.00538\n0\n-264.6161\n-383.0088\n9048.16\n1240.619\n\n\n0\n3\n1\n(30,40]\nHighSchoolOrCollege\nH\n0.0016267\n2022-06-01\n9048.16\n-554.9886\n-38.00538\n0\n-256.9723\n-465.6816\n9048.16\n1315.648\n\n\n0\n3\n1\n(30,40]\nHighSchoolOrCollege\nH\n0.0016267\n2022-07-01\n8636.88\n-554.9886\n-38.00538\n0\n-270.2128\n-1069.5441\n8636.88\n1932.751\n\n\n0\n3\n1\n(30,40]\nHighSchoolOrCollege\nH\n0.0016267\n2022-08-01\n9459.44\n-554.9886\n-38.00538\n0\n-261.8386\n-314.1417\n9459.44\n1168.974\n\n\n\n\n\nShow the code\npsych::describe(nt)\n\n\n                vars     n    mean      sd  median trimmed     mad      min\nparticipantId      1 10691  483.30  294.17  466.00  477.84  370.65     0.00\nhouseholdSize      2 10691    1.90    0.81    2.00    1.88    1.48     1.00\nhaveKids           3 10691    0.28    0.45    0.00    0.23    0.00     0.00\nage*               4 10691    4.34    1.26    4.00    4.39    1.48     2.00\neducationLevel*    5 10691    2.35    0.94    3.00    2.36    1.48     1.00\ninterestGroup*     6 10691    5.59    2.90    6.00    5.61    4.45     1.00\njoviality          7 10691    0.47    0.29    0.45    0.46    0.35     0.00\ntimestamp          8 10691     NaN      NA      NA     NaN      NA      Inf\nWage               9 10691 4265.05 2436.30 3613.88 3867.84 1786.00  1600.00\nShelter           10 10691 -683.48  325.00 -676.33 -646.97  230.46 -7385.95\nEducation         11 10691  -14.44   29.89    0.00   -6.63    0.00  -182.29\nRentAdjustment    12 10691    5.14   96.52    0.00    0.00    0.00     0.00\nFood              13 10691 -346.41   85.25 -308.58 -342.51   67.67  -590.42\nRecreation        14 10691 -387.55  249.97 -377.40 -373.71  201.59 -1962.10\nIncome            15 10691 4270.19 2444.33 3613.88 3870.78 1787.74  1600.00\nExpense           16 10691 1431.88  535.31 1403.69 1401.27  387.84    32.00\n                     max    range  skew kurtosis    se\nparticipantId    1010.00  1010.00  0.13    -1.17  2.85\nhouseholdSize       3.00     2.00  0.18    -1.44  0.01\nhaveKids            1.00     1.00  0.97    -1.06  0.00\nage*                6.00     4.00 -0.18    -1.09  0.01\neducationLevel*     4.00     3.00 -0.28    -1.14  0.01\ninterestGroup*     10.00     9.00 -0.05    -1.24  0.03\njoviality           1.00     1.00  0.21    -1.15  0.00\ntimestamp           -Inf     -Inf    NA       NA    NA\nWage            21334.65 19734.65  1.95     5.24 23.56\nShelter             0.00  7385.95 -3.09    35.31  3.14\nEducation           0.00   182.29 -2.51     7.00  0.29\nRentAdjustment   4809.28  4809.28 31.10  1187.56  0.93\nFood              -32.00   558.42 -0.13     0.41  0.82\nRecreation          0.00  1962.10 -0.90     2.50  2.42\nIncome          21334.65 19734.65  1.94     5.21 23.64\nExpense          9056.66  9024.66  1.51     9.94  5.18"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#exploratory-data-visualisation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#exploratory-data-visualisation",
    "title": "Take-home Exercise 1",
    "section": "3.1 Exploratory Data Visualisation",
    "text": "3.1 Exploratory Data Visualisation\nThe plots here are preliminary in nature but designed with interactivity to allow users to perform Exploratory Data Analysis (EDA) Visualisation to study the data. Hence plotly is mainly used.\n\n3.1.1 Demographic Distribution\n\nDesign Consideration\nBar charts and histograms are plotted to observe the overall distribution of the dataset. The graphs are placed in individual tabs for ease of reference.\n\nHousehold SizeHave Kids?AgeEducation LevelInterest GroupJoviality\n\n\n\n\nShow the code\ng <- ggplot(data = p,\n       aes(x = householdSize)) +\n  geom_bar(color=\"black\", fill=\"light blue\") +\n  labs(title = 'Distribution by Household Size',\n       x = \"Household Size\",\n       y = \"Frequency\")\n\nggplotly(g)\n\n\n\n\n\n\n\n\n\n\nShow the code\ng <- ggplot(data = participants,\n       aes(x = haveKids)) +\n  geom_bar(color=\"black\", fill=\"light blue\") +\n  labs(title = 'Distribution by Households With/without Kids',\n       x = \"Have Kids\",\n       y = \"Frequency\") \n  \n\nggplotly(g)\n\n\n\n\n\n\n\n\n\n\nShow the code\ng <- ggplot(data = p,\n       aes(x = age)) +\n  geom_bar(color=\"black\", fill=\"light blue\") +\n  labs(title = 'Distribution by Age Group',\n       x = \"Age Group\",\n       y = \"Frequency\")\n\nggplotly(g)\n\n\n\n\n\n\n\n\n\n\nShow the code\ng <- ggplot(data = p,\n       aes(x = factor(educationLevel, levels=c(\"Low\", \"HighSchoolOrCollege\",  \"Bachelors\", \"Graduate\")))) +\n  geom_bar(color=\"black\", fill=\"light blue\") +\n  labs(title = 'Distribution by Education Level',\n       x = \"Education Level\",\n       y = \"Frequency\")\n\nggplotly(g)\n\n\n\n\n\n\n\n\n\n\nShow the code\ng <- ggplot(data = p,\n       aes(x = interestGroup)) +\n  geom_bar(color=\"black\", fill=\"light blue\") +\n  labs(title = 'Distribution by Interest Group',\n       x = \"Interest Group\",\n       y = \"Frequency\")\n\nggplotly(g)\n\n\n\n\n\n\n\n\n\n\nShow the code\nmybreaks <- c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)\n\ng <- ggplot(data = p,\n       aes(x = joviality)) +\n  geom_histogram(\n    data = p,\n    breaks = mybreaks,\n    color=\"black\",\n    fill=\"light blue\") +\n  scale_x_continuous(breaks = mybreaks) +\n  labs(title = 'Distribution by Joviality',\n       x = \"Joviality\",\n       y = \"Frequency\")\n\nggplotly(g)\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\nAbout 37% of the participants have household size of 2, followed by 33.3% with household size of 1.\nAbout 70% of the participants do not have kid.\nTeenager 10-20 constitute the smallest age group (7%) while age 40-50 constitute the largest age group (24%).\nAbout 51% of the participants have up to high school or college education.\nInterest Group J has the most number of members (11%).\n\n\n\n\n3.1.2 Relationship Between Monthly Income and Other Variables\n\nDesign Consideration\nBoxplots are used to visualize the relationship between monthly income and other discrete variables. Violin plot is also be added to visualize the kernel density of the data.\n\nA dropdown menu is included to select variables for x-axis while the y-axis is monthly income.\nThe x-axis variables that can be selected are namely: householdSize, haveKids, age, educationLevel, and interestGroup. Note that month (timestamp) is treated as discrete variable as we want to find out any seasonal variations (statistically significant difference in mean/median) of income.\nTooltip is used to show mean, quartiles, and outliers.\nThe variables are ordered by ascending order.\n\nplot_ly is used to prepare the interactive plot. Steps taken are:\n\nBox visible argument is set to T to ensure the boxplot is visible. The same is applied to meanline visible.\nSet the opacity of the dots to 0.5 and the color of the meanline to dark pink to improve visualisation.\nLayout argument is used to add plot title, and y-axis title.\nThe updatemenus argument is used to create dropdown menu buttons.\nCategoryorder is set for each button to determine the order of discrete variables.\n\n\n\nShow the code\n#Initiating the base plot\nplot_ly(data = nt,\n        x = ~householdSize,\n        y = ~Income,\n        line = list(width =1),\n        type = \"violin\",\n        marker = list(opacity = 0.5,\n          line = list(width = 2)),\n        box = list(visible = T),\n        meanline = list(visible = T,\n                        color = \"rgb(231, 99, 250)\")) |> \n  \n#Generating plot and y-axis title  \n  layout(title = \"Distribution of Monthly Income by selected factors\",\n         xaxis = list(title = \"\"),\n         yaxis = list(title = \"Monthly Income\"),\n         \n#creating dropdown menus to allow selection of parameters on x-axis \n         updatemenus = list(list(type = 'dropdown',\n                                 xref = \"paper\",\n                                 yref = \"paper\",\n                                 xanchor = \"left\",\n                                 x = 0.04, \n                                 y = 0.95,\n                                 buttons = list(\n                                   list(method = \"update\",\n                                        args = list(list(x = list(nt$householdSize)),\n                                                    list(xaxis = list(categoryorder = \"category ascending\"))),\n                                        label = \"Household Size\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(nt$haveKids)),\n                                                    list(xaxis = list(categoryorder = \"category ascending\"))),\n                                        label = \"Have Kids?\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(nt$age)),\n                                                    list(xaxis = list(categoryorder = \"category ascending\"))),\n                                        label = \"Age Group\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(nt$educationLevel)),\n                                                    list(xaxis = list(categoryorder = \"mean ascending\"))),\n                                        label = \"Education Level\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(nt$interestGroup)),\n                                                    list(xaxis = list(categoryorder = \"category ascending\"))),\n                                        label = \"Interest Group\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(nt$timestamp)),\n                                                    list(xaxis = list(tickmode = \"array\")),\n                                                    list(color = list(nt$timestamp))),\n                                        label = \"Month\")\n                              \n                                   )\n                                 )\n                            )\n         )\n\n\n\n\n\n\n\n\nInsights\n\nThe median monthly income increases with household size.\nHouseholds with kids have higher median monthly income ($4,263).\nAge group 30-40 has highest median monthly income ($3,806) while 40-50 has lowest median monthly income ($3,458).\nGraduates have the highest median monthly income ($5,523).\nInterest Group D has the highest median monthly income ($4,145) while E has the lowest ($3,226).\nMar 2022 registered the highest median monthly income ($5,800) while Feb 2023 registered the lowest ($3,191).\n\n\n\n\n3.1.3 Monthly Income Over the Months by Age Group and Education Level\n\nDesign Consideration\nRidgeline plot is used to reveal the distribution of monthly income for age and education level variables. It is useful for visualization as distribution can be represented using histograms or density plots, all aligned to the same horizontal scale and presented with a slight overlap.\n\nAge GroupEducation Level\n\n\n\n\nShow the code\nwindowsFonts(\"Garamond\" = windowsFont(\"Garamond\"))\n\nggplot(data = nt, aes(x = Income, y = age, fill = after_stat(x))) +\n  \n  geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +\n  \n  theme_ridges() +\n  \n    labs(title = 'Monthly Income by Age Group, Time: {frame_time}',\n       x = \"Monthly income\",\n       y = \"Age\") +\n  \n  theme(legend.position=\"none\",\n  text = element_text(family = \"Garamond\"),\n  plot.title = element_text(face = \"bold\", size = 12),\n  \n  axis.title.x = element_text(size = 10, hjust = 1),\n  axis.title.y = element_text(size = 10),\n  axis.text = element_text(size = 8)) +\n  \n  scale_fill_viridis_c(name = \"Income\", option = \"C\") +\n  \n  transition_time(nt$timestamp) +\n  ease_aes('linear')\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = nt, aes(x = Income, y = factor(educationLevel, levels=c(\"Low\", \"HighSchoolOrCollege\",  \"Bachelors\", \"Graduate\")), fill = after_stat(x))) +\n  \n  geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +\n  \n  theme_ridges() +\n  \n    labs(title = 'Monthly Income by Education Level, Time: {frame_time}',\n       x = \"Monthly Income\",\n       y = \"Education Level\") +\n  \n  theme(legend.position=\"none\",\n  text = element_text(family = \"Garamond\"),\n  plot.title = element_text(face = \"bold\", size = 12),\n  \n  axis.title.x = element_text(size = 10, hjust = 1),\n  axis.title.y = element_text(size = 10),\n  axis.text = element_text(size = 8)) +\n  \n  scale_fill_viridis(name = \"Income\", option = \"C\") +\n  \n  transition_time(nt$timestamp) +\n  ease_aes('linear')\n\n\n\n\n\n\n\n\n\n\nInsights\n\nThe monthly income across the different age groups and education levels is more or less contained within the period of the dataset. This could be due to only 12 months of data given.\nNormal distribution is generally observed except for age group 30-40 and graduate education level."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#confirmatory-data-analysis-visualisation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#confirmatory-data-analysis-visualisation",
    "title": "Take-home Exercise 1",
    "section": "3.2 Confirmatory Data Analysis Visualisation",
    "text": "3.2 Confirmatory Data Analysis Visualisation\nThe plots here are focused on visual statistical testing used in Confirmatory Data Analysis.\n\n3.2.1 Correlation Scatterplots\n\nDesign Consideration\nCorrelation scatterplot is used to assess the correlation between monthly income and expense as well as the correlation between monthly wage and joviality level.\n\nMonthly Income vs. ExpenseMonthly Wage vs. Joviality\n\n\n\n\nShow the code\nie <- ggscatterstats(\n  data=nt, \n  x = Expense,\n  y = Income,\n  marginal = FALSE\n  ) +\n  \n  theme_minimal() +\n  \n  labs(title = 'Correlation of Monthly Income and Monthly Expense', x = \"Monthly Expense\", y = \"Monthly Income\") +\n\ntheme(text = element_text(family = \"Garamond\"),\n        plot.title = element_text(hjust = 0.2, size = 15, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\",\n        \n        axis.text = element_text(size = 10, face = \"bold\"),\n        axis.title = element_text(size = 12, face = \"bold\"))\nie\n\n\n\n\n\n\n\n\n\nShow the code\nwj <- ggscatterstats(\n  data=nt, \n  x = Wage,\n  y = joviality,\n  marginal = FALSE\n  ) +\n  \n  theme_minimal() +\n  \n  labs(title = 'Correlation of Monthly Wage and Joviality', x = \"Monthly Wage\", y = \"Joviality\") +\n\ntheme(text = element_text(family = \"Garamond\"),\n        plot.title = element_text(hjust = 0.2, size = 15, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\",\n        \n        axis.text = element_text(size = 10, face = \"bold\"),\n        axis.title = element_text(size = 12, face = \"bold\"))\nwj\n\n\n\n\n\n\n\n\n\n\nInsights\nCorrelation between monthly income and expense:\nThere is sufficient evidence to conclude that there is a significant linear relationship between monthly income and monthly expenses because the p-value (2.42e-49) < 0.05 and correlation coefficient (0.14) is significantly different from zero.\nCorrelation between monthly wage and joviality:\nThere is sufficient evidence to conclude that there is a significant negative linear relationship between monthly wage and joviality because the p-value (7.38e-195) < 0.05 and correlation coefficient (-0.284) is significantly different from zero.\n\n\n\n3.2.2 Normality Assumption\n\nDesign Consideration\nWe want to confirm the normality assumption for distribution of monthly income.\n\n\nShow the code\n#Computing summary statistics of mean, median and lower and upper whiskers in boxplot\nIncome_mean <- round(mean(nt$Income))\nIncome_median <- round(median(nt$Income))\nymax <- as.numeric(round((IQR(nt$Income)*1.5) +\n                quantile(nt$Income,0.75)))\nymin <- as.integer(min(nt$Income))\n\n#plotting histogram\nh <- ggplot(data = nt, aes(x = Income)) + \n  geom_histogram(color=\"black\", fill=\"azure4\", binwidth = 500) + \n  scale_x_continuous(limits = c(0,22000), labels = scales::comma) +\n  labs(x = \"Income\", y = \"Distribution\") +\n  geom_vline(aes(xintercept = Income_mean), col=\"darkblue\", linewidth=1) +\n  annotate(\"text\", x=6000, y=1800, label=\"Mean Income:\", \n           size=3, color=\"darkblue\") +\n  annotate(\"text\", x=5500, y=1700, label=format(Income_mean, big.mark = \",\"),\n           size=3, color=\"darkblue\") +\n  geom_vline(aes(xintercept = Income_median), col=\"lightpink4\", linewidth=1) +\n  annotate(\"text\", x=1800, y=1800, label=\"Median Income\", \n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=2400, y=1700, label=format(Income_median, big.mark = \",\"),\n           size=3, color=\"lightpink4\") +\n  theme(axis.text.x = element_text(size=8))\n\n#plotting boxplot\nb <- ggplot(data = nt, aes(y = Income)) + \n  geom_boxplot(outlier.colour=\"firebrick\", outlier.shape=16,\n               outlier.size=1, notch=FALSE) + \n  coord_flip() + labs(y = \"\", x = \"\") + \n  scale_y_continuous(limits = c(0,22000), labels = scales::comma) +\n  theme(axis.text = element_blank(), axis.ticks = element_blank()) + \n  stat_boxplot(geom=\"errorbar\", width=0.5) + \n  annotate(\"text\", x=0.35, y=ymax, label=format(ymax, big.mark = \",\"), \n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=0.35, y=ymin, label=format(ymin, big.mark = \",\"), \n           size=3, color=\"lightpink4\")\n\n#combining plots\nincome_distri <- b / h + plot_layout(heights = c(1, 4)) \n\nincome_distri + plot_annotation(title = \"Distribution of Monthly Income\", \n                               subtitle = \"There is a right-skewed distribution i.e. mean monthly income > median monthly income.\\n There is also a large number of outliers (income >$9,115).\",\n                               theme = theme(\n                                 plot.title = element_text(size = 16),\n                                 plot.subtitle = element_text(size = 10)))\n\n\n\n\n\nWe can see that the monthly income has a right-skewed distribution. This is a clear indication that the set of data is not normally distributed.\nSince we are unable to confirm normality assumption, one-sample Wilcoxon test will be used for hypothesis testing. Note that the null hypothesis is no difference in median monthly income.\nMedian is used instead of mean as point estimates due to high presence of outliers and skewness of data. This will also complement the non-parametric test as well.\nPerform a one-sample Wilcoxon test to test the null hypothesis:\n\nH0: the monthly income median is equal to $3,614\nH1: the monthly income median is different from $3,614\n\n\n\nShow the code\nset.seed(1234)\n\ngghistostats(\n  data = nt,\n  x = Income,\n  type = \"nonparametric\",\n  test.value = 3614,\n  xlab = \"Income\"\n)\n\n\n\n\n\n\n\nInsights\nBased on the results of the test (at the significance level of 0.05), we reject the null hypothesis. There is enough evidence to conclude that the median monthly income is significantly different from $3,614 (p-value = 4.47e-44).\n\n\n\n3.2.3 Difference in Monthly Income by Age Group and Education Level\n\nDesign Consideration\nWe want to confirm the normality assumption for distribution of monthly income by age group and education level.\n\nAge GroupEducation Level\n\n\n\n\nShow the code\n#Order the age variables by median of monthly income\nnt1 <- nt\nnt1$age <- fct_reorder(nt1$age, nt1$Income, median)\n\n#set the color pallete\ncol13_1 <- c(\"dodgerblue2\", \"#E31A1C\", \n  \"green4\",\n  \"#6A3D9A\", \n  \"#FF7F00\"\n  ) \n  \n#Initiating the base plot\np1 <- ggbetweenstats(\n  data = nt1 |> \n  group_by(age),\n  x = age, \n  y = Income, \n  ylab = \"Monthly Income\",\n  title = \"One-way ANOVA (age)\",\n  type = \"np\", \n  pairwise.comparisons = TRUE,\n  pairwise.display = \"ns\",\n  mean.ci = TRUE,\n  p.adjust.method = \"fdr\", \n  messages = FALSE \n  ) +\n  scale_color_manual(values = col13_1) +\n  theme(axis.title.x = element_blank()) +\n  scale_y_continuous(limits = c(0, 25000))\n\np1 + plot_annotation(\n  title = 'One-way ANOVA reveals differences in monthly income across different age groups',\n  subtitle = 'Monthly Income by Age',\n  theme = theme(plot.title = element_text(face = \"bold\", size = 12))\n)\n\n\n\n\n\n\n\n\n\nShow the code\n#Order the educationLevel variables by median of monthly income\nnt1$educationLevel <- fct_reorder(nt1$educationLevel, nt1$Income, median)\n\n#set the color pallete\ncol13_1 <- c(\"dodgerblue2\", \"#E31A1C\", \n  \"green4\",\n  \"#6A3D9A\" \n  ) \n  \n#Initiating the base plot\np1 <- ggbetweenstats(\n  data = nt1 |> \n  group_by(educationLevel),\n  x = educationLevel, \n  y = Income, \n  ylab = \"Monthly Income\",\n  title = \"One-way ANOVA (education level)\",\n  type = \"np\", \n  pairwise.comparisons = TRUE,\n  pairwise.display = \"ns\",\n  mean.ci = TRUE,\n  p.adjust.method = \"fdr\", \n  messages = FALSE \n  ) +\n  scale_color_manual(values = col13_1) +\n  theme(axis.title.x = element_blank()) +\n  scale_y_continuous(limits = c(0, 25000))\n\np1 + plot_annotation(\n  title = 'One-way ANOVA reveals differences in monthly income across education levels',\n  subtitle = 'Monthly Income by Education Levels',\n  theme = theme(plot.title = element_text(face = \"bold\", size = 12))\n)\n\n\n\n\n\n\n\n\n\n\nInsights\nBy age group:\nAs noted above, the hypothesis testing is done using Kruskal-Wallis test with 95% confidence level. The hypothesis is:\n\nH0 : There is no difference between median monthly income across age groups\nH1 : There is difference between median monthly income across age groups\n\nSince the p-value < critical value of 0.05, there is statistical evidence to reject the null hypothesis. We can conclude that there is significant difference in median monthly income across the age groups.\nBy education level:\nThe hypothesis is:\n\nH0 : There is no difference between median monthly income across education level\nH1 : There is difference between median monthly income across education level\n\nSince the p-value < critical value of 0.05, there is statistical evidence to reject the null hypothesis. We can conclude that there is significant difference in median monthly income across the education levels.\n\n\n\n3.2.4 Visualising Uncertainty of Monthly Income by Age Group and Education Level\n\nDesign Consideration\nWe would like to visualize the uncertainties surrounding the mean or median point estimates of the monthly income. Median point estimates are used instead of mean due to high presence of outliers and skewness of data. With this, user can still relate to the above one-way ANOVA analysis.\nWith median used as point estimate, quantile interval is used instead of confidence interval.\n95% and 99% intervals are used as they are commonly associated with 5% and 1% error rate, which are commonly used in hypothesis testing.\n\nAge GroupEducation Level\n\n\n\n\nShow the code\n#Base ggplot\nggplot(\n  data = nt,\n  aes(x = factor(age),\n      y = Income)) +\n  \n#Using stat_pointinterval to plot the points and intervals\n  stat_pointinterval(\n    aes(interval_color = stat(level)),\n    .width = c(0.95, 0.99),\n    .point = median,\n    .interval = qi,\n    point_color = \"darkred\",\n    show.legend = FALSE) +\n\n#Defining the color of the intervals \n  scale_color_manual(\n    values = c(\"blue2\", \"darkblue\"),\n    aesthetics = \"interval_color\") +\n  \n#Title, subtitle, and caption\n  labs(title = 'Visualising uncertainty in median estimates of monthly income by age group',\n  subtitle = 'Quantiles intervals (95% and 99%) of monthly income by Age Group',\n  x = \"Age Group\",\n  y = \"Monthly Income\") +\n  \n  theme_hc() +\n  \n  theme(plot.title = element_text(face = \"bold\", size = 12),\n        plot.subtitle = element_text(size = 10),\n        axis.text.x = element_text(hjust = 1))\n\n\n\n\n\n\n\n\n\nShow the code\n#Base ggplot\nggplot(\n  data = nt,\n  aes(x = factor(educationLevel, levels=c(\"Low\", \"HighSchoolOrCollege\",  \"Bachelors\", \"Graduate\")),\n      y = Income)) +\n  \n#Using stat_pointinterval to plot the points and intervals\n  stat_pointinterval(\n    aes(interval_color = stat(level)),\n    .width = c(0.95, 0.99),\n    .point = median,\n    .interval = qi,\n    point_color = \"darkred\",\n    show.legend = FALSE) +\n\n#Defining the color of the intervals \n  scale_color_manual(\n    values = c(\"blue2\", \"darkblue\"),\n    aesthetics = \"interval_color\") +\n  \n#Title, subtitle, and caption\n  labs(title = 'Visualising uncertainty in median estimates of monthly income by education level',\n  subtitle = 'Quantiles intervals (95% and 99%) of monthly income by education level',\n  x = \"Education Level\",\n  y = \"Monthly Income\") +\n  \n  theme_hc() +\n  \n  theme(plot.title = element_text(face = \"bold\", size = 10),\n        plot.subtitle = element_text(size = 9),\n        axis.text.x = element_text(hjust = 1))\n\n\n\n\n\n\n\n\n\n\nInsights\n\nAs noted above, age group 10-20 and 50-60 have higher uncertainties in the median estimates of the monthly income.\nBachelors and Graduates have higher uncertainties in the median estimates of the monthly income.\n\nVisualizing uncertainty of monthly income using Hypothetical Outcomes Plots based on 100 random samples:\n\nAge GroupEducation Level\n\n\n\n\nShow the code\nggplot(data = nt, \n       (aes(x = factor(age), y = Income))) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(100, group = age), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3) +\n  \n  #Title, subtitle, and caption\n  labs(title = 'Visualising uncertainty in monthly income by age group',\n  x = \"Age Group\",\n  y = \"Monthly Income\")\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = nt, \n       (aes(x = factor(educationLevel, levels=c(\"Low\", \"HighSchoolOrCollege\",  \"Bachelors\", \"Graduate\")), y = Income))) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(100, group = educationLevel), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3) +\n  \n  #Title, subtitle, and caption\n  labs(title = 'Visualising uncertainty in monthly income by education level',\n  x = \"Education Level\",\n  y = \"Monthly Income\")\n\n\n\n\n\n\n\n\n\n\nInsights\n\nAs noted above, age group 20-30 and 30-40 have higher uncertainties in the median estimates of the monthly income.\nBachelors and Graduates have higher uncertainties in the monthly income."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#age-group",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#age-group",
    "title": "Take-home Exercise 1",
    "section": "Age Group",
    "text": "Age Group\n\nEducation Level\n\n\n\n\nShow the code\nggplot(data = nt, aes(x = Income, y = educationLevel, fill = after_stat(x))) +\n  \n  geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +\n  \n  theme_ridges() +\n  \n    labs(title = 'Monthly Income by Education Level, Time: {frame_time}',\n       x = \"Monthly Income\",\n       y = \"Education Level\") +\n  \n  theme(legend.position=\"none\",\n  text = element_text(family = \"Garamond\"),\n  plot.title = element_text(face = \"bold\", size = 12),\n  \n  axis.title.x = element_text(size = 10, hjust = 1),\n  axis.title.y = element_text(size = 10),\n  axis.text = element_text(size = 8)) +\n  \n  scale_fill_viridis(name = \"Income\", option = \"C\") +\n  \n  transition_time(nt$timestamp) +\n  ease_aes('linear')\n\n\n\n\n\n\n\n\n\nInsights\n\nThere"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "pacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)\n\n\n\n\n\nGAStech_nodes <- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges <- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\n\n\n\n\nGAStech_edges <- GAStech_edges %>%\n  mutate(SendDate = dmy(SentDate)) %>%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\n\n\n\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(source, target, Weekday) %>%\n    summarise(Weight = n()) %>%\n  filter(source!=target) %>%\n  filter(Weight > 1) %>%\n  ungroup()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-tbl_graph-to-build-tidygraph-data-model.",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-tbl_graph-to-build-tidygraph-data-model.",
    "title": "Hands-on Exercise 5",
    "section": "Using tbl_graph() to build tidygraph data model.",
    "text": "Using tbl_graph() to build tidygraph data model.\n\nGAStech_graph <- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reviewing-the-output-tidygraphs-graph-object",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reviewing-the-output-tidygraphs-graph-object",
    "title": "Hands-on Exercise 5",
    "section": "Reviewing the output tidygraph’s graph object",
    "text": "Reviewing the output tidygraph’s graph object\n\nGAStech_graph\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 54 × 4\n     id label               Department     Title                                \n  <dbl> <chr>               <chr>          <chr>                                \n1     1 Mat.Bramar          Administration Assistant to CEO                     \n2     2 Anda.Ribera         Administration Assistant to CFO                     \n3     3 Rachel.Pantanal     Administration Assistant to CIO                     \n4     4 Linda.Lagos         Administration Assistant to COO                     \n5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Manag…\n6     6 Carla.Forluniau     Administration Assistant to IT Group Manager        \n# ℹ 48 more rows\n#\n# A tibble: 1,372 × 4\n   from    to Weekday Weight\n  <int> <int> <ord>    <int>\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-active-object",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-active-object",
    "title": "Hands-on Exercise 5",
    "section": "Changing the active object",
    "text": "Changing the active object\n\nGAStech_graph %>%\n  activate(edges) %>%\n  arrange(desc(Weight))\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 1,372 × 4\n   from    to Weekday  Weight\n  <int> <int> <ord>     <int>\n1    40    41 Saturday     13\n2    41    43 Monday       11\n3    35    31 Tuesday      10\n4    40    41 Monday       10\n5    40    43 Monday       10\n6    36    32 Sunday        9\n# ℹ 1,366 more rows\n#\n# A tibble: 54 × 4\n     id label           Department     Title           \n  <dbl> <chr>           <chr>          <chr>           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-a-basic-network-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-a-basic-network-graph",
    "title": "Hands-on Exercise 5",
    "section": "Plotting a basic network graph",
    "text": "Plotting a basic network graph\n\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-default-network-graph-theme",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-default-network-graph-theme",
    "title": "Hands-on Exercise 5",
    "section": "Changing the default network graph theme",
    "text": "Changing the default network graph theme\n\ng <- ggraph(GAStech_graph) + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-coloring-of-the-plot",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-coloring-of-the-plot",
    "title": "Hands-on Exercise 5",
    "section": "Changing the coloring of the plot",
    "text": "Changing the coloring of the plot\n\ng <- ggraph(GAStech_graph) + \n  geom_edge_link(aes(colour = 'grey50')) +\n  geom_node_point(aes(colour = 'grey40'))\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#fruchterman-and-reingold-layout",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#fruchterman-and-reingold-layout",
    "title": "Hands-on Exercise 5",
    "section": "Fruchterman and Reingold layout",
    "text": "Fruchterman and Reingold layout\n\ng <- ggraph(GAStech_graph, \n            layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-network-nodes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-network-nodes",
    "title": "Hands-on Exercise 5",
    "section": "Modifying network nodes",
    "text": "Modifying network nodes\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes(colour = Department, \n                      size = 3))\n\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-edges",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-edges",
    "title": "Hands-on Exercise 5",
    "section": "Modifying edges",
    "text": "Modifying edges\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\n\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edges",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edges",
    "title": "Hands-on Exercise 5",
    "section": "Working with facet_edges()",
    "text": "Working with facet_edges()\n\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n\ng + facet_edges(~Weekday)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edges-1",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edges-1",
    "title": "Hands-on Exercise 5",
    "section": "Working with facet_edges()",
    "text": "Working with facet_edges()\n\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2) +\n  theme(legend.position = 'bottom')\n  \ng + facet_edges(~Weekday)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#a-framed-facet-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#a-framed-facet-graph",
    "title": "Hands-on Exercise 5",
    "section": "A framed facet graph",
    "text": "A framed facet graph\n\nset_graph_style() \n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_edges(~Weekday) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_nodes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_nodes",
    "title": "Hands-on Exercise 5",
    "section": "Working with facet_nodes()",
    "text": "Working with facet_nodes()\n\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_nodes(~Department)+\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#computing-centrality-indices",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#computing-centrality-indices",
    "title": "Hands-on Exercise 5",
    "section": "Computing centrality indices",
    "text": "Computing centrality indices\n\ng <- GAStech_graph %>%\n  mutate(betweenness_centrality = centrality_betweenness()) %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department,\n            size=betweenness_centrality))\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-network-metrics",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-network-metrics",
    "title": "Hands-on Exercise 5",
    "section": "Visualising network metrics",
    "text": "Visualising network metrics\n\ng <- GAStech_graph %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department, \n                      size = centrality_betweenness()))\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-community",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-community",
    "title": "Hands-on Exercise 5",
    "section": "Visualising Community",
    "text": "Visualising Community\n\ng <- GAStech_graph %>%\n  mutate(community = as.factor(group_edge_betweenness(weights = Weight, directed = TRUE))) %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = community))  \n\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-preparation",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-preparation",
    "title": "Hands-on Exercise 5",
    "section": "Data preparation",
    "text": "Data preparation\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %>%\n  rename(from = id) %>%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %>%\n  rename(to = id) %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(from, to) %>%\n    summarise(weight = n()) %>%\n  filter(from!=to) %>%\n  filter(weight > 1) %>%\n  ungroup()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-the-first-interactive-network-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-the-first-interactive-network-graph",
    "title": "Hands-on Exercise 5",
    "section": "Plotting the first interactive network graph",
    "text": "Plotting the first interactive network graph\n\nvisNetwork(GAStech_nodes, \n           GAStech_edges_aggregated)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-layout",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-layout",
    "title": "Hands-on Exercise 5",
    "section": "Working with layout",
    "text": "Working with layout\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---nodes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---nodes",
    "title": "Hands-on Exercise 5",
    "section": "Working with visual attributes - Nodes",
    "text": "Working with visual attributes - Nodes\n\nGAStech_nodes <- GAStech_nodes %>%\n  rename(group = Department) \n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---edges",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---edges",
    "title": "Hands-on Exercise 5",
    "section": "Working with visual attributes - Edges",
    "text": "Working with visual attributes - Edges\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#interactivity",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#interactivity",
    "title": "Hands-on Exercise 5",
    "section": "Interactivity",
    "text": "Interactivity\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In-class_Ex05",
    "section": "",
    "text": "Show the code\npacman::p_load(jsonlite, igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)\n\n\n\n\n\n\n\nShow the code\nMC1 <- fromJSON(\"data/MC1.json\")\n\n\n\n\n\n\n\nShow the code\nMC1_nodes <- as_tibble(MC1$nodes) %>%\n  select(id, type, country)\n\n\n\n\nShow the code\nMC1_edges <- as_tibble(MC1$links) %>%\n  select(source, target, type, weight, key)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "This exercise aims to use appropriate static and interactive statistical graphics methods to help FishEye identify companies that may be engaged in illegal fishing.\nThe original dataset was originated from Mini Challenge 2 of Vast Challenge 2023.\nThere is one folder and one file downloaded: bundles and mc_challenge_graph.json. The bundles folder contains 12 groups of link suggestions.\nThis exercise aims to answer Q1 of the challenge:\n\nUse visual analytics to identify temporal patterns for individual entities and between entities in the knowledge graph FishEye created from trade records. Categorize the types of business relationship patterns you find. Limit your response to 600 words and 6 images.\n\nAs such, only the mc_challenge_graph.json file is used in this exercise."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#install-r-packages-and-import-dataset",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#install-r-packages-and-import-dataset",
    "title": "Take-home Exercise 2",
    "section": "2.1 Install R packages and import dataset",
    "text": "2.1 Install R packages and import dataset\nThe code chunk below uses pacman::p_load() to check if packages are installed. If they are, they will be launched into R.\n\n\nShow the code\n#Load packages\npacman::p_load(jsonlite, igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts, extrafont, knitr)\n\n\nImport datasets using fromJSON.\n\n\nShow the code\n#Import data\nMC2 <- fromJSON(\"data/mc2_challenge_graph.json\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#pull-nodes-and-links-out-to-separate-tables",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#pull-nodes-and-links-out-to-separate-tables",
    "title": "Take-home Exercise 2",
    "section": "2.2 Pull nodes and links out to separate tables",
    "text": "2.2 Pull nodes and links out to separate tables\nFor MC2 dataset:\n\n\nShow the code\nMC2_nodes <- as_tibble(MC2$nodes) %>%\n  select(id, shpcountry, rcvcountry)\n\n\n\n\nShow the code\nMC2_edges <- as_tibble(MC2$links) %>%\n  select(source, target, arrivaldate, hscode, valueofgoods_omu, volumeteu, weightkg, valueofgoodsusd)\n\n\nFor Bundles dataset:\n\n\nShow the code\ncarp_nodes <- as_tibble(carp$nodes) %>%\n  select(id, shpcountry, rcvcountry)\n\ncarp_edges <- as_tibble(carp$links) %>%\n  select(source, target, arrivaldate, hscode, valueofgoods_omu, volumeteu, weightkg)\n\n\n\n\nShow the code\ncatfish_nodes <- as_tibble(catfish$nodes) %>%\n  select(id, shpcountry, rcvcountry)\n\ncatfish_edges <- as_tibble(catfish$links) %>%\n  select(source, target, arrivaldate, hscode, valueofgoods_omu)\n\n\n\n\nShow the code\nchub_mackerel_nodes <- as_tibble(chub_mackerel$nodes) %>%\n  select(id, shpcountry, rcvcountry)\n\nchub_mackerel_edges <- as_tibble(chub_mackerel$links) %>%\n  select(source, target, arrivaldate, hscode, valueofgoods_omu, volumeteu, weightkg)\n\n\n\n\nShow the code\ncod2_nodes <- as_tibble(cod2$nodes) %>%\n  select(id, shpcountry, rcvcountry)\n\ncod2_edges <- as_tibble(cod2$links) %>%\n  select(source, target, arrivaldate, hscode, valueofgoods_omu, volumeteu, weightkg)\n\n\n\n\nShow the code\nherring_nodes <- as_tibble(herring$nodes) %>%\n  select(id, shpcountry, rcvcountry)\n\nherring_edges <- as_tibble(herring$links) %>%\n  select(source, target, arrivaldate, hscode, valueofgoods_omu, volumeteu, weightkg)\n\n\n\n\nShow the code\nlichen_nodes <- as_tibble(lichen$nodes) %>%\n  select(id, shpcountry, rcvcountry)\n\nlichen_edges <- as_tibble(lichen$links) %>%\n  select(source, target, arrivaldate, hscode, valueofgoods_omu, volumeteu, weightkg)\n\n\n\n\nShow the code\nmackerel_nodes <- as_tibble(mackerel$nodes) %>%\n  select(id, shpcountry, rcvcountry)\n\nmackerel_edges <- as_tibble(mackerel$links) %>%\n  select(source, target, arrivaldate, hscode, valueofgoods_omu)\n\n\n\n\nShow the code\npollock_nodes <- as_tibble(pollock$nodes) %>%\n  select(id, shpcountry, rcvcountry)\n\npollock_edges <- as_tibble(pollock$links) %>%\n  select(source, target, arrivaldate, hscode, valueofgoods_omu, volumeteu, weightkg)\n\n\n\n\nShow the code\nsalmon_nodes <- as_tibble(salmon$nodes) %>%\n  select(id, shpcountry, rcvcountry)\n\nsalmon_edges <- as_tibble(salmon$links) %>%\n  select(source, target, arrivaldate, hscode, valueofgoods_omu, volumeteu, weightkg)\n\n\n\n\nShow the code\nsalmon_wgl_nodes <- as_tibble(salmon_wgl$nodes) %>%\n  select(id, shpcountry, rcvcountry)\n\nsalmon_wgl_edges <- as_tibble(salmon_wgl$links) %>%\n  select(source, target, arrivaldate, hscode, valueofgoods_omu, volumeteu, weightkg)\n\n\n\n\nShow the code\nshark_nodes <- as_tibble(shark$nodes) %>%\n  select(id, shpcountry, rcvcountry)\n\nshark_edges <- as_tibble(shark$links) %>%\n  select(source, target, arrivaldate, hscode, valueofgoods_omu, volumeteu, weightkg)\n\n\n\n\nShow the code\ntuna_nodes <- as_tibble(tuna$nodes) %>%\n  select(id, shpcountry, rcvcountry)\n\ntuna_edges <- as_tibble(tuna$links) %>%\n  select(source, target, arrivaldate, hscode, valueofgoods_omu)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#data-wrangling",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#data-wrangling",
    "title": "Take-home Exercise 2",
    "section": "2.2 Data Wrangling",
    "text": "2.2 Data Wrangling\n\n2.2.1 Extracting the nodes and edges\nExtract the nodes:\n\n\nShow the code\nMC2_nodes <- as_tibble(MC2$nodes) %>%\n  select(id, shpcountry, rcvcountry)\nkable(head(MC2_nodes))\n\n\n\n\n\nid\nshpcountry\nrcvcountry\n\n\n\n\nAquaDelight Inc and Son’s\nPolarinda\nOceanus\n\n\nBaringoAmerica Marine Ges.m.b.H.\nNA\nNA\n\n\nYu gan Sea spray GmbH Industrial\nOceanus\nOceanus\n\n\nFlounderLeska Marine BV\nNA\nNA\n\n\nOlas del Mar Worldwide\nOceanus\nOceanus\n\n\nFrench Crab S.p.A. Worldwide\nKondanovia\nUtoporiana\n\n\n\n\n\nExtract the edges:\n\nConvert arrivaldate from chr to Date format.\nExtract year from arrivaldate.\nRemove duplicate records, if any.\n\n\n\nShow the code\nMC2_edges <- as_tibble(MC2$links) %>%\n  mutate(ArrivalDate = ymd(arrivaldate)) %>%\n  mutate(Year = year(ArrivalDate)) %>%\n  select(source, target, ArrivalDate, Year, hscode,  valueofgoods_omu, \n         volumeteu, weightkg, valueofgoodsusd) %>% \n  distinct()\nkable(head(MC2_edges))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsource\ntarget\nArrivalDate\nYear\nhscode\nvalueofgoods_omu\nvolumeteu\nweightkg\nvalueofgoodsusd\n\n\n\n\nAquaDelight Inc and Son’s\nBaringoAmerica Marine Ges.m.b.H.\n2034-02-12\n2034\n630630\n141015\n0\n4780\nNA\n\n\nAquaDelight Inc and Son’s\nBaringoAmerica Marine Ges.m.b.H.\n2034-03-13\n2034\n630630\n141015\n0\n6125\nNA\n\n\nAquaDelight Inc and Son’s\n-15045\n2028-02-07\n2028\n470710\nNA\n0\n10855\nNA\n\n\nAquaDelight Inc and Son’s\n-15045\n2028-02-23\n2028\n470710\nNA\n0\n11250\nNA\n\n\nAquaDelight Inc and Son’s\n-15045\n2028-09-11\n2028\n470710\nNA\n0\n11165\nNA\n\n\nAquaDelight Inc and Son’s\n-15045\n2028-10-09\n2028\n470710\nNA\n0\n11290\nNA\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nLooking at the data below, we notice a few problems as follows:\nMC2_nodes: - Missing fields in shpcountry and rcvcountry. - Weird id, shpcountry and rcvcountry values e.g. -1143, -6894, etc.\nMC2_edges: - Missing fields in valueofgoods_omu, volumeteu and valueofgoodsusd. - source and targethave weird values e.g. -1992.\nThe weird id values still represent the respective companies. As such they are still valid and should be not removed. As for the missing values, we will leave them aside as we will not use these variables.\n\n\n\n\n2.2.2 Preparing edges data table\nReference to Singapore Trade Classification, Customs and Excise Duties 2022 HS code, we filter only those codes that are relevant to fishes, as follows:\n\nChapter 3: Fish and crustaceans, molluscs and other aquatic invertebrates - 0301, 0302, 0303, 0304, 0305, 0306, 0307, 0308, 0309\nChapter 15: Animal, vegetable or microbial fats and oils and their cleavage products - 1504\nChapter 16: Preparations of meat, of fish, crustaceans, molluscs or other aquatic 73 invertebrates, or of insects - 1603, 1604, 1605\nChapter 21: Flours, meals and pellets, of meat or meat offal, of fish or of crustaceans, molluscs or other aquatic invertebrates, unfit for human consumption; greaves - 2301\n\nWe also took reference from Connect2india and identified that codes ranging from 300000 - 390000 are related to fishes too. Codes in this range are filtered out and included in the analysis.\n\nhscode is converted from chr to int format.\nDuplicate records are removed, if any.\n\n\n\nShow the code\nMC2_edges$hscode <- as.integer(MC2_edges$hscode)\n\nMC2_edges1 <- MC2_edges %>% filter(between(hscode, 030100, 030999))\nMC2_edges2 <- MC2_edges %>% filter(between(hscode, 150400, 150499))\nMC2_edges3 <- MC2_edges %>% filter(between(hscode, 160300, 160599))\nMC2_edges4 <- MC2_edges %>% filter(between(hscode, 230100, 230199))\nMC2_edges5 <- MC2_edges %>% filter(between(hscode, 300000, 390000))\n\nMC2_edges <- rbind(MC2_edges1, MC2_edges2, MC2_edges3, MC2_edges4, MC2_edges5) %>%\n  distinct()\n\n\n\nCompute weights i.e. no. of times a specific source is linked to a specific target.\n\n\n\nShow the code\nMC2_edges_aggregated <- MC2_edges %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n()) %>%\n  filter(source!=target) %>%\n  ungroup() \n\n\n\nForm a new nodes data table for MC2 by using source and target of MC2_edges_aggregated data table. This is to ensure that the nodes in nodes data tables include all the source and target values.\n\n\n\nShow the code\nid1 <- MC2_edges_aggregated %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted <- rbind(id1, id2) %>%\n  distinct()\n\n\nThere is a total of 15152 companies involved in fishing activities from 2028 to 2034."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "title": "Hands-on Exercise 6",
    "section": "",
    "text": "pacman::p_load('plotly', 'tidyverse')\n\n#require(devtools)\n#install_version(\"ggtern\", version = \"3.4.1\", repos = #\"http://cran.us.r-project.org\")\n\nlibrary(ggtern)\n\n\n\n\n\n\n\n#Reading the data into R environment\npop_data <- read_csv(\"data/respopagsex2000to2018_tidy.csv\")\n\n\n\n\n\n#Deriving the young, economy active and old measures\nagpop_mutated <- pop_data %>%\n  mutate(`Year` = as.character(Year))%>%\n  pivot_wider(names_from = AG, values_from = Population) %>% #use pivot_wider\n  mutate(YOUNG = rowSums(.[4:8]))%>%\n  mutate(ACTIVE = rowSums(.[9:16]))  %>%\n  mutate(OLD = rowSums(.[17:21])) %>%\n  mutate(TOTAL = rowSums(.[22:24])) %>%\n  filter(Year == 2018)%>%\n  filter(TOTAL > 0)\n\n\n\n\n\n\n\n\n#Building the static ternary plot\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n\n\n\n\n\n#Building the static ternary plot\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\n\n\n\n\n# reusable function for creating annotation object\nlabel <- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\n# reusable function for axis formatting\naxis <- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes <- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\n# Initiating a plotly visualization \nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"black\"), \n  type = \"scatterternary\"\n) %>%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#installing-and-launching-r-packages-1",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#installing-and-launching-r-packages-1",
    "title": "Hands-on Exercise 6",
    "section": "Installing and launching R packages",
    "text": "Installing and launching R packages\n\npacman::p_load(corrplot, ggstatsplot, tidyverse, ggcorrplot)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#importing-and-preparing-the-data-set",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#importing-and-preparing-the-data-set",
    "title": "Hands-on Exercise 6",
    "section": "Importing and Preparing The Data Set",
    "text": "Importing and Preparing The Data Set\n\nwine <- read_csv(\"data/wine_quality.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#building-correlation-matrix-pairs-method",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#building-correlation-matrix-pairs-method",
    "title": "Hands-on Exercise 6",
    "section": "Building Correlation Matrix: pairs() method",
    "text": "Building Correlation Matrix: pairs() method\n\nBuilding a basic correlation matrix\n\npairs(wine[,1:11])\n\n\n\n\n\npairs(wine[,2:12])\n\n\n\n\n\n\nDrawing the lower corner\n\npairs(wine[,2:12], upper.panel = NULL)\n\n\n\n\n\npairs(wine[,2:12], lower.panel = NULL)\n\n\n\n\n\n\nIncluding with correlation coefficients\n\npanel.cor <- function(x, y, digits=2, prefix=\"\", cex.cor, ...) {\nusr <- par(\"usr\")\non.exit(par(usr))\npar(usr = c(0, 1, 0, 1))\nr <- abs(cor(x, y, use=\"complete.obs\"))\ntxt <- format(c(r, 0.123456789), digits=digits)[1]\ntxt <- paste(prefix, txt, sep=\"\")\nif(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)\ntext(0.5, 0.5, txt, cex = cex.cor * (1 + r) / 2)\n}\n\npairs(wine[,2:12], \n      upper.panel = panel.cor)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#visualising-correlation-matrix-ggcormat",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#visualising-correlation-matrix-ggcormat",
    "title": "Hands-on Exercise 6",
    "section": "Visualising Correlation Matrix: ggcormat()",
    "text": "Visualising Correlation Matrix: ggcormat()\n\nThe basic plot\n\n#ggstatsplot::ggcorrmat(\n#  data = wine, \n#  cor.vars = 1:11)\n\n\n#ggstatsplot::ggcorrmat(\n#  data = wine, \n#  cor.vars = 1:11,\n#  ggcorrplot.args = list(outline.color = \"black\", \n#                         hc.order = TRUE,\n#                         tl.cex = 10),\n#  title    = \"Correlogram for wine dataset\",\n#  subtitle = \"Four pairs are no significant at p < 0.05\"\n#)\n\n\nggplot.component = list(\n    theme(text=element_text(size=5),\n      axis.text.x = element_text(size = 8),\n      axis.text.y = element_text(size = 8)))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#building-multiple-plots",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#building-multiple-plots",
    "title": "Hands-on Exercise 6",
    "section": "Building multiple plots",
    "text": "Building multiple plots\n\ngrouped_ggcorrmat(\n  data = wine,\n  cor.vars = 1:11,\n  grouping.var = type,\n  type = \"robust\",\n  p.adjust.method = \"holm\",\n  plotgrid.args = list(ncol = 2),\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  annotation.args = list(\n    tag_levels = \"a\",\n    title = \"Correlogram for wine dataset\",\n    subtitle = \"The measures are: alcohol, sulphates, fixed acidity, citric acid, chlorides, residual sugar, density, free sulfur dioxide and volatile acidity\",\n    caption = \"Dataset: UCI Machine Learning Repository\"\n  )\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#visualising-correlation-matrix-using-corrplot-package",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#visualising-correlation-matrix-using-corrplot-package",
    "title": "Hands-on Exercise 6",
    "section": "Visualising Correlation Matrix using corrplot Package",
    "text": "Visualising Correlation Matrix using corrplot Package\n\nGetting started with corrplot\n\nwine.cor <- cor(wine[, 1:11])\n\ncorrplot(wine.cor)\n\n\n\n\n\n\nWorking with visual geometrics\n\ncorrplot(wine.cor, \n         method = \"ellipse\") \n\n\n\n\n\n\nWorking with layout\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\")\n\n\n\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\",\n         diag = FALSE,\n         tl.col = \"black\")\n\n\n\n\n\n\nWorking with mixed layout\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\n\nCombining corrgram with the significant test\n\nwine.sig = cor.mtest(wine.cor, conf.level= .95)\n\ncorrplot(wine.cor,\n         method = \"number\",\n         type = \"lower\",\n         diag = FALSE,\n         tl.col = \"black\",\n         tl.srt = 45,\n         p.mat = wine.sig$p,\n         sig.level = .05)\n\n\n\n\n\n\nReorder a corrgram\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               order=\"AOE\",\n               tl.col = \"black\")\n\n\n\n\n\n\nReordering a correlation matrix using hclust\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         tl.pos = \"lt\",\n         tl.col = \"black\",\n         order=\"hclust\",\n         hclust.method = \"ward.D\",\n         addrect = 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#installing-and-launching-r-packages-2",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#installing-and-launching-r-packages-2",
    "title": "Hands-on Exercise 6",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\n\npacman::p_load(seriation, dendextend, heatmaply, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#importing-and-preparing-the-data-set-1",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#importing-and-preparing-the-data-set-1",
    "title": "Hands-on Exercise 6",
    "section": "Importing and Preparing The Data Set",
    "text": "Importing and Preparing The Data Set\n\nImporting the data set\n\nwh <- read_csv(\"data/WHData-2018.csv\")\n\n\n\nPreparing the data\n\nrow.names(wh) <- wh$Country\n\n\n\nTransforming the data frame into a matrix\n\nwh1 <- dplyr::select(wh, c(3, 7:12))\nwh_matrix <- data.matrix(wh)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#static-heatmap",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#static-heatmap",
    "title": "Hands-on Exercise 6",
    "section": "Static Heatmap",
    "text": "Static Heatmap\n\nheatmap() of R Stats\n\nwh_heatmap <- heatmap(wh_matrix,\n                      Rowv=NA, Colv=NA)\n\n\n\n\n\nwh_heatmap <- heatmap(wh_matrix)\n\n\n\n\n\nwh_heatmap <- heatmap(wh_matrix,\n                      scale=\"column\",\n                      cexRow = 0.6, \n                      cexCol = 0.8,\n                      margins = c(10, 4))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#creating-interactive-heatmap",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#creating-interactive-heatmap",
    "title": "Hands-on Exercise 6",
    "section": "Creating Interactive Heatmap",
    "text": "Creating Interactive Heatmap\n\nWorking with heatmaply\n\nheatmaply(mtcars)\n\n\n\n\n\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)])\n\n\n\n\n\n\n\nData transformation\n\nScaling method\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)],\n          scale = \"column\")\n\n\n\n\n\n\n\nNormalising method\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\n\n\nPercentising method\n\nheatmaply(percentize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\n\n\n\nClustering algorithm\n\nManual approach\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\")\n\n\n\n\n\n\n\nStatistical approach\n\nwh_d <- dist(normalize(wh_matrix[, -c(1, 2, 4, 5)]), method = \"euclidean\")\ndend_expend(wh_d)[[3]]\n\n  dist_methods hclust_methods     optim\n1      unknown         ward.D 0.6137851\n2      unknown        ward.D2 0.6289186\n3      unknown         single 0.4774362\n4      unknown       complete 0.6434009\n5      unknown        average 0.6701688\n6      unknown       mcquitty 0.5020102\n7      unknown         median 0.5901833\n8      unknown       centroid 0.6338734\n\n\n\nwh_clust <- hclust(wh_d, method = \"average\")\nnum_k <- find_k(wh_clust)\nplot(num_k)\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"average\",\n          k_row = 3)\n\n\n\n\n\n\n\nSeriation\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"OLO\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"GW\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"mean\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"none\")\n\n\n\n\n\n\n\nWorking with colour palettes\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"none\",\n          colors = Blues)\n\n\n\n\n\n\n\nThe finishing touch\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          Colv=NA,\n          seriate = \"none\",\n          colors = Blues,\n          k_row = 5,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"World Happiness Score and Variables by Country, 2018 \\nDataTransformation using Normalise Method\",\n          xlab = \"World Happiness Indicators\",\n          ylab = \"World Countries\"\n          )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#installing-and-launching-r-packages-3",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#installing-and-launching-r-packages-3",
    "title": "Hands-on Exercise 6",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\n\npacman::p_load(GGally, parallelPlot, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#data-preparation-1",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#data-preparation-1",
    "title": "Hands-on Exercise 6",
    "section": "Data Preparation",
    "text": "Data Preparation\n\nwh <- read_csv(\"data/WHData-2018.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#plotting-static-parallel-coordinates-plot",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#plotting-static-parallel-coordinates-plot",
    "title": "Hands-on Exercise 6",
    "section": "Plotting Static Parallel Coordinates Plot",
    "text": "Plotting Static Parallel Coordinates Plot\n\nPlotting a simple parallel coordinates\n\nggparcoord(data = wh, \n           columns = c(7:12))\n\n\n\n\n\n\nPlotting a parallel coordinates with boxplot\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Parallel Coordinates Plot of World Happines Variables\")\n\n\n\n\n\n\nParallel coordinates with facet\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region)\n\n\n\n\n\n\nRotating x-axis text label\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30))\n\n\n\n\n\n\nAdjusting the rotated x-axis text label\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30, hjust=1))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#plotting-interactive-parallel-coordinates-plot-parallelplot-methods",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#plotting-interactive-parallel-coordinates-plot-parallelplot-methods",
    "title": "Hands-on Exercise 6",
    "section": "Plotting Interactive Parallel Coordinates Plot: parallelPlot methods",
    "text": "Plotting Interactive Parallel Coordinates Plot: parallelPlot methods\n\nThe basic plot\n\nwh <- wh %>%\n  select(\"Happiness score\", c(7:12))\nparallelPlot(wh,\n             width = 320,\n             height = 250)\n\n\n\n\n\n\n\nRotate axis label\n\nparallelPlot(wh,\n             rotateTitle = TRUE)\n\n\n\n\n\n\n\nChanging the colour scheme\n\nparallelPlot(wh,\n             continuousCS = \"YlOrRd\",\n             rotateTitle = TRUE)\n\n\n\n\n\n\n\nParallel coordinates plot with histogram\n\nhistoVisibility <- rep(TRUE, ncol(wh))\nparallelPlot(wh,\n             rotateTitle = TRUE,\n             histoVisibility = histoVisibility)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#installing-and-launching-r-packages-4",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#installing-and-launching-r-packages-4",
    "title": "Hands-on Exercise 6",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\n\npacman::p_load(treemap, treemapify, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#data-wrangling",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#data-wrangling",
    "title": "Hands-on Exercise 6",
    "section": "Data Wrangling",
    "text": "Data Wrangling\n\nImporting the data set\n\nrealis2018 <- read_csv(\"data/realis2018.csv\")\n\n\n\nGrouped summaries without the Pipe\n\nrealis2018_grouped <- group_by(realis2018, `Project Name`,\n                               `Planning Region`, `Planning Area`, \n                               `Property Type`, `Type of Sale`)\nrealis2018_summarised <- summarise(realis2018_grouped, \n                          `Total Unit Sold` = sum(`No. of Units`, na.rm = TRUE),\n                          `Total Area` = sum(`Area (sqm)`, na.rm = TRUE),\n                          `Median Unit Price ($ psm)` = median(`Unit Price ($ psm)`, na.rm = TRUE), \n                          `Median Transacted Price` = median(`Transacted Price ($)`, na.rm = TRUE))\n\n\n\nGrouped summaries with the pipe\n\nrealis2018_summarised <- realis2018 %>% \n  group_by(`Project Name`,`Planning Region`, \n           `Planning Area`, `Property Type`, \n           `Type of Sale`) %>%\n  summarise(`Total Unit Sold` = sum(`No. of Units`, na.rm = TRUE), \n            `Total Area` = sum(`Area (sqm)`, na.rm = TRUE),\n            `Median Unit Price ($ psm)` = median(`Unit Price ($ psm)`, na.rm = TRUE),\n            `Median Transacted Price` = median(`Transacted Price ($)`, na.rm = TRUE))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#designing-treemap-with-treemap-package",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#designing-treemap-with-treemap-package",
    "title": "Hands-on Exercise 6",
    "section": "Designing Treemap with treemap Package",
    "text": "Designing Treemap with treemap Package\n\nDesigning a static treemap\n\nrealis2018_selected <- realis2018_summarised %>%\n  filter(`Property Type` == \"Condominium\", `Type of Sale` == \"Resale\")\n\n\n\nUsing the basic arguments\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\nWorking with vColor and type arguments\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type = \"value\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\nThe “value” type treemap\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"value\",\n        palette=\"RdYlBu\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\nThe “manual” type treemap\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"RdYlBu\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\nWorking with algorithm argument\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        algorithm = \"squarified\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\nUsing sortID\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        algorithm = \"pivotSize\",\n        sortID = \"Median Transacted Price\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#designing-treemap-using-treemapify-package",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#designing-treemap-using-treemapify-package",
    "title": "Hands-on Exercise 6",
    "section": "Designing Treemap using treemapify Package",
    "text": "Designing Treemap using treemapify Package\n\nDesigning a basic treemap\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`),\n       layout = \"scol\",\n       start = \"bottomleft\") + \n  geom_treemap() +\n  scale_fill_gradient(low = \"light blue\", high = \"blue\")\n\n\n\n\n\n\nDefining hierarchy\n\n# Group by Planning Region\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`),\n       start = \"topleft\") + \n  geom_treemap()\n\n\n\n\n\n# Group by Planning Area\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`,\n           subgroup2 = `Planning Area`)) + \n  geom_treemap()\n\n\n\n\n\n# Adding boundary line\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`,\n           subgroup2 = `Planning Area`)) + \n  geom_treemap() +\n  geom_treemap_subgroup2_border(colour = \"gray40\",\n                                size = 2) +\n  geom_treemap_subgroup_border(colour = \"gray20\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#designing-interactive-treemap-using-d3treer",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#designing-interactive-treemap-using-d3treer",
    "title": "Hands-on Exercise 6",
    "section": "Designing Interactive Treemap using d3treeR",
    "text": "Designing Interactive Treemap using d3treeR\n\nInstalling d3treeR package\n\n#install.packages(\"devtools\")\n\n#library(devtools)\n#install_github(\"timelyportfolio/d3treeR\")\n\nlibrary(d3treeR)\n\n\n\nDesigning An Interactive Treemap\n\ntm <- treemap(realis2018_summarised,\n        index=c(\"Planning Region\", \"Planning Area\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"value\",\n        title=\"Private Residential Property Sold, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\nd3tree(tm,rootname = \"Singapore\" )"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#check-that-source-and-target-data-from-the-respective-edges-file-are-consistent-with-i.e.-can-be-found-in-their-respective-nodes-id.",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#check-that-source-and-target-data-from-the-respective-edges-file-are-consistent-with-i.e.-can-be-found-in-their-respective-nodes-id.",
    "title": "Take-home Exercise 2",
    "section": "2.3 Check that source and target data from the respective edges file are consistent with i.e. can be found in their respective nodes id.",
    "text": "2.3 Check that source and target data from the respective edges file are consistent with i.e. can be found in their respective nodes id.\n\n\nShow the code\ncarp_edges$source[!carp_edges$source %in% carp_nodes$id]\n\n\ncharacter(0)\n\n\nShow the code\ncarp_edges$target[!carp_edges$target %in% carp_nodes$id]\n\n\ncharacter(0)\n\n\n\n\nShow the code\ncatfish_edges$source[!catfish_edges$source %in% catfish_nodes$id]\n\n\ncharacter(0)\n\n\nShow the code\ncatfish_edges$target[!catfish_edges$target %in% catfish_nodes$id]\n\n\ncharacter(0)\n\n\n\n\nShow the code\nchub_mackerel_edges$source[!chub_mackerel_edges$source %in% chub_mackerel_nodes$id]\n\n\ncharacter(0)\n\n\nShow the code\nchub_mackerel_edges$target[!chub_mackerel_edges$target %in% chub_mackerel_nodes$id]\n\n\ncharacter(0)\n\n\n\n\nShow the code\ncod2_edges$source[!cod2_edges$source %in% cod2_nodes$id]\n\n\ncharacter(0)\n\n\nShow the code\ncod2_edges$target[!cod2_edges$target %in% cod2_nodes$id]\n\n\ncharacter(0)\n\n\n\n\nShow the code\nherring_edges$source[!herring_edges$source %in% herring_nodes$id]\n\n\ncharacter(0)\n\n\nShow the code\nherring_edges$target[!herring_edges$target %in% herring_nodes$id]\n\n\ncharacter(0)\n\n\n\n\nShow the code\nlichen_edges$source[!lichen_edges$source %in% lichen_nodes$id]\n\n\ncharacter(0)\n\n\nShow the code\nlichen_edges$target[!lichen_edges$target %in% lichen_nodes$id]\n\n\ncharacter(0)\n\n\n\n\nShow the code\nmackerel_edges$source[!mackerel_edges$source %in% mackerel_nodes$id]\n\n\ncharacter(0)\n\n\nShow the code\nmackerel_edges$target[!mackerel_edges$target %in% mackerel_nodes$id]\n\n\ncharacter(0)\n\n\n\n\nShow the code\npollock_edges$source[!pollock_edges$source %in% pollock_nodes$id]\n\n\ncharacter(0)\n\n\nShow the code\npollock_edges$target[!pollock_edges$target %in% pollock_nodes$id]\n\n\ncharacter(0)\n\n\n\n\nShow the code\nsalmon_edges$source[!salmon_edges$source %in% salmon_nodes$id]\n\n\ncharacter(0)\n\n\nShow the code\nsalmon_edges$target[!salmon_edges$target %in% salmon_nodes$id]\n\n\ncharacter(0)\n\n\n\n\nShow the code\nsalmon_wgl_edges$source[!salmon_wgl_edges$source %in% salmon_wgl_nodes$id]\n\n\ncharacter(0)\n\n\nShow the code\nsalmon_wgl_edges$target[!salmon_wgl_edges$target %in% salmon_wgl_nodes$id]\n\n\ncharacter(0)\n\n\n\n\nShow the code\nshark_edges$source[!shark_edges$source %in% shark_nodes$id]\n\n\ncharacter(0)\n\n\nShow the code\nshark_edges$target[!shark_edges$target %in% shark_nodes$id]\n\n\ncharacter(0)\n\n\n\n\nShow the code\ntuna_edges$source[!tuna_edges$source %in% tuna_nodes$id]\n\n\ncharacter(0)\n\n\nShow the code\ntuna_edges$target[!tuna_edges$target %in% tuna_nodes$id]\n\n\ncharacter(0)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#using-tbl_graph-to-build-tidygraph-data-model.",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#using-tbl_graph-to-build-tidygraph-data-model.",
    "title": "Take-home Exercise 2",
    "section": "2.1 Using tbl_graph() to build tidygraph data model.",
    "text": "2.1 Using tbl_graph() to build tidygraph data model.\n\n\nShow the code\ncarp_graph <- tbl_graph(nodes = carp_nodes,\n                           edges = carp_edges_aggregated, \n                           directed = TRUE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#reviewing-the-output-tidygraphs-graph-object",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#reviewing-the-output-tidygraphs-graph-object",
    "title": "Take-home Exercise 2",
    "section": "2.2 Reviewing the output tidygraph’s graph object",
    "text": "2.2 Reviewing the output tidygraph’s graph object\n#{r} #carp_graph #"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#changing-the-active-object",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#changing-the-active-object",
    "title": "Take-home Exercise 2",
    "section": "2.3 Changing the active object",
    "text": "2.3 Changing the active object\n#{r} #g %>% #  activate(edges) %>% #  arrange(desc(Weight)) #"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#plotting-a-basic-network-graph",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#plotting-a-basic-network-graph",
    "title": "Take-home Exercise 2",
    "section": "3.1 Plotting a basic network graph",
    "text": "3.1 Plotting a basic network graph\n\n\nShow the code\nggraph(carp_graph) +\n  geom_edge_link() +\n  geom_node_point()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#building-the-tidygraph-data-model",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#building-the-tidygraph-data-model",
    "title": "Take-home Exercise 2",
    "section": "3.1 Building the tidygraph data model",
    "text": "3.1 Building the tidygraph data model\n\nFor top 50 weights:\n\n\n\nShow the code\nMC2_graph <- tbl_graph(nodes = MC2_nodes_extracted_top50,\n                       edges = MC2_edges_aggregated_top50,\n                       directed = TRUE) \nMC2_graph\n\n\n# A tbl_graph: 42 nodes and 50 edges\n#\n# A directed acyclic multigraph with 12 components\n#\n# A tibble: 42 × 1\n  id                                   \n  <chr>                                \n1 Playa del Tesoro OJSC                \n2 Estrella de la Costa SRL             \n3 OceanicOrigin Foods Co Consulting    \n4 Gujarat   Tide NV Solutions          \n5 Caracola del Este Corporation Express\n6 Náutica del Sol Brothers             \n# ℹ 36 more rows\n#\n# A tibble: 50 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1    23 160414  2028    1112\n2     1    23 160414  2030    1102\n3     1    23 160414  2029    1046\n# ℹ 47 more rows\n\n\n\nFor each year, e.g Year 2028:\n\n\n\nShow the code\nMC2_graph2028 <- tbl_graph(nodes = MC2_nodes_extracted_2028,\n                       edges = MC2_edges_aggregated_2028,\n                       directed = TRUE) \nMC2_graph2028\n\n\n# A tbl_graph: 221 nodes and 227 edges\n#\n# A directed acyclic multigraph with 31 components\n#\n# A tibble: 221 × 1\n  id                                        \n  <chr>                                     \n1 Playa del Tesoro OJSC                     \n2 OceanicOrigin Foods Co Consulting         \n3 Gujarat   Tide NV Solutions               \n4 Goa   Seaside Sp Overseas                 \n5 Neptune's Harvest A/S Hijiki              \n6 Chhattisgarh   Marine ecology A/S Delivery\n# ℹ 215 more rows\n#\n# A tibble: 227 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1   130 160414  2028    1112\n2     2   131 160414  2028     438\n3     3   132 160414  2028     434\n# ℹ 224 more rows\n\n\nShow the code\nMC2_graph2029 <- tbl_graph(nodes = MC2_nodes_extracted_2029,\n                       edges = MC2_edges_aggregated_2029,\n                       directed = TRUE) \n\nMC2_graph2030 <- tbl_graph(nodes = MC2_nodes_extracted_2030,\n                       edges = MC2_edges_aggregated_2030,\n                       directed = TRUE) \n\nMC2_graph2031 <- tbl_graph(nodes = MC2_nodes_extracted_2031,\n                       edges = MC2_edges_aggregated_2031,\n                       directed = TRUE) \n\nMC2_graph2032 <- tbl_graph(nodes = MC2_nodes_extracted_2032,\n                       edges = MC2_edges_aggregated_2032,\n                       directed = TRUE) \n\nMC2_graph2033 <- tbl_graph(nodes = MC2_nodes_extracted_2033,\n                       edges = MC2_edges_aggregated_2033,\n                       directed = TRUE) \n\nMC2_graph2034 <- tbl_graph(nodes = MC2_nodes_extracted_2034,\n                       edges = MC2_edges_aggregated_2034,\n                       directed = TRUE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualising-the-network-graph",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualising-the-network-graph",
    "title": "Take-home Exercise 2",
    "section": "3.2 Visualising the network graph",
    "text": "3.2 Visualising the network graph\n\n3.2.1 Overview: Top 80 Weights Companies\n\nData Preparation\n\nFilter MC2_edges_aggregated data table by top 80 weights records.\n\n\n\nShow the code\nMC2_edges_aggregated_top80 <- MC2_edges_aggregated %>% \n  arrange(desc(weights)) %>%\n  head(80)\nMC2_edges_aggregated_top80\n\n\n# A tibble: 80 × 5\n   source                              target               hscode  Year weights\n   <chr>                               <chr>                 <int> <dbl>   <int>\n 1 \"nián yú Ltd. Corporation\"          Niger Bend   Limite… 304620  2031    3471\n 2 \"nián yú Ltd. Corporation\"          Niger Bend   Limite… 304620  2030    2979\n 3 \"nián yú Ltd. Corporation\"          Costa de la Felicid… 304620  2029    2797\n 4 \"Sea Breezes S.A. de C.V. Freight \" Caracola del Sol Se… 304620  2031    2708\n 5 \"nián yú Ltd. Corporation\"          Costa de la Felicid… 304620  2028    2473\n 6 \"nián yú Ltd. Corporation\"          Niger Bend   Limite… 304620  2032    2215\n 7 \"Sea Breezes S.A. de C.V. Freight \" Caracola del Sol Se… 304620  2030    2089\n 8 \"Sea Breezes S.A. de C.V. Freight \" Pao gan SE Seal      304620  2033    1824\n 9 \"nián yú Ltd. Corporation\"          Niger Bend   Limite… 304620  2033    1528\n10 \"Paradera S.A. de C.V.\"             Pao gan SE Seal      304620  2032    1473\n# ℹ 70 more rows\n\n\n\nPreparing nodes data table:\n\n\n\nShow the code\nid1 <- MC2_edges_aggregated_top80 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated_top80 %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted_top80 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\nStatic Network Graph\n\n\nShow the code\nMC2_graphtop80 <- tbl_graph(nodes = MC2_nodes_extracted_top80,\n                       edges = MC2_edges_aggregated_top80,\n                       directed = TRUE) \n\nggraph(MC2_graphtop80, \n            layout = \"linear\", circular = TRUE) +\n  geom_edge_link(aes(width = weights, colour = factor(Year)), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(), \n                  size = 3) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Top 80 Weights Companies\") \n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nThe edge width denotes the weights size. The higher the weights, the thicker the edge width. The edge colour denotes the year.\nFrom MC2 data, the top 3 highest-weight source->target are identified as follows:\n\n\n\n\n\n\n\n\n\nNo.\nSource\nTarget\nYear / (weights)\n\n\n\n\n1\nnián yú Ltd. Corporation\nNiger Bend Limited Liability Company Marine ecology\n2031 / (3471), 2030 / (2979)\n\n\n2\nnián yú Ltd. Corporation\nCosta de la Felicidad Shipping\n2029 / (2797), 2028 / (2473)\n\n\n3\nSea Breezes S.A. de C.V. Freight\nCaracola del Sol Services\n2031 / (2708)\n\n\n\n\n\n\n\n\n3.2.2 Distribution of hscode with top weights by Year\nWe observed that the top 19 weights companies are associated with hscode 304620. We want to find out the distribution of this code by year.\n\n\nShow the code\nggplot(data=MC2_edges_aggregated %>% filter(hscode == \"304620\"), \n       aes(y = weights, x= factor(Year))) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"median\",           \n             colour =\"red\",          \n             size=4) +\n  xlab(\"Year\") +\n  ylab(\"Weights\") +\n  theme(axis.title.y=element_text(angle = 0)) +\n  ggtitle ('Weights of hscode = 304620 by Year')\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nThe hscode with top weights is 304620 which is categorised under:\n\nFish and crustaceans, molluscs and other aquatic invertebrates // Fish fillets and other fish meat (whether or not minced), fresh, chilled or frozen. // - Frozen fillets of tilapias (Oreochromis spp.), catfish (Pangasius spp., Silurus spp., Clarias spp., Ictalurus spp.), carp (Cyprinus carpio, Carassius carassius, Ctenopharyngodon idellus, Hypophthalmichthys spp., Cirrhinus spp., Mylopharyngodon piceus), eels (Anguilla spp.), Nile perch (Lates niloticus) and snakeheads (Channa spp.) : // – Catfish (Pangasius spp., Silurus spp., Clarias spp., Ictalurus spp.)\n\nIt is observed that the median is similar across the years but there are many outliers every year.\n\n\n\n\n3.2.3 Visualization of Centrality Measures by Year\n\nData Preparation\n\nDerive new variable, weights, that sums the number of source to target and form new edges data tables by year.\n\n\n\nShow the code\nMC2_edges_aggregated2028 <- MC2_edges %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n()) %>%\n  filter(source!=target, Year == \"2028\") %>%\n  ungroup() \n\nMC2_edges_aggregated2029 <- MC2_edges %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n()) %>%\n  filter(source!=target, Year == \"2029\") %>%\n  ungroup() \n\nMC2_edges_aggregated2030 <- MC2_edges %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n()) %>%\n  filter(source!=target, Year == \"2030\") %>%\n  ungroup() \n\nMC2_edges_aggregated2031 <- MC2_edges %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n()) %>%\n  filter(source!=target, Year == \"2031\") %>%\n  ungroup() \n\nMC2_edges_aggregated2032 <- MC2_edges %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n()) %>%\n  filter(source!=target, Year == \"2032\") %>%\n  ungroup() \n\nMC2_edges_aggregated2033 <- MC2_edges %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n()) %>%\n  filter(source!=target, Year == \"2033\") %>%\n  ungroup() \n\nMC2_edges_aggregated2034 <- MC2_edges %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n()) %>%\n  filter(source!=target, Year == \"2034\") %>%\n  ungroup() \n\n\n\nForm new nodes data table for MC2 by year, by using source and target of MC2_edges_aggregated data table. This is to ensure that the nodes in nodes data tables include all the source and target values.\n\n\n\nShow the code\nid1 <- MC2_edges_aggregated2028 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated2028 %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted2028 <- rbind(id1, id2) %>%\n  distinct()\n\nid1 <- MC2_edges_aggregated2029 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated2029 %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted2029 <- rbind(id1, id2) %>%\n  distinct()\n\nid1 <- MC2_edges_aggregated2030 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated2030 %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted2030 <- rbind(id1, id2) %>%\n  distinct()\n\nid1 <- MC2_edges_aggregated2031 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated2031 %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted2031 <- rbind(id1, id2) %>%\n  distinct()\n\nid1 <- MC2_edges_aggregated2032 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated2032 %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted2032 <- rbind(id1, id2) %>%\n  distinct()\n\nid1 <- MC2_edges_aggregated2033 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated2033 %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted2033 <- rbind(id1, id2) %>%\n  distinct()\n\nid1 <- MC2_edges_aggregated2034 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated2034 %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted2034 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\nBuild the tidygraph data model\n\n\n\nShow the code\nMC2_graph2028 <- tbl_graph(nodes = MC2_nodes_extracted2028,\n                       edges = MC2_edges_aggregated2028,\n                       directed = TRUE) \n\nMC2_graph2029 <- tbl_graph(nodes = MC2_nodes_extracted2029,\n                       edges = MC2_edges_aggregated2029,\n                       directed = TRUE) \n\nMC2_graph2030 <- tbl_graph(nodes = MC2_nodes_extracted2030,\n                       edges = MC2_edges_aggregated2030,\n                       directed = TRUE) \n\nMC2_graph2031 <- tbl_graph(nodes = MC2_nodes_extracted2031,\n                       edges = MC2_edges_aggregated2031,\n                       directed = TRUE) \n\nMC2_graph2032 <- tbl_graph(nodes = MC2_nodes_extracted2032,\n                       edges = MC2_edges_aggregated2032,\n                       directed = TRUE) \n\nMC2_graph2033 <- tbl_graph(nodes = MC2_nodes_extracted2033,\n                       edges = MC2_edges_aggregated2033,\n                       directed = TRUE) \n\nMC2_graph2034 <- tbl_graph(nodes = MC2_nodes_extracted2034,\n                       edges = MC2_edges_aggregated2034,\n                       directed = TRUE) \n\n\n\nCompute various centrality measures from the tidygraph data models:\n\nIn Degree\nOut Degree\nEigenvalue\nBetweenness\nIn Closeness\nOut Closeness\n\nCompute centrality edge betweenness from the edges table.\n\n\n\nShow the code\nMC2_graph2028 <- MC2_graph2028 %>% \n  activate(\"nodes\") %>%\n  mutate(in_degree = centrality_degree(mode = \"in\")) %>%\n  mutate(out_degree = centrality_degree(mode = \"out\")) %>%\n  mutate(eigen = centrality_eigen()) %>%\n  mutate(betweenness = centrality_betweenness()) %>%\n  mutate(in_closeness = centrality_closeness(mode = \"in\")) %>%\n  mutate(out_closeness = centrality_closeness(mode = \"out\")) %>%\n  mutate(groupcomm = group_walktrap(steps = 4)) %>%\n  mutate(indeg_bin = cut(in_degree, breaks = c(0, 500, 1000, 1500, Inf),\n                       labels = c(\"1\\n(0-499)\", \n                                  \"2\\n(500-999)\", \n                                  \"3\\n(1000-1499)\",\n                                  \"4\\n(>=1500)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  mutate(outdeg_bin = cut(out_degree, breaks = c(0, 50, 100, 150, Inf),\n                       labels = c(\"1\\n(0-49)\", \n                                  \"2\\n(50-99)\", \n                                  \"3\\n(100-149)\",\n                                  \"4\\n(>=150)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  rename(group = outdeg_bin)\n\nMC2_graph2028 <- MC2_graph2028 %>%\n  activate(\"edges\") %>%\n  mutate(importance = centrality_edge_betweenness()) \n\nMC2_graph2029 <- MC2_graph2029 %>% \n  activate(\"nodes\") %>%\n  mutate(in_degree = centrality_degree(mode = \"in\")) %>%\n  mutate(out_degree = centrality_degree(mode = \"out\")) %>%\n  mutate(eigen = centrality_eigen()) %>%\n  mutate(betweenness = centrality_betweenness()) %>%\n  mutate(in_closeness = centrality_closeness(mode = \"in\")) %>%\n  mutate(out_closeness = centrality_closeness(mode = \"out\")) %>%\n  mutate(groupcomm = group_walktrap(steps = 4)) %>%\n  mutate(indeg_bin = cut(in_degree, breaks = c(0, 500, 1000, 1500, Inf),\n                       labels = c(\"1\\n(0-499)\", \n                                  \"2\\n(500-999)\", \n                                  \"3\\n(1000-1499)\",\n                                  \"4\\n(>=1500)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  mutate(outdeg_bin = cut(out_degree, breaks = c(0, 50, 100, 150, Inf),\n                       labels = c(\"1\\n(0-49)\", \n                                  \"2\\n(50-99)\", \n                                  \"3\\n(100-149)\",\n                                  \"4\\n(>=150)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  rename(group = outdeg_bin)\n\nMC2_graph2029 <- MC2_graph2029 %>%\n  activate(\"edges\") %>%\n  mutate(importance = centrality_edge_betweenness()) \n\nMC2_graph2030 <- MC2_graph2030 %>% \n  activate(\"nodes\") %>%\n  mutate(in_degree = centrality_degree(mode = \"in\")) %>%\n  mutate(out_degree = centrality_degree(mode = \"out\")) %>%\n  mutate(eigen = centrality_eigen()) %>%\n  mutate(betweenness = centrality_betweenness()) %>%\n  mutate(in_closeness = centrality_closeness(mode = \"in\")) %>%\n  mutate(out_closeness = centrality_closeness(mode = \"out\")) %>%\n  mutate(groupcomm = group_walktrap(steps = 4)) %>%\n  mutate(indeg_bin = cut(in_degree, breaks = c(0, 500, 1000, 1500, Inf),\n                       labels = c(\"1\\n(0-499)\", \n                                  \"2\\n(500-999)\", \n                                  \"3\\n(1000-1499)\",\n                                  \"4\\n(>=1500)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  mutate(outdeg_bin = cut(out_degree, breaks = c(0, 50, 100, 150, Inf),\n                       labels = c(\"1\\n(0-49)\", \n                                  \"2\\n(50-99)\", \n                                  \"3\\n(100-149)\",\n                                  \"4\\n(>=150)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  rename(group = outdeg_bin)\n\nMC2_graph2030 <- MC2_graph2030 %>%\n  activate(\"edges\") %>%\n  mutate(importance = centrality_edge_betweenness()) \n\nMC2_graph2031 <- MC2_graph2031 %>% \n  activate(\"nodes\") %>%\n  mutate(in_degree = centrality_degree(mode = \"in\")) %>%\n  mutate(out_degree = centrality_degree(mode = \"out\")) %>%\n  mutate(eigen = centrality_eigen()) %>%\n  mutate(betweenness = centrality_betweenness()) %>%\n  mutate(in_closeness = centrality_closeness(mode = \"in\")) %>%\n  mutate(out_closeness = centrality_closeness(mode = \"out\")) %>%\n  mutate(groupcomm = group_walktrap(steps = 4)) %>%\n  mutate(indeg_bin = cut(in_degree, breaks = c(0, 500, 1000, 1500, Inf),\n                       labels = c(\"1\\n(0-499)\", \n                                  \"2\\n(500-999)\", \n                                  \"3\\n(1000-1499)\",\n                                  \"4\\n(>=1500)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  mutate(outdeg_bin = cut(out_degree, breaks = c(0, 50, 100, 150, Inf),\n                       labels = c(\"1\\n(0-49)\", \n                                  \"2\\n(50-99)\", \n                                  \"3\\n(100-149)\",\n                                  \"4\\n(>=150)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  rename(group = outdeg_bin)\n\nMC2_graph2031 <- MC2_graph2031 %>%\n  activate(\"edges\") %>%\n  mutate(importance = centrality_edge_betweenness()) \n\nMC2_graph2032 <- MC2_graph2032 %>% \n  activate(\"nodes\") %>%\n  mutate(in_degree = centrality_degree(mode = \"in\")) %>%\n  mutate(out_degree = centrality_degree(mode = \"out\")) %>%\n  mutate(eigen = centrality_eigen()) %>%\n  mutate(betweenness = centrality_betweenness()) %>%\n  mutate(in_closeness = centrality_closeness(mode = \"in\")) %>%\n  mutate(out_closeness = centrality_closeness(mode = \"out\")) %>%\n  mutate(groupcomm = group_walktrap(steps = 4)) %>%\n  mutate(indeg_bin = cut(in_degree, breaks = c(0, 500, 1000, 1500, Inf),\n                       labels = c(\"1\\n(0-499)\", \n                                  \"2\\n(500-999)\", \n                                  \"3\\n(1000-1499)\",\n                                  \"4\\n(>=1500)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  mutate(outdeg_bin = cut(out_degree, breaks = c(0, 50, 100, 150, Inf),\n                       labels = c(\"1\\n(0-49)\", \n                                  \"2\\n(50-99)\", \n                                  \"3\\n(100-149)\",\n                                  \"4\\n(>=150)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  rename(group = outdeg_bin)\n\nMC2_graph2032 <- MC2_graph2032 %>%\n  activate(\"edges\") %>%\n  mutate(importance = centrality_edge_betweenness()) \n\nMC2_graph2033 <- MC2_graph2033 %>% \n  activate(\"nodes\") %>%\n  mutate(in_degree = centrality_degree(mode = \"in\")) %>%\n  mutate(out_degree = centrality_degree(mode = \"out\")) %>%\n  mutate(eigen = centrality_eigen()) %>%\n  mutate(betweenness = centrality_betweenness()) %>%\n  mutate(in_closeness = centrality_closeness(mode = \"in\")) %>%\n  mutate(out_closeness = centrality_closeness(mode = \"out\")) %>%\n  mutate(groupcomm = group_walktrap(steps = 4)) %>%\n  mutate(indeg_bin = cut(in_degree, breaks = c(0, 500, 1000, 1500, Inf),\n                       labels = c(\"1\\n(0-499)\", \n                                  \"2\\n(500-999)\", \n                                  \"3\\n(1000-1499)\",\n                                  \"4\\n(>=1500)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  mutate(outdeg_bin = cut(out_degree, breaks = c(0, 50, 100, 150, Inf),\n                       labels = c(\"1\\n(0-49)\", \n                                  \"2\\n(50-99)\", \n                                  \"3\\n(100-149)\",\n                                  \"4\\n(>=150)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  rename(group = outdeg_bin)\n\nMC2_graph2033 <- MC2_graph2033 %>%\n  activate(\"edges\") %>%\n  mutate(importance = centrality_edge_betweenness()) \n\nMC2_graph2034 <- MC2_graph2034 %>% \n  activate(\"nodes\") %>%\n  mutate(in_degree = centrality_degree(mode = \"in\")) %>%\n  mutate(out_degree = centrality_degree(mode = \"out\")) %>%\n  mutate(eigen = centrality_eigen()) %>%\n  mutate(betweenness = centrality_betweenness()) %>%\n  mutate(in_closeness = centrality_closeness(mode = \"in\")) %>%\n  mutate(out_closeness = centrality_closeness(mode = \"out\")) %>%\n  mutate(groupcomm = group_walktrap(steps = 4)) %>%\n  mutate(indeg_bin = cut(in_degree, breaks = c(0, 500, 1000, 1500, Inf),\n                       labels = c(\"1\\n(0-499)\", \n                                  \"2\\n(500-999)\", \n                                  \"3\\n(1000-1499)\",\n                                  \"4\\n(>=1500)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  mutate(outdeg_bin = cut(out_degree, breaks = c(0, 50, 100, 150, Inf),\n                       labels = c(\"1\\n(0-49)\", \n                                  \"2\\n(50-99)\", \n                                  \"3\\n(100-149)\",\n                                  \"4\\n(>=150)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  rename(group = outdeg_bin)\n\nMC2_graph2034 <- MC2_graph2034 %>%\n  activate(\"edges\") %>%\n  mutate(importance = centrality_edge_betweenness()) \n\n\n\n\n3.2.2.1 Centrality Degree (In)\n\nWe want to find out which companies have the highest number of incoming links.\nDue to the large data size, we filter data with in_degree > 30 and community group < 5. Group_component is used to group the nodes.\n\n\n2028202920302031203220332034\n\n\n\n\nShow the code\nMC2_graph_indegree2028 <- MC2_graph2028 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(in_degree)) %>%\n  filter(in_degree > 30) %>%\n  mutate(group1 = group_components()) %>%\n  filter(group1 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_indegree2028, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = in_degree, colour = group1)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"In-degree Network in 2028\")\n\n\n\n\n\nShow the code\nMC2_graph_indegree2028 %>%\n  as_tibble()\n\n\n# A tibble: 45 × 11\n   id         in_degree out_degree  eigen betweenness in_closeness out_closeness\n   <chr>          <dbl>      <dbl>  <dbl>       <dbl>        <dbl>         <dbl>\n 1 hǎi dǎn C…      1778          0 1               0      0.000377      NaN     \n 2 Mar del E…      1229          0 0.598           0      0.000597      NaN     \n 3 Caracola …       790          0 0.315           0      0.000527      NaN     \n 4 Costa de …       432          0 0.199           0      0.000366      NaN     \n 5 Pao gan S…       423          6 0.173        2545.     0.000510        0.333 \n 6 Sailors a…       348          0 0.134           0      0.00115       NaN     \n 7 Selous Ga…       310         14 0.172        3358.     0.00136         0.0714\n 8 Coral Cov…       262          1 0.0921        373      0.00141         1     \n 9 Océano de…       256          0 0.0809          0      0.000649      NaN     \n10 Kong zhon…       217          0 0.0858          0      0.00172       NaN     \n# ℹ 35 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group1 <int>\n\n\n\n\n\n\nShow the code\nMC2_graph_indegree2029 <- MC2_graph2029 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(in_degree)) %>%\n  filter(in_degree > 30) %>%\n  mutate(group1 = group_components()) %>%\n  filter(group1 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_indegree2029, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = in_degree, colour = group1)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"In-degree Network in 2029\")\n\n\n\n\n\nShow the code\nMC2_graph_indegree2029 %>%\n  as_tibble()\n\n\n# A tibble: 54 × 11\n   id         in_degree out_degree  eigen betweenness in_closeness out_closeness\n   <chr>          <dbl>      <dbl>  <dbl>       <dbl>        <dbl>         <dbl>\n 1 hǎi dǎn C…      1744          0 1               0      0.000412      NaN     \n 2 Mar del E…      1188          0 0.599           0      0.000596      NaN     \n 3 Caracola …       815          0 0.387           0      0.000374      NaN     \n 4 Costa de …       524          1 0.257        1313      0.000318        1     \n 5 Pao gan S…       433         10 0.187        9580.     0.000541        0.0323\n 6 Sailors a…       387          0 0.140           0      0.000920      NaN     \n 7 Selous Ga…       337         13 0.170        7590.     0.000903        0.02  \n 8 Coral Cov…       241          3 0.0960        820      0.00117         0.5   \n 9 Océano de…       232          0 0.0752          0      0.000728      NaN     \n10 Yu xian  …       218          7 0.116        2588      0.00137         0.111 \n# ℹ 44 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group1 <int>\n\n\n\n\n\n\nShow the code\nMC2_graph_indegree2030 <- MC2_graph2030 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(in_degree)) %>%\n  filter(in_degree > 30) %>%\n  mutate(group1 = group_components()) %>%\n  filter(group1 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_indegree2030, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = in_degree, colour = group1)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"In-degree Network in 2030\")\n\n\n\n\n\nShow the code\nMC2_graph_indegree2030 %>%\n  as_tibble()\n\n\n# A tibble: 52 × 11\n   id         in_degree out_degree  eigen betweenness in_closeness out_closeness\n   <chr>          <dbl>      <dbl>  <dbl>       <dbl>        <dbl>         <dbl>\n 1 hǎi dǎn C…      1647          0 1               0      0.000384      NaN     \n 2 Mar del E…      1218          2 0.626        2381.     0.000455        0.5   \n 3 Caracola …       830          0 0.377           0      0.000433      NaN     \n 4 Costa de …       538          0 0.283           0      0.000907      NaN     \n 5 Pao gan S…       460          9 0.214        5852.     0.000368        0.2   \n 6 Sailors a…       345          0 0.138           0      0.000868      NaN     \n 7 Selous Ga…       337         15 0.180        4800.     0.000752        0.0556\n 8 Kong zhon…       271          0 0.125           0      0.000261      NaN     \n 9 Coral Cov…       251          4 0.106        2117.     0.00155         0.0769\n10 Océano de…       209          0 0.0707          0      0.00123       NaN     \n# ℹ 42 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group1 <int>\n\n\n\n\n\n\nShow the code\nMC2_graph_indegree2031 <- MC2_graph2031 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(in_degree)) %>%\n  filter(in_degree > 30) %>%\n  mutate(group1 = group_components()) %>%\n  filter(group1 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_indegree2031, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = in_degree, colour = group1)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"In-degree Network in 2031\")\n\n\n\n\n\nShow the code\nMC2_graph_indegree2031 %>%\n  as_tibble()\n\n\n# A tibble: 50 × 11\n   id         in_degree out_degree  eigen betweenness in_closeness out_closeness\n   <chr>          <dbl>      <dbl>  <dbl>       <dbl>        <dbl>         <dbl>\n 1 \"hǎi dǎn …      1607          0 1              0       0.000271     NaN      \n 2 \"Mar del …      1065          1 0.523       1558.      0.000186       1      \n 3 \"Caracola…       940          0 0.473          0       0.000257     NaN      \n 4 \"Costa de…       612          1 0.322       2606.      0.000197       0.333  \n 5 \"Pao gan …       444          4 0.200      58743.      0.000426       0.00317\n 6 \"Sailors …       374          0 0.184          0       0.000197     NaN      \n 7 \"Selous G…       299         13 0.170      22178.      0.000316       0.00272\n 8 \"Kong zho…       207          1 0.0996        91.8     0.000177       1      \n 9 \"Yu xian …       199          6 0.117       1314       0.00246        0.111  \n10 \"Pao gan …       196          0 0.0851         0       0.000157     NaN      \n# ℹ 40 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group1 <int>\n\n\n\n\n\n\nShow the code\nMC2_graph_indegree2032 <- MC2_graph2032 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(in_degree)) %>%\n  filter(in_degree > 30) %>%\n  mutate(group1 = group_components()) %>%\n  filter(group1 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_indegree2032, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = in_degree, colour = group1)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"In-degree Network in 2032\")\n\n\n\n\n\nShow the code\nMC2_graph_indegree2032 %>%\n  as_tibble()\n\n\n# A tibble: 43 × 11\n   id         in_degree out_degree  eigen betweenness in_closeness out_closeness\n   <chr>          <dbl>      <dbl>  <dbl>       <dbl>        <dbl>         <dbl>\n 1 hǎi dǎn C…      1561          0 1               0      0.000430       NaN    \n 2 Mar del E…      1144          0 0.612           0      0.000595       NaN    \n 3 Caracola …       888          0 0.435           0      0.000412       NaN    \n 4 Costa de …       625          0 0.338           0      0.000451       NaN    \n 5 Pao gan S…       514          0 0.225           0      0.000405       NaN    \n 6 Sailors a…       411          0 0.200           0      0.000789       NaN    \n 7 Selous Ga…       286         10 0.157        3845.     0.000958         0.1  \n 8 Coral Cov…       183          2 0.0650        689.     0.00122          0.5  \n 9 Brisa del…       171          0 0.0836          0      0.000504       NaN    \n10 Yu xian  …       166          6 0.0988       1858.     0.000826         0.143\n# ℹ 33 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group1 <int>\n\n\n\n\n\n\nShow the code\nMC2_graph_indegree2033 <- MC2_graph2033 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(in_degree)) %>%\n  filter(in_degree > 30) %>%\n  mutate(group1 = group_components()) %>%\n  filter(group1 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_indegree2033, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = in_degree, colour = group1)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"In-degree Network in 2033\")\n\n\n\n\n\nShow the code\nMC2_graph_indegree2033 %>%\n  as_tibble()\n\n\n# A tibble: 57 × 11\n   id         in_degree out_degree  eigen betweenness in_closeness out_closeness\n   <chr>          <dbl>      <dbl>  <dbl>       <dbl>        <dbl>         <dbl>\n 1 \"hǎi dǎn …      1640          0 1               0      0.000402      NaN     \n 2 \"Mar del …      1200          2 0.597        2784.     0.000392        0.5   \n 3 \"Caracola…       879          0 0.421           0      0.000369      NaN     \n 4 \"Costa de…       632          0 0.290           0      0.000386      NaN     \n 5 \"Pao gan …       482          0 0.217           0      0.000346      NaN     \n 6 \"Sailors …       440          0 0.270           0      0.000409      NaN     \n 7 \"Selous G…       311         15 0.190        5693.     0.000470        0.0714\n 8 \"Kong zho…       263          1 0.115        1029.     0.000357        0.143 \n 9 \"3 Oceano…       241          1 0.109         154.     0.000356        1     \n10 \"Pao gan …       219          0 0.0977          0      0.000318      NaN     \n# ℹ 47 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group1 <int>\n\n\n\n\n\n\nShow the code\nMC2_graph_indegree2034 <- MC2_graph2034 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(in_degree)) %>%\n  filter(in_degree > 30) %>%\n  mutate(group1 = group_components()) %>%\n  filter(group1 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_indegree2034, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = in_degree, colour = group1)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"In-degree Network in 2034\")\n\n\n\n\n\nShow the code\nMC2_graph_indegree2034 %>%\n  as_tibble()\n\n\n# A tibble: 57 × 11\n   id         in_degree out_degree  eigen betweenness in_closeness out_closeness\n   <chr>          <dbl>      <dbl>  <dbl>       <dbl>        <dbl>         <dbl>\n 1 \"hǎi dǎn …      1605         11 1           10882.     0.000385        0.0909\n 2 \"Mar del …      1173         10 0.406        6853.     0.000479        0.1   \n 3 \"Caracola…       779          6 0.269        3985.     0.000381        0.167 \n 4 \"Costa de…       588          6 0.215        2071.     0.000575        0.167 \n 5 \"Pao gan …       501          5 0.148        1793.     0.000491        0.2   \n 6 \"Sailors …       388          6 0.331        1213.     0.000921        0.167 \n 7 \"Kong zho…       267          4 0.0788       1666.     0.00134         0.167 \n 8 \"3 Oceano…       257          1 0.0693        474.     0.00124         0.0909\n 9 \"Selous G…       252         17 0.120        7060.     0.00113         0.0213\n10 \"Pao gan …       227          1 0.0779       2104.     0.00112         0.0345\n# ℹ 47 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group1 <int>\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nThe following configurations should be noted before we interpret the graphs: - Node size is set to in-degree - Node colour is set to community group - Edge width is set to weights - Edge colour is set to centrality_edge_betweenness\nIt is observed that the top 5 companies with highest in-degree in 2028 are:\n\nhǎi dǎn Corporation Wharf\nMar del Este CJSC\nCaracola del Sol Services\nCosta de la Felicidad Shipping\nPao gan SE Seal\n\nThe top 5 comapnies are consistent across the other years and the respective companies’ in-degree values are also quite consistent across the years. No abnormality is observed.\nThese companies are likely wholesalers/importers who buy/imports fishes from other fishing companies/fishermen.\nIt is also observed that there is high centrality edge betweenness between Selous Game Reserve A/S and Pao gan SE Seal in 2028.\nIn 2032 and 2033, there is high centrality_edge_betweenness between AtlanticAppetite Oyster Ltd. Corporation Investment and Dutch Ltd. Liability Co Consultants.\n\n\n\n\n3.2.2.2 Centrality Degree (Out)\n\nWe want to find out which companies have the highest number of out-going links.\nDue to the large data size, we filter data with out_degree > 10 and community group < 5. Group_component is used to group the nodes.\nData preparation:\n\n\n\nShow the code\nMC2_graph_outdegree2028 <- MC2_graph2028 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(out_degree)) %>%\n  filter(out_degree > 10) %>%\n  mutate(group2 = group_components()) %>%\n  filter(group2 < 5) \n\nwrite_rds(MC2_graph_outdegree2028, \"data/MC2_graph_outdegree2028.rds\")\n\nMC2_graph_outdegree2029 <- MC2_graph2029 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(out_degree)) %>%\n  filter(out_degree > 10) %>%\n  mutate(group2 = group_components()) %>%\n  filter(group2 < 5) \n\nwrite_rds(MC2_graph_outdegree2029, \"data/MC2_graph_outdegree2029.rds\")\n\nMC2_graph_outdegree2030 <- MC2_graph2030 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(out_degree)) %>%\n  filter(out_degree > 10) %>%\n  mutate(group2 = group_components()) %>%\n  filter(group2 < 5) \n\nwrite_rds(MC2_graph_outdegree2030, \"data/MC2_graph_outdegree2030.rds\")\n\nMC2_graph_outdegree2031 <- MC2_graph2031 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(out_degree)) %>%\n  filter(out_degree > 10) %>%\n  mutate(group2 = group_components()) %>%\n  filter(group2 < 5) \n\nwrite_rds(MC2_graph_outdegree2031, \"data/MC2_graph_outdegree2031.rds\")\n\nMC2_graph_outdegree2032 <- MC2_graph2032 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(out_degree)) %>%\n  filter(out_degree > 10) %>%\n  mutate(group2 = group_components()) %>%\n  filter(group2 < 5) \n\nwrite_rds(MC2_graph_outdegree2032, \"data/MC2_graph_outdegree2032.rds\")\n\nMC2_graph_outdegree2033 <- MC2_graph2033 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(out_degree)) %>%\n  filter(out_degree > 10) %>%\n  mutate(group2 = group_components()) %>%\n  filter(group2 < 5) \n\nwrite_rds(MC2_graph_outdegree2033, \"data/MC2_graph_outdegree2033.rds\")\n\nMC2_graph_outdegree2034 <- MC2_graph2034 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(out_degree)) %>%\n  filter(out_degree > 12) %>%\n  mutate(group2 = group_components()) %>%\n  filter(group2 < 5) \n\nwrite_rds(MC2_graph_outdegree2034, \"data/MC2_graph_outdegree2034.rds\")\n\n\n\nPrepare edges tibble data frame\n\n\n\nShow the code\nedges_outdegree2028_df <- MC2_graph_outdegree2028 %>%\n  activate(edges) %>%\n  as_tibble()\n\nedges_outdegree2029_df <- MC2_graph_outdegree2029 %>%\n  activate(edges) %>%\n  as_tibble()\n\nedges_outdegree2030_df <- MC2_graph_outdegree2030 %>%\n  activate(edges) %>%\n  as_tibble()\n\nedges_outdegree2031_df <- MC2_graph_outdegree2031 %>%\n  activate(edges) %>%\n  as_tibble()\n\nedges_outdegree2032_df <- MC2_graph_outdegree2032 %>%\n  activate(edges) %>%\n  as_tibble()\n\nedges_outdegree2033_df <- MC2_graph_outdegree2033 %>%\n  activate(edges) %>%\n  as_tibble()\n\nedges_outdegree2034_df <- MC2_graph_outdegree2034 %>%\n  activate(edges) %>%\n  as_tibble()\n\n\n\nPrepare nodes tibble data frame\n\n\n\nShow the code\nnodes_outdegree2028_df <- MC2_graph_outdegree2028 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label, group)\n\nnodes_outdegree2029_df <- MC2_graph_outdegree2029 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label, group)\n\nnodes_outdegree2030_df <- MC2_graph_outdegree2030 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label, group)\n\nnodes_outdegree2031_df <- MC2_graph_outdegree2031 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label, group)\n\nnodes_outdegree2032_df <- MC2_graph_outdegree2032 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label, group)\n\nnodes_outdegree2033_df <- MC2_graph_outdegree2033 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label, group)\n\nnodes_outdegree2034_df <- MC2_graph_outdegree2034 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label, group)\n\n\n\n2028202920302031203220332034\n\n\n\n\nShow the code\nvisNetwork(nodes_outdegree2028_df,\n           edges_outdegree2028_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 3)), \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)  \n\n\n\n\n\n\nShow the code\nMC2_graph_outdegree2028 %>%\n  as_tibble()\n\n\n# A tibble: 210 × 11\n   id        in_degree out_degree   eigen betweenness in_closeness out_closeness\n   <chr>         <dbl>      <dbl>   <dbl>       <dbl>        <dbl>         <dbl>\n 1 Chhattis…         4        125 0.00621        566        0.5          0.00151\n 2 Caracola…         0         96 0.146            0      NaN            0.00243\n 3 The Salt…         5         87 0.151          260        0.333        0.00806\n 4 Fresh Li…         1         83 0.111          108        1            0.00625\n 5 bǐ mù yú…         3         79 0.0906         250.       0.333        0.00324\n 6 Estrella…         2         75 0.00315        117        0.5          0.00820\n 7 Zambezi …         0         72 0.0930           0      NaN            0.0123 \n 8 Coral Co…         0         68 0.107            0      NaN            0.00439\n 9 Aqua Aur…         7         65 0.181         1385.       0.0323       0.00485\n10 Mar del …         0         65 0.191            0      NaN            0.0125 \n# ℹ 200 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group2 <int>\n\n\n\n\n\n\nShow the code\nvisNetwork(nodes_outdegree2029_df,\n           edges_outdegree2029_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 3)), \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)  \n\n\n\n\n\n\nShow the code\nMC2_graph_outdegree2029 %>%\n  as_tibble()\n\n\n# A tibble: 239 × 11\n   id        in_degree out_degree   eigen betweenness in_closeness out_closeness\n   <chr>         <dbl>      <dbl>   <dbl>       <dbl>        <dbl>         <dbl>\n 1 Chhattis…         9        127 0.00713      1138        0.125         0.00199\n 2 Estrella…         2         98 0.0645        815.       0.0278        0.0120 \n 3 Zambezi …         0         97 0.170           0      NaN             0.00690\n 4 The Salt…         4         93 0.131        1618.       0.0185        0.00366\n 5 Yu er he…         0         86 0.188           0      NaN             0.00196\n 6 Fresh Li…         0         84 0.0902          0      NaN             0.00113\n 7 Caracola…         0         83 0.170           0      NaN             0.00794\n 8 Mar del …         1         76 0.236          84.9      1             0.00402\n 9 Diao yu …         1         69 0.0939        151.       0.333         0.00253\n10 Aqua Aur…         9         68 0.166        3225.       0.00826       0.00625\n# ℹ 229 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group2 <int>\n\n\n\n\n\n\nShow the code\nvisNetwork(nodes_outdegree2030_df,\n           edges_outdegree2030_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 3)), \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)  \n\n\n\n\n\n\nShow the code\nMC2_graph_outdegree2030 %>%\n  as_tibble()\n\n\n# A tibble: 233 × 11\n   id         in_degree out_degree  eigen betweenness in_closeness out_closeness\n   <chr>          <dbl>      <dbl>  <dbl>       <dbl>        <dbl>         <dbl>\n 1 Chhattisg…        12        154 0.0167       7236.      0.0204       0.000829\n 2 Estrella …         2        129 0.109        1581.      0.02         0.00149 \n 3 Yu er he …         0         96 0.192           0     NaN            0.00877 \n 4 Caracola …         0         91 0.171           0     NaN            0.00508 \n 5 Zambezi G…         0         88 0.0874          0     NaN            0.00185 \n 6 Aqua Aura…         7         85 0.268        7377.      0.00437      0.00361 \n 7 Fresh Lim…         0         76 0.143           0     NaN            0.00124 \n 8 Mar del N…         0         75 0.220           0     NaN            0.00291 \n 9 Lake Tana…         4         61 0.0786        452.      0.0833       0.00769 \n10 Saltwater…         0         61 0.142           0     NaN            0.00217 \n# ℹ 223 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group2 <int>\n\n\n\n\n\n\nShow the code\nvisNetwork(nodes_outdegree2031_df,\n           edges_outdegree2031_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 3)), \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)  \n\n\n\n\n\n\nShow the code\nMC2_graph_outdegree2031 %>%\n  as_tibble()\n\n\n# A tibble: 190 × 11\n   id         in_degree out_degree  eigen betweenness in_closeness out_closeness\n   <chr>          <dbl>      <dbl>  <dbl>       <dbl>        <dbl>         <dbl>\n 1 \"Chhattis…         8        181 0.0105       4532.      0.02          0.00146\n 2 \"Estrella…         1        115 0.0455       1802.      0.0156        0.00201\n 3 \"Rajastha…         5         89 0.199         563.      0.143         0.00236\n 4 \"Aqua Aur…         7         84 0.179        2006.      0.00813       0.00267\n 5 \"Arena de…         0         81 0.249           0     NaN             0.00225\n 6 \"Fresh Li…         1         78 0.0907        191       1             0.00208\n 7 \"Line S.A…         0         78 0.266           0     NaN             0.00195\n 8 \"Zambezi …         0         74 0.0899          0     NaN             0.00199\n 9 \"xiǎo xiā…         2         66 0.101         419.      0.25          0.00307\n10 \"Sea Bree…         0         64 0.0944          0     NaN             0.00308\n# ℹ 180 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group2 <int>\n\n\n\n\n\n\nShow the code\nvisNetwork(nodes_outdegree2032_df,\n           edges_outdegree2032_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 3)), \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)  \n\n\n\n\n\n\nShow the code\nMC2_graph_outdegree2032 %>%\n  as_tibble()\n\n\n# A tibble: 178 × 11\n   id         in_degree out_degree  eigen betweenness in_closeness out_closeness\n   <chr>          <dbl>      <dbl>  <dbl>       <dbl>        <dbl>         <dbl>\n 1 Chhattisg…        11        195 0.0142       5365.       0.0182       0.00117\n 2 Estrella …         8        103 0.0289       2149.       0.0323       0.00272\n 3 Rajasthan…         4         96 0.173         255.       0.167        0.0137 \n 4 Zambezi G…         0         94 0.127           0      NaN            0.00267\n 5 Fresh Lim…         2         73 0.0882        592.       0.1          0.00467\n 6 Caracola …         1         72 0.171         795.       0.0233       0.00483\n 7 Aqua Aura…         8         68 0.142        1966.       0.0161       0.00529\n 8 Arena del…         2         67 0.196         263.       0.5          0.00256\n 9 Line S.A.…         1         66 0.248         253.       0.0104       0.0139 \n10 xiǎo xiā …         4         59 0.0716        646.       0.25         0.00264\n# ℹ 168 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group2 <int>\n\n\n\n\n\n\nShow the code\nvisNetwork(nodes_outdegree2033_df,\n           edges_outdegree2033_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 3)), \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)  \n\n\n\n\n\n\nShow the code\nMC2_graph_outdegree2033 %>%\n  as_tibble()\n\n\n# A tibble: 241 × 11\n   id        in_degree out_degree   eigen betweenness in_closeness out_closeness\n   <chr>         <dbl>      <dbl>   <dbl>       <dbl>        <dbl>         <dbl>\n 1 Line S.A…         2        160 0.455        35278.     0.000449      0.00524 \n 2 Chhattis…         3        141 0.00680       1416      0.1           0.00116 \n 3 Estrella…         4        135 0.0797        2425.     0.0147        0.000981\n 4 Zambezi …         0        112 0.108            0    NaN             0.00467 \n 5 The Salt…         0         99 0.181            0    NaN             0.000533\n 6 Caracola…         1         91 0.117         3225.     0.00990       0.00204 \n 7 Saltwate…         0         74 0.151            0    NaN             0.000641\n 8 Fresh Li…         2         72 0.113          165.     0.5           0.00606 \n 9 OceanSav…         0         71 0.0962           0    NaN             0.00135 \n10 Aqua Aur…         7         70 0.108         2691.     0.00870       0.00181 \n# ℹ 231 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group2 <int>\n\n\n\n\n\n\nShow the code\nvisNetwork(nodes_outdegree2034_df,\n           edges_outdegree2034_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 3)), \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)  \n\n\n\n\n\n\nShow the code\nMC2_graph_outdegree2034 %>%\n  as_tibble()\n\n\n# A tibble: 169 × 11\n   id         in_degree out_degree  eigen betweenness in_closeness out_closeness\n   <chr>          <dbl>      <dbl>  <dbl>       <dbl>        <dbl>         <dbl>\n 1 \"Line S.A…         3        184 0.657         342.       0.2          0.00613\n 2 \"Estrella…         2        122 0.0679       1743.       0.0278       0.00134\n 3 \"Aqua Aur…         3         95 0.223         241.       0.333        0.00588\n 4 \"Caracola…         1         93 0.0791       1044.       0.0164       0.00459\n 5 \"Zambezi …         0         92 0.0758          0      NaN            0.00239\n 6 \"Fresh Li…         2         88 0.0981        161        1            0.00287\n 7 \"Saltwate…         0         79 0.133           0      NaN            0.00372\n 8 \"Telangan…         0         77 0.186           0      NaN            0.00300\n 9 \"Lake Tan…         0         69 0.0688          0      NaN            0.00568\n10 \"Belgian …         0         62 0.0784          0      NaN            0.00461\n# ℹ 159 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group2 <int>\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nThe following configurations should be noted before we interpret the graphs: - Node colour denotes the level of out-degree e.g. nodes with >=150 number of outgoing links are coloured in blue.\nIt is observed that the top 5 companies with highest out-degree in 2028 are:\n\nChhattisgarh Marine ecology A/S Delivery\nCaracola del Este Corporation Express\nThe Salty Dog Limited Liability Company\nFresh Limited Liability Company\nbǐ mù yú Sagl Distribution\n\nChhattisgarh Marine ecology A/S Delivery remains the top company with highest out-degree in the subsequent years except for 2034 where it is overtaken by Line S.A. de C.V.\nThese companies are likely wholesalers/exporters who sell/export fishes to other fishing companies.\nIt is observed that in 2028, Caracola del Este Corporation Express, Zambezi Gorge N.V. Transport, Coral Cove LC Hull and Mar del Norte OJSC are within the top 10 list that only have out-going links and 0 incoming links.\nIn 2029, Zambezi Gorge N.V. Transport, Yu er he Bonito, Fresh Limited Liability Company and Caracola del Este Corporation Express are within the top 10 list that only have out-going links and 0 incoming links.\nIn 2030, Yu er he Bonito, Caracola del Este Corporation Express, Zambezi Gorge N.V. Transport, Fresh Limited Liability Company, Mar del Norte OJSC and Saltwater Sanctuary Marine ecology are within the top 10 list that only have out-going links and 0 incoming links.\nIn 2031, Arena del Sol SRL, Line S.A. de C.V., Zambezi Gorge N.V. Transport and Sea Breezes S.A. de C.V. Freight are within the top 10 list that only have out-going links and 0 incoming links.\nIn 2032, Zambezi Gorge N.V. Transport is the only company within the top 10 list that only have out-going links and 0 incoming links.\nIn 2033, Zambezi Gorge N.V. Transport, The Salty Dog Limited Liability Company, Saltwater Sirens S.p.A. International and OceanSavor Surf Limited Liability Company Logistics are within the top 10 list that only have out-going links and 0 incoming links.\nIn 2034, Zambezi Gorge N.V. Transport, Saltwater Sirens S.p.A. International, Telangana Wakame CJSC United, Lake Tana & Son’s and Belgian Scallop Harbor ОАО Freight are within the top 10 list that only have out-going links and 0 incoming links.\nThe above-mentioned companies with only have out-going links and 0 incoming links are suspicious and require further investigation as it is questionable why they are selling their fishes to so many different companies.\n\n\n\n\n3.2.2.3 Eigenvector Centrality\n\nEigenvector centrality measures the transitive influence of nodes. Relationships originating from high-scoring nodes contribute more to the score of a node than connections from low-scoring nodes. A high eigenvector centrality score means that a node is connected to many nodes who themselves have high scores.\nDue to the large data size, we filter data with eigenvector > 0.1 and community group < 5. Group_component is used to group the nodes.\n\n\n2028202920302031203220332034\n\n\n\n\nShow the code\nMC2_graph_eigen2028 <- MC2_graph2028 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(eigen)) %>%\n  filter(eigen > 0.1) %>%\n  mutate(group3 = group_components()) %>%\n  filter(group3 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_eigen2028, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = eigen, colour = group3)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Eigen Network in 2028\")\n\n\n\n\n\nShow the code\nMC2_graph_eigen2028 %>%\n  as_tibble()\n\n\n# A tibble: 27 × 11\n   id          in_degree out_degree eigen betweenness in_closeness out_closeness\n   <chr>           <dbl>      <dbl> <dbl>       <dbl>        <dbl>         <dbl>\n 1 hǎi dǎn Co…      1778          0 1              0      0.000377     NaN      \n 2 Mar del Es…      1229          0 0.598          0      0.000597     NaN      \n 3 Caracola d…       790          0 0.315          0      0.000527     NaN      \n 4 Costa de l…       432          0 0.199          0      0.000366     NaN      \n 5 Mar del No…         0         65 0.191          0    NaN              0.0125 \n 6 West Benga…         0         23 0.182          0    NaN              0.1    \n 7 Aqua Aura …         7         65 0.181       1385.     0.0323         0.00485\n 8 Caracola d…         0         50 0.180          0    NaN              0.0370 \n 9 Pao gan SE…       423          6 0.173       2545.     0.000510       0.333  \n10 Selous Gam…       310         14 0.172       3358.     0.00136        0.0714 \n# ℹ 17 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group3 <int>\n\n\n\n\n\n\nShow the code\nMC2_graph_eigen2029 <- MC2_graph2029 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(eigen)) %>%\n  filter(eigen > 0.1) %>%\n  mutate(group3 = group_components()) %>%\n  filter(group3 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_eigen2029, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = eigen, colour = group3)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Eigen Network in 2029\")\n\n\n\n\n\nShow the code\nMC2_graph_eigen2029 %>%\n  as_tibble()\n\n\n# A tibble: 29 × 11\n   id          in_degree out_degree eigen betweenness in_closeness out_closeness\n   <chr>           <dbl>      <dbl> <dbl>       <dbl>        <dbl>         <dbl>\n 1 hǎi dǎn Co…      1744          0 1             0       0.000412     NaN      \n 2 Mar del Es…      1188          0 0.599         0       0.000596     NaN      \n 3 Caracola d…       815          0 0.387         0       0.000374     NaN      \n 4 Costa de l…       524          1 0.257      1313       0.000318       1      \n 5 Mar del No…         1         76 0.236        84.9     1              0.00402\n 6 Yu er he  …         0         86 0.188         0     NaN              0.00196\n 7 Pao gan SE…       433         10 0.187      9580.      0.000541       0.0323 \n 8 Caracola d…         0         45 0.180         0     NaN              0.0179 \n 9 Selous Gam…       337         13 0.170      7590.      0.000903       0.02   \n10 Caracola d…         0         83 0.170         0     NaN              0.00794\n# ℹ 19 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group3 <int>\n\n\n\n\n\n\nShow the code\nMC2_graph_eigen2030 <- MC2_graph2030 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(eigen)) %>%\n  filter(eigen > 0.1) %>%\n  mutate(group3 = group_components()) %>%\n  filter(group3 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_eigen2030, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = eigen, colour = group3)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Eigen Network in 2030\")\n\n\n\n\n\nShow the code\nMC2_graph_eigen2030 %>%\n  as_tibble()\n\n\n# A tibble: 34 × 11\n   id          in_degree out_degree eigen betweenness in_closeness out_closeness\n   <chr>           <dbl>      <dbl> <dbl>       <dbl>        <dbl>         <dbl>\n 1 hǎi dǎn Co…      1647          0 1              0      0.000384     NaN      \n 2 Mar del Es…      1218          2 0.626       2381.     0.000455       0.5    \n 3 Caracola d…       830          0 0.377          0      0.000433     NaN      \n 4 Costa de l…       538          0 0.283          0      0.000907     NaN      \n 5 Aqua Aura …         7         85 0.268       7377.     0.00437        0.00361\n 6 Mar del No…         0         75 0.220          0    NaN              0.00291\n 7 Pao gan SE…       460          9 0.214       5852.     0.000368       0.2    \n 8 Yu er he  …         0         96 0.192          0    NaN              0.00877\n 9 Selous Gam…       337         15 0.180       4800.     0.000752       0.0556 \n10 Caracola d…         0         91 0.171          0    NaN              0.00508\n# ℹ 24 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group3 <int>\n\n\n\n\n\n\nShow the code\nMC2_graph_eigen2031 <- MC2_graph2031 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(eigen)) %>%\n  filter(eigen > 0.1) %>%\n  mutate(group3 = group_components()) %>%\n  filter(group3 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_eigen2031, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = eigen, colour = group3)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Eigen Network in 2031\")\n\n\n\n\n\nShow the code\nMC2_graph_eigen2031 %>%\n  as_tibble()\n\n\n# A tibble: 37 × 11\n   id          in_degree out_degree eigen betweenness in_closeness out_closeness\n   <chr>           <dbl>      <dbl> <dbl>       <dbl>        <dbl>         <dbl>\n 1 hǎi dǎn Co…      1607          0 1              0      0.000271     NaN      \n 2 Mar del Es…      1065          1 0.523       1558.     0.000186       1      \n 3 Caracola d…       940          0 0.473          0      0.000257     NaN      \n 4 Costa de l…       612          1 0.322       2606.     0.000197       0.333  \n 5 Line S.A. …         0         78 0.266          0    NaN              0.00195\n 6 Arena del …         0         81 0.249          0    NaN              0.00225\n 7 Pao gan SE…       444          4 0.200      58743.     0.000426       0.00317\n 8 Rajasthan …         5         89 0.199        563.     0.143          0.00236\n 9 Sailors an…       374          0 0.184          0      0.000197     NaN      \n10 Caracola d…         0         58 0.181          0    NaN              0.00385\n# ℹ 27 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group3 <int>\n\n\n\n\n\n\nShow the code\nMC2_graph_eigen2032 <- MC2_graph2032 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(eigen)) %>%\n  filter(eigen > 0.1) %>%\n  mutate(group3 = group_components()) %>%\n  filter(group3 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_eigen2032, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = eigen, colour = group3)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Eigen Network in 2032\")\n\n\n\n\n\nShow the code\nMC2_graph_eigen2032 %>%\n  as_tibble()\n\n\n# A tibble: 35 × 11\n   id          in_degree out_degree eigen betweenness in_closeness out_closeness\n   <chr>           <dbl>      <dbl> <dbl>       <dbl>        <dbl>         <dbl>\n 1 hǎi dǎn Co…      1561          0 1              0      0.000430     NaN      \n 2 Mar del Es…      1144          0 0.612          0      0.000595     NaN      \n 3 Caracola d…       888          0 0.435          0      0.000412     NaN      \n 4 Costa de l…       625          0 0.338          0      0.000451     NaN      \n 5 Line S.A. …         1         66 0.248        253.     0.0104         0.0139 \n 6 Caracola d…         0         54 0.229          0    NaN              0.0123 \n 7 Pao gan SE…       514          0 0.225          0      0.000405     NaN      \n 8 Yu er he  …         0         56 0.204          0    NaN              0.00417\n 9 Sailors an…       411          0 0.200          0      0.000789     NaN      \n10 Arena del …         2         67 0.196        263.     0.5            0.00256\n# ℹ 25 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group3 <int>\n\n\n\n\n\n\nShow the code\nMC2_graph_eigen2033 <- MC2_graph2033 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(eigen)) %>%\n  filter(eigen > 0.1) %>%\n  mutate(group3 = group_components()) %>%\n  filter(group3 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_eigen2033, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = eigen, colour = group3)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Eigen Network in 2033\")\n\n\n\n\n\nShow the code\nMC2_graph_eigen2033 %>%\n  as_tibble()\n\n\n# A tibble: 33 × 11\n   id          in_degree out_degree eigen betweenness in_closeness out_closeness\n   <chr>           <dbl>      <dbl> <dbl>       <dbl>        <dbl>         <dbl>\n 1 hǎi dǎn Co…      1640          0 1             0       0.000402    NaN       \n 2 Mar del Es…      1200          2 0.597      2784.      0.000392      0.5     \n 3 Line S.A. …         2        160 0.455     35278.      0.000449      0.00524 \n 4 Caracola d…       879          0 0.421         0       0.000369    NaN       \n 5 Costa de l…       632          0 0.290         0       0.000386    NaN       \n 6 Sailors an…       440          0 0.270         0       0.000409    NaN       \n 7 Pao gan SE…       482          0 0.217         0       0.000346    NaN       \n 8 Telangana …         1         50 0.192       234.      1             0.000717\n 9 Selous Gam…       311         15 0.190      5693.      0.000470      0.0714  \n10 Arena del …         1         48 0.185        54.3     1             0.00193 \n# ℹ 23 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group3 <int>\n\n\n\n\n\n\nShow the code\nMC2_graph_eigen2034 <- MC2_graph2034 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(eigen)) %>%\n  filter(eigen > 0.1) %>%\n  mutate(group3 = group_components()) %>%\n  filter(group3 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_eigen2034, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = eigen, colour = group3)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Eigen Network in 2034\")\n\n\n\n\n\nShow the code\nMC2_graph_eigen2034 %>%\n  as_tibble()\n\n\n# A tibble: 19 × 11\n   id          in_degree out_degree eigen betweenness in_closeness out_closeness\n   <chr>           <dbl>      <dbl> <dbl>       <dbl>        <dbl>         <dbl>\n 1 hǎi dǎn Co…      1605         11 1         10882.      0.000385       0.0909 \n 2 Line S.A. …         3        184 0.657       342.      0.2            0.00613\n 3 Mar del Es…      1173         10 0.406      6853.      0.000479       0.1    \n 4 Sailors an…       388          6 0.331      1213.      0.000921       0.167  \n 5 Caracola d…       779          6 0.269      3985.      0.000381       0.167  \n 6 Aqua Aura …         3         95 0.223       241.      0.333          0.00588\n 7 Costa de l…       588          6 0.215      2071.      0.000575       0.167  \n 8 Telangana …         0         77 0.186         0     NaN              0.00300\n 9 Pao gan SE…       501          5 0.148      1793.      0.000491       0.2    \n10 The Salty …         4         99 0.142      1584.      0.0156         0.00633\n11 Saltwater …         0         79 0.133         0     NaN              0.00372\n12 Oceanic Or…         1         79 0.126       113.      0.333          0.00763\n13 Selous Gam…       252         17 0.120      7060.      0.00113        0.0213 \n14 Spanish An…         1         43 0.111        38.4     1              0.0154 \n15 Greek Octo…         0         33 0.105         0     NaN              0.00741\n16 Zambezi Ra…         0         49 0.105         0     NaN              0.00645\n17 Spanish An…        49         31 0.103      1309.      0.0167         0.0111 \n18 páng xiè -…        15          0 0.103         0       0.0909       NaN      \n19 Yenisei  E…        11         39 0.102       280.      0.0909         0.0114 \n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group3 <int>\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nThe following configurations should be noted before we interpret the graphs: - Node size is set to eigenvector centrality - Node colour is set to community group - Edge width is set to weights - Edge colour is set to centrality_edge_betweenness\nIt is observed that the top 4 companies with highest eigenvector centrality from 2028 to 2032 are:\n\nhǎi dǎn Corporation Wharf\nMar del Este CJSC\nCaracola del Sol Services\nCosta de la Felicidad Shipping\n\nLine S.A. de C.V. came in 3rd in terms of highest eigenvector centrality in 2033 and rose to 2nd highest place in 2034.\nThe results are consistent with the top 4 companies with highest number of incoming links.\n\n\n\n\n3.2.2.4 Centrality Betweenness\n\nCentrality Betweenness is a way of detecting the amount of influence a node has over the flow of information in a graph. It finds nodes that serve as a bridge from one part of a graph to another and measures the shortest paths between all pairs of nodes in a graph. A node with higher betweenness centrality would have more control over the network.\nDue to the large data size, we filter data with betweenness > 250 and community group < 5. Group_component is used to group the nodes.\n\n\n2028202920302031203220332034\n\n\n\n\nShow the code\nMC2_graph_betweenness2028 <- MC2_graph2028 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(betweenness)) %>%\n  filter(betweenness > 300) %>%\n  mutate(group4 = group_components()) %>%\n  filter(group4 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_betweenness2028, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = betweenness, colour = group4)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Betweenness Network in 2028\")\n\n\n\n\n\nShow the code\nMC2_graph_betweenness2028 %>%\n  as_tibble()\n\n\n# A tibble: 39 × 11\n   id         in_degree out_degree  eigen betweenness in_closeness out_closeness\n   <chr>          <dbl>      <dbl>  <dbl>       <dbl>        <dbl>         <dbl>\n 1 Selous Ga…       310         14 0.172        3358.     0.00136        0.0714 \n 2 Pao gan S…       423          6 0.173        2545.     0.000510       0.333  \n 3 Adriatic …        53         15 0.0507       2361.     0.00405        0.0169 \n 4 Aqua Aura…         7         65 0.181        1385.     0.0323         0.00485\n 5 Amerigo S…         8         11 0.0106       1359.     0.00283        0.0286 \n 6 David Ltd…        77          5 0.0395        950.     0.00201        0.111  \n 7 Isla del …        15         34 0.0211        858.     0.0667         0.00763\n 8 Mar de la…         8         12 0.0314        697.     0.0130         0.0123 \n 9 Olas del …       114          6 0.0613        611.     0.00704        0.1    \n10 Turkish S…        52          2 0.0142        603.     0.00439        0.0833 \n# ℹ 29 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group4 <int>\n\n\n\n\n\n\nShow the code\nMC2_graph_betweenness2029 <- MC2_graph2029 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(betweenness)) %>%\n  filter(betweenness > 500) %>%\n  mutate(group4 = group_components()) %>%\n  filter(group4 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_betweenness2029, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = betweenness, colour = group4)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Betweenness Network in 2029\")\n\n\n\n\n\nShow the code\nMC2_graph_betweenness2029 %>%\n  as_tibble()\n\n\n# A tibble: 47 × 11\n   id        in_degree out_degree   eigen betweenness in_closeness out_closeness\n   <chr>         <dbl>      <dbl>   <dbl>       <dbl>        <dbl>         <dbl>\n 1 Pao gan …       433         10 0.187         9580.     0.000541       0.0323 \n 2 Selous G…       337         13 0.170         7590.     0.000903       0.02   \n 3 Kong zho…       195          5 0.0956        3699.     0.000389       0.125  \n 4 Aqua Aur…         9         68 0.166         3225.     0.00826        0.00625\n 5 Adriatic…        51         23 0.0576        2809.     0.00613        0.0130 \n 6 Uttarakh…       141          1 0.0754        2648.     0.000377       0.167  \n 7 Yu xian …       218          7 0.116         2588      0.00137        0.111  \n 8 Seashell…        14          5 0.0171        2034.     0.0294         0.00269\n 9 Saltwate…         1         12 0.00653       1995.     0.0172         0.00376\n10 Olas del…       100          9 0.0827        1859.     0.00488        0.0217 \n# ℹ 37 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group4 <int>\n\n\n\n\n\n\nShow the code\nMC2_graph_betweenness2030 <- MC2_graph2030 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(betweenness)) %>%\n  filter(betweenness > 500) %>%\n  mutate(group4 = group_components()) %>%\n  filter(group4 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_betweenness2030, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = betweenness, colour = group4)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Betweenness Network in 2030\")\n\n\n\n\n\nShow the code\nMC2_graph_betweenness2030 %>%\n  as_tibble()\n\n\n# A tibble: 52 × 11\n   id        in_degree out_degree   eigen betweenness in_closeness out_closeness\n   <chr>         <dbl>      <dbl>   <dbl>       <dbl>        <dbl>         <dbl>\n 1 Selous G…        13         22 0.0326        7495.     0.0370        0.000541\n 2 Aqua Aur…         7         85 0.268         7377.     0.00437       0.00361 \n 3 Chhattis…        12        154 0.0167        7236.     0.0204        0.000829\n 4 Pao gan …       460          9 0.214         5852.     0.000368      0.2     \n 5 Isla del…        23         33 0.0320        5693.     0.00433       0.00275 \n 6 3 Trawle…        19          1 0.00885       4962.     0.00461       0.00242 \n 7 Selous G…       337         15 0.180         4800.     0.000752      0.0556  \n 8 Aqua Azu…         2          3 0.00143       3368.     0.00280       0.00346 \n 9 shí rén …         1         30 0.0131        3294      0.00240       0.00478 \n10 Belgian …         7          1 0.00164       3256.     0.00336       0.00267 \n# ℹ 42 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group4 <int>\n\n\n\n\n\n\nShow the code\nMC2_graph_betweenness2031 <- MC2_graph2031 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(betweenness)) %>%\n  filter(betweenness > 500) %>%\n  mutate(group4 = group_components()) %>%\n  filter(group4 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_betweenness2031, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = betweenness, colour = group4)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Betweenness Network in 2031\")\n\n\n\n\n\nShow the code\nMC2_graph_betweenness2031 %>%\n  as_tibble()\n\n\n# A tibble: 57 × 11\n   id        in_degree out_degree   eigen betweenness in_closeness out_closeness\n   <chr>         <dbl>      <dbl>   <dbl>       <dbl>        <dbl>         <dbl>\n 1 Turkish …        47          4 0.0184       59134.     0.000303      0.00398 \n 2 Pao gan …       444          4 0.200        58743.     0.000426      0.00317 \n 3 Congo Ra…        42         25 0.0393       54139.     0.000193      0.00602 \n 4 The Salt…         5          7 0.0572       51733.     0.000229      0.00439 \n 5 Marine M…        47         33 0.0564       39990.     0.000168      0.00571 \n 6 Selous G…       299         13 0.170        22178.     0.000316      0.00272 \n 7 3 Oceano…       155          1 0.0581        8055.     0.000191      0.00261 \n 8 xiǎo lón…         2         11 0.00486       6443.     0.000142      0.00427 \n 9 Selous G…        10         10 0.00687       5342.     0.0345        0.000749\n10 Chhattis…         8        181 0.0105        4532.     0.02          0.00146 \n# ℹ 47 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group4 <int>\n\n\n\n\n\n\nShow the code\nMC2_graph_betweenness2032 <- MC2_graph2032 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(betweenness)) %>%\n  filter(betweenness > 500) %>%\n  mutate(group4 = group_components()) %>%\n  filter(group4 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_betweenness2032, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = betweenness, colour = group4)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Betweenness Network in 2032\")\n\n\n\n\n\nShow the code\nMC2_graph_betweenness2032 %>%\n  as_tibble()\n\n\n# A tibble: 43 × 11\n   id        in_degree out_degree   eigen betweenness in_closeness out_closeness\n   <chr>         <dbl>      <dbl>   <dbl>       <dbl>        <dbl>         <dbl>\n 1 Isla del…        25          1 0.0173        6411.     0.00351       0.00595 \n 2 Arunacha…         1         52 0.00161       6366.     0.00251       0.01    \n 3 Chhattis…        11        195 0.0142        5365.     0.0182        0.00117 \n 4 Turkish …        42          5 0.0124        4826.     0.00826       0.00403 \n 5 Selous G…         7          7 0.00174       4221.     0.0370        0.000431\n 6 Seashell…         5         10 0.00199       4203.     0.0286        0.000536\n 7 Deep Blu…         6         18 0.00436       4131.     0.0357        0.000501\n 8 Selous G…       286         10 0.157         3845.     0.000958      0.1     \n 9 Panope L…       153          4 0.0394        3802.     0.00292       0.0154  \n10 Adriatic…        57         17 0.0557        3062.     0.00353       0.0182  \n# ℹ 33 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group4 <int>\n\n\n\n\n\n\nShow the code\nMC2_graph_betweenness2033 <- MC2_graph2033 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(betweenness)) %>%\n  filter(betweenness > 500) %>%\n  mutate(group4 = group_components()) %>%\n  filter(group4 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_betweenness2033, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = betweenness, colour = group4)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Betweenness Network in 2033\")\n\n\n\n\n\nShow the code\nMC2_graph_betweenness2033 %>%\n  as_tibble()\n\n\n# A tibble: 71 × 11\n   id        in_degree out_degree   eigen betweenness in_closeness out_closeness\n   <chr>         <dbl>      <dbl>   <dbl>       <dbl>        <dbl>         <dbl>\n 1 Black Se…        64          5 0.0445       36310.     0.000560      0.00358 \n 2 Line S.A…         2        160 0.455        35278.     0.000449      0.00524 \n 3 Dutch  L…        40          8 0.0291       27070.     0.000621      0.00273 \n 4 Atlantic…       100          3 0.0562       20777.     0.000890      0.00214 \n 5 David Lt…        78          5 0.0514       13675.     0.00164       0.00146 \n 6 Costa de…         7          3 0.00583      13521.     0.00117       0.00175 \n 7 Spanish …        48         13 0.0484        7425.     0.00267       0.00140 \n 8 AquaDeli…        91          5 0.0555        6325.     0.00826       0.00120 \n 9 Selous G…        14         16 0.0109        6080.     0.0204        0.000780\n10 Selous G…       311         15 0.190         5693.     0.000470      0.0714  \n# ℹ 61 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group4 <int>\n\n\n\n\n\n\nShow the code\nMC2_graph_betweenness2034 <- MC2_graph2034 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(betweenness)) %>%\n  filter(betweenness > 500) %>%\n  mutate(group4 = group_components()) %>%\n  filter(group4 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_betweenness2034, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = betweenness, colour = group4)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Betweenness Network in 2034\")\n\n\n\n\n\nShow the code\nMC2_graph_betweenness2034 %>%\n  as_tibble()\n\n\n# A tibble: 50 × 11\n   id        in_degree out_degree   eigen betweenness in_closeness out_closeness\n   <chr>         <dbl>      <dbl>   <dbl>       <dbl>        <dbl>         <dbl>\n 1 \"hǎi dǎn…      1605         11 1            10882.     0.000385       0.0909 \n 2 \"Selous …       252         17 0.120         7060.     0.00113        0.0213 \n 3 \"Mar del…      1173         10 0.406         6853.     0.000479       0.1    \n 4 \"Caracol…       779          6 0.269         3985.     0.000381       0.167  \n 5 \"Pao gan…       227          1 0.0779        2104.     0.00112        0.0345 \n 6 \"Costa d…       588          6 0.215         2071.     0.000575       0.167  \n 7 \"Playa d…        40         15 0.0363        2038.     0.00355        0.0141 \n 8 \"Deep Bl…        10          9 0.00182       1946.     0.0357         0.00113\n 9 \"Water W…         1          8 0.0166        1904.     0.0244         0.00357\n10 \"Olas de…        29          5 0.0197        1865.     0.000736       0.0588 \n# ℹ 40 more rows\n# ℹ 4 more variables: groupcomm <int>, indeg_bin <fct>, group <fct>,\n#   group4 <int>\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nThe following configurations should be noted before we interpret the graphs: - Node size is set to betweenness centrality - Node colour is set to community group - Edge width is set to weights - Edge colour is set to centrality_edge_betweenness\nIt is observed that Selous Game Reserve S.A. de C.V. and Pao gan SE Seal are among the top 10 comanies with the highest betweenness centrality from 2028 to 2031. This means that they have higher control over the network. Selous Game Reserve S.A. de C.V. continues to be in the top 10 list from 2032 to 2034. The company name is suspicious as it has no inference to fishing activities.\n\n\n\n\nShow the code\nMC2_edges_aggregated_odtop <- MC2_edges_aggregated2028 %>%\n  filter(source == \"Chhattisgarh   Marine ecology A/S Delivery\") %>%\n    arrange(Year) %>%\n  select(source, target, hscode, Year, weights)\n\nid1 <- MC2_edges_aggregated_odtop %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated_odtop %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted_odtop <- rbind(id1, id2) %>%\n  distinct()\n\nMC2_graph_odtop <- tbl_graph(nodes = MC2_nodes_extracted_odtop,\n                       edges = MC2_edges_aggregated_odtop,\n                       directed = TRUE) \n\nggraph(MC2_graph_odtop, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width = weights, colour = hscode), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n#  geom_node_point(aes(size = eigen, colour = group3)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Activities of Chhattisgarh Marine ecology A/S Delivery in 2028\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#network-matrix-analysis",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#network-matrix-analysis",
    "title": "Take-home Exercise 2",
    "section": "3.3 Network matrix analysis",
    "text": "3.3 Network matrix analysis\n\n\nShow the code\ng <- MC2_graph %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width = weights, colour = factor(Year)), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = centrality_betweenness())) +\n  geom_edge_link(arrow = arrow(length = unit(4, 'mm')))\ng + theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Which companies sit on the shortest paths?\")\n\n\n\n\n\n\n\nShow the code\ng <- MC2_graph %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width = weights, colour = factor(Year)), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = centrality_closeness())) +\n  geom_edge_link(arrow = arrow(length = unit(4, 'mm')))\ng + theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Which companies are closer to others?\")\n\n\n\n\n\n\n\nShow the code\ng <- MC2_graph %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width = weights, colour = factor(Year)), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = centrality_degree())) +\n  geom_edge_link(arrow = arrow(length = unit(4, 'mm')))\ng + theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Which companies have most direct connections to others?\")\n\n\n\n\n\n\n\nShow the code\nq <- MC2_graph2028 %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width = weights, colour = factor(Year)), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = centrality_eigen())) +\n  geom_edge_link(arrow = arrow(length = unit(2, 'mm')))\nq + theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Which companies are important?\")\n\n\n\n\n\nShow the code\nglimpse(q)\n\n\nList of 9\n $ data       :Classes 'layout_tbl_graph', 'layout_ggraph' and 'data.frame':    221 obs. of  6 variables:\n  ..$ x                 : num [1:221] -14.3 1.11 4.97 1.15 3.86 ...\n  ..$ y                 : num [1:221] 4.27 -7.08 -2.61 -2.79 5.65 ...\n  ..$ id                : chr [1:221] \"Playa del Tesoro OJSC\" \"OceanicOrigin Foods Co Consulting\" \"Gujarat   Tide NV Solutions\" \"Goa   Seaside Sp Overseas\" ...\n  ..$ .ggraph.orig_index: int [1:221] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ circular          : logi [1:221] FALSE FALSE FALSE FALSE FALSE FALSE ...\n  ..$ .ggraph.index     : int [1:221] 1 2 3 4 5 6 7 8 9 10 ...\n  ..- attr(*, \"graph\")=Classes 'tbl_graph', 'igraph'  hidden list of 10\n  .. ..$ : num 221\n  .. ..$ : logi TRUE\n  .. ..$ : num [1:227] 0 1 2 3 4 5 6 1 7 8 ...\n  .. ..$ : num [1:227] 129 130 131 132 133 134 135 136 137 131 ...\n  .. ..$ : num [1:227] 0 1 7 2 3 10 48 4 31 52 ...\n  .. ..$ : num [1:227] 0 1 17 36 197 2 98 33 9 50 ...\n  .. ..$ : num [1:222] 0 1 3 4 7 17 19 26 32 40 ...\n  .. ..$ : num [1:222] 0 0 0 0 0 0 0 0 0 0 ...\n  .. ..$ :List of 4\n  .. ..$ :<environment: 0x000001c61b332ef8> \n  .. ..- attr(*, \"active\")= chr \"edges\"\n  ..- attr(*, \"circular\")= logi FALSE\n $ layers     :List of 3\n  ..$ :Classes 'LayerInstance', 'Layer', 'ggproto', 'gg' <ggproto object: Class LayerInstance, Layer, gg>\n    aes_params: list\n    compute_aesthetics: function\n    compute_geom_1: function\n    compute_geom_2: function\n    compute_position: function\n    compute_statistic: function\n    computed_geom_params: list\n    computed_mapping: uneval\n    computed_stat_params: list\n    constructor: call\n    data: function\n    draw_geom: function\n    finish_statistics: function\n    geom: <ggproto object: Class GeomEdgePath, GeomPath, Geom, gg>\n        aesthetics: function\n        default_aes: uneval\n        draw_group: function\n        draw_key: function\n        draw_layer: function\n        draw_panel: function\n        extra_params: na.rm\n        handle_na: function\n        non_missing_aes: \n        optional_aes: \n        parameters: function\n        rename_size: TRUE\n        required_aes: x y\n        setup_data: function\n        setup_params: function\n        use_defaults: function\n        super:  <ggproto object: Class GeomPath, Geom, gg>\n    geom_params: list\n    inherit.aes: FALSE\n    layer_data: function\n    map_statistic: function\n    mapping: uneval\n    position: <ggproto object: Class PositionIdentity, Position, gg>\n        compute_layer: function\n        compute_panel: function\n        required_aes: \n        setup_data: function\n        setup_params: function\n        super:  <ggproto object: Class Position, gg>\n    print: function\n    setup_layer: function\n    show.legend: NA\n    stat: <ggproto object: Class StatEdgeLink, StatLink, Stat, gg>\n        aesthetics: function\n        compute_group: function\n        compute_layer: function\n        compute_panel: function\n        default_aes: uneval\n        dropped_aes: \n        extra_params: na.rm\n        finish_layer: function\n        non_missing_aes: \n        optional_aes: \n        parameters: function\n        required_aes: x y xend yend\n        retransform: TRUE\n        setup_data: function\n        setup_params: function\n        super:  <ggproto object: Class StatLink, Stat, gg>\n    stat_params: list\n    super:  <ggproto object: Class Layer, gg> \n  ..$ :Classes 'LayerInstance', 'Layer', 'ggproto', 'gg' <ggproto object: Class LayerInstance, Layer, gg>\n    aes_params: list\n    compute_aesthetics: function\n    compute_geom_1: function\n    compute_geom_2: function\n    compute_position: function\n    compute_statistic: function\n    computed_geom_params: list\n    computed_mapping: uneval\n    computed_stat_params: list\n    constructor: call\n    data: waiver\n    draw_geom: function\n    finish_statistics: function\n    geom: <ggproto object: Class GeomPoint, Geom, gg>\n        aesthetics: function\n        default_aes: uneval\n        draw_group: function\n        draw_key: function\n        draw_layer: function\n        draw_panel: function\n        extra_params: na.rm\n        handle_na: function\n        non_missing_aes: size shape colour\n        optional_aes: \n        parameters: function\n        rename_size: FALSE\n        required_aes: x y\n        setup_data: function\n        setup_params: function\n        use_defaults: function\n        super:  <ggproto object: Class Geom, gg>\n    geom_params: list\n    inherit.aes: FALSE\n    layer_data: function\n    map_statistic: function\n    mapping: uneval\n    position: <ggproto object: Class PositionIdentity, Position, gg>\n        compute_layer: function\n        compute_panel: function\n        required_aes: \n        setup_data: function\n        setup_params: function\n        super:  <ggproto object: Class Position, gg>\n    print: function\n    setup_layer: function\n    show.legend: NA\n    stat: <ggproto object: Class StatFilter, StatIdentity, Stat, gg>\n        aesthetics: function\n        compute_group: function\n        compute_layer: function\n        compute_panel: function\n        default_aes: uneval\n        dropped_aes: \n        extra_params: na.rm\n        finish_layer: function\n        non_missing_aes: \n        optional_aes: \n        parameters: function\n        required_aes: \n        retransform: TRUE\n        setup_data: function\n        setup_params: function\n        super:  <ggproto object: Class StatIdentity, Stat, gg>\n    stat_params: list\n    super:  <ggproto object: Class Layer, gg> \n  ..$ :Classes 'LayerInstance', 'Layer', 'ggproto', 'gg' <ggproto object: Class LayerInstance, Layer, gg>\n    aes_params: list\n    compute_aesthetics: function\n    compute_geom_1: function\n    compute_geom_2: function\n    compute_position: function\n    compute_statistic: function\n    computed_geom_params: list\n    computed_mapping: uneval\n    computed_stat_params: list\n    constructor: call\n    data: function\n    draw_geom: function\n    finish_statistics: function\n    geom: <ggproto object: Class GeomEdgePath, GeomPath, Geom, gg>\n        aesthetics: function\n        default_aes: uneval\n        draw_group: function\n        draw_key: function\n        draw_layer: function\n        draw_panel: function\n        extra_params: na.rm\n        handle_na: function\n        non_missing_aes: \n        optional_aes: \n        parameters: function\n        rename_size: TRUE\n        required_aes: x y\n        setup_data: function\n        setup_params: function\n        use_defaults: function\n        super:  <ggproto object: Class GeomPath, Geom, gg>\n    geom_params: list\n    inherit.aes: FALSE\n    layer_data: function\n    map_statistic: function\n    mapping: uneval\n    position: <ggproto object: Class PositionIdentity, Position, gg>\n        compute_layer: function\n        compute_panel: function\n        required_aes: \n        setup_data: function\n        setup_params: function\n        super:  <ggproto object: Class Position, gg>\n    print: function\n    setup_layer: function\n    show.legend: NA\n    stat: <ggproto object: Class StatEdgeLink, StatLink, Stat, gg>\n        aesthetics: function\n        compute_group: function\n        compute_layer: function\n        compute_panel: function\n        default_aes: uneval\n        dropped_aes: \n        extra_params: na.rm\n        finish_layer: function\n        non_missing_aes: \n        optional_aes: \n        parameters: function\n        required_aes: x y xend yend\n        retransform: TRUE\n        setup_data: function\n        setup_params: function\n        super:  <ggproto object: Class StatLink, Stat, gg>\n    stat_params: list\n    super:  <ggproto object: Class Layer, gg> \n $ scales     :Classes 'ScalesList', 'ggproto', 'gg' <ggproto object: Class ScalesList, gg>\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  <ggproto object: Class ScalesList, gg> \n $ mapping    : Named list()\n  ..- attr(*, \"class\")= chr \"uneval\"\n $ theme      :List of 6\n  ..$ line      : NULL\n  ..$ axis.title: list()\n  .. ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n  ..$ axis.text : list()\n  .. ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n  ..$ axis.ticks: list()\n  .. ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n  ..$ axis.line : list()\n  .. ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n  ..$ panel.grid: list()\n  .. ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n  ..- attr(*, \"complete\")= logi FALSE\n  ..- attr(*, \"validate\")= logi TRUE\n $ coordinates:Classes 'CoordCartesian', 'Coord', 'ggproto', 'gg' <ggproto object: Class CoordCartesian, Coord, gg>\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  <ggproto object: Class CoordCartesian, Coord, gg> \n $ facet      :Classes 'FacetNull', 'Facet', 'ggproto', 'gg' <ggproto object: Class FacetNull, Facet, gg>\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  <ggproto object: Class FacetNull, Facet, gg> \n $ plot_env   :<environment: 0x000001c591792410> \n $ labels     :List of 9\n  ..$ edge_width : chr \"weights\"\n  ..$ edge_colour: chr \"factor(Year)\"\n  ..$ x          : chr \"x\"\n  ..$ y          : chr \"y\"\n  ..$ xend       : chr \"xend\"\n  ..$ yend       : chr \"yend\"\n  ..$ group      : chr \"edge.id\"\n  ..$ size       : chr \"centrality_eigen()\"\n  ..$ filter     : chr \"filter\"\n  .. ..- attr(*, \"fallback\")= logi TRUE\n - attr(*, \"class\")= chr [1:3] \"ggraph\" \"gg\" \"ggplot\"\n\n\n\n\nShow the code\ng <- MC2_graph %>%\n  mutate(community = as.factor(group_edge_betweenness(weights = weights, directed = TRUE))) %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width = weights), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = community))+\n  geom_edge_link(arrow = arrow(length = unit(2, 'mm'))) #%>%\n#  filter(Year == \"2028\")  \n\ng + theme_graph() +\n#  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Community Insights\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#interactive-network-graph",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#interactive-network-graph",
    "title": "Take-home Exercise 2",
    "section": "3.4 Interactive Network Graph",
    "text": "3.4 Interactive Network Graph\n\n3.4.1 Top 50 Weights Companies\n\n3.4.1.1 Exporting Data Objects\n\n\nShow the code\nwrite_rds(MC2_nodes_extracted_top80, \"data/MC2_nodes_extracted_top80.rds\")\nwrite_rds(MC2_edges_aggregated_top80, \"data/MC2_edges_aggregated_top80.rds\")\nwrite_rds(MC2_graphtop80, \"data/MC2_graphtop80.rds\")\n\n\n\n\n3.4.1.2 Data Preparation\n\nPrepare edges tibble data frame\n\n\n\nShow the code\nedges_top80_df <- MC2_graphtop80 %>%\n  activate(edges) %>%\n  as.tibble()\n\n\n\nPrepare nodes tibble data frame\n\n\n\nShow the code\nnodes_top80_df <- MC2_graphtop80 %>%\n  activate(nodes) %>%\n  as.tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label)\n\n\n\n\n3.4.1.3 Plotting interactive network graph\n\n\nShow the code\nvisNetwork(nodes_top80_df,\n           edges_top80_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 3)), \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)  \n\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nThere are several interesting observations made on this graph:\n\nThere are a number of isolated pairs that only work with each other and not anyone else e.g. Playa del Tesoro OJSC (source) -> Fresh Wharf SRL Consulting (target). This could probably mean that these targets have exclusive rights to the respective sources.\nSome companies only receive goods and from multiple companies A prominent example is Pao gan SE Seal that receives goods from 6 sources. They could be wholesalers/importers who import goods from other fishing companies/fishermen.\nSome companies only ship out goods and to multiple companies e.g. nian yu Ltd. Corporation. They could be the wholesalers/exporters who export goods to other wholesalers/importers. They could also be suspicious of illegal fishing,\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nFor year 2028:\n\nhǎi dǎn Corporation Wharf is the top target company with 25 imports followed by Mar del Este CJSC with 22 imports\n\nFor year 2029:\n\nhǎi dǎn Corporation Wharf is still the top target company with 23 imports followed by Mar del Este CJSC with 19 imports.\n\nFor year 2030:\n\nMar del Este CJSC surpasses hǎi dǎn Corporation Wharf to become the top target company with 26 imports followed by hǎi dǎn Corporation Wharf with 20 imports\n\nFor year 2031:\n\nhǎi dǎn Corporation Wharf and Mar del Este CJSC are both the top target company with 21 imports\n\nFor year 2032:\n\nhǎi dǎn Corporation Wharf is the top target company with 35 imports followed by Mar del Este CJSC with 28 imports\n\nFor year 2033:\n\nMar del Este CJSC surpasses hǎi dǎn Corporation Wharf to become the top target company with 37 imports followed by hǎi dǎn Corporation Wharf with 35 imports.\n\nFor year 2034:\n\nMar del Este CJSC continues to be the top target company with 32 imports followed by hǎi dǎn Corporation Wharf with 24 imports.\n\nIn general, it is observed that there are multiple importer->exporter pairs that work exclusively with each other. In addition, hǎi dǎn Corporation Wharf and Mar del Este CJSC are the top 2 big importers. Neptune’s Harvest A/S Hijiki is the top exporter in 2028. However, it disappeared in 2031 and returned in 2032. Estrella de la Costa SRL took over and becomes the top exporter in 2032."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#section-7",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#section-7",
    "title": "Take-home Exercise 2",
    "section": "2029",
    "text": "2029\n\n\nShow the code\nMC2_edges_aggregated2029 <- MC2_edges %>%\n#  left_join(MC2_nodes_extracted, by = c(\"source\" = \"id\")) %>%\n  rename(from = source) %>%\n#  left_join(MC2_nodes_extracted, by = c(\"target\" = \"id\")) %>%\n  rename(to = target) %>%\n  filter(Year == \"2029\") %>%\n  group_by(from, to) %>%\n    summarise(weights = n()) %>%\n  filter(from!=to) %>%\n  filter(weights > 20) %>%\n  ungroup()\n\nvisNetwork(MC2_nodes_extracted_2029,\n           MC2_edges_aggregated2029) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n#             selectedBy = list(variable = \"Year\", highlight = TRUE)\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 3)), \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n#  visNodes(id = id, title = \"id\") %>%\n#  visInteraction(hover = TRUE) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#section-8",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#section-8",
    "title": "Take-home Exercise 2",
    "section": "2030",
    "text": "2030\n\n\nShow the code\nMC2_edges_aggregated2030 <- MC2_edges %>%\n#  left_join(MC2_nodes_extracted, by = c(\"source\" = \"id\")) %>%\n  rename(from = source) %>%\n#  left_join(MC2_nodes_extracted, by = c(\"target\" = \"id\")) %>%\n  rename(to = target) %>%\n  filter(Year == \"2030\") %>%\n  group_by(from, to) %>%\n    summarise(weights = n()) %>%\n  filter(from!=to) %>%\n  filter(weights > 20) %>%\n  ungroup()\n\nvisNetwork(MC2_nodes_extracted_2030,\n           MC2_edges_aggregated2030) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n#             selectedBy = list(variable = \"Year\", highlight = TRUE)\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 3)), \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n#  visNodes(id = id, title = \"id\") %>%\n#  visInteraction(hover = TRUE) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#section-9",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#section-9",
    "title": "Take-home Exercise 2",
    "section": "2031",
    "text": "2031\n\n\nShow the code\nMC2_edges_aggregated2031 <- MC2_edges %>%\n#  left_join(MC2_nodes_extracted, by = c(\"source\" = \"id\")) %>%\n  rename(from = source) %>%\n#  left_join(MC2_nodes_extracted, by = c(\"target\" = \"id\")) %>%\n  rename(to = target) %>%\n  filter(Year == \"2031\") %>%\n  group_by(from, to) %>%\n    summarise(weights = n()) %>%\n  filter(from!=to) %>%\n  filter(weights > 20) %>%\n  ungroup()\n\nvisNetwork(MC2_nodes_extracted_2031,\n           MC2_edges_aggregated2031) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n#             selectedBy = list(variable = \"Year\", highlight = TRUE)\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 3)), \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n#  visNodes(id = id, title = \"id\") %>%\n#  visInteraction(hover = TRUE) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#section-10",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#section-10",
    "title": "Take-home Exercise 2",
    "section": "2032",
    "text": "2032\n\n\nShow the code\nMC2_edges_aggregated2032 <- MC2_edges %>%\n#  left_join(MC2_nodes_extracted, by = c(\"source\" = \"id\")) %>%\n  rename(from = source) %>%\n#  left_join(MC2_nodes_extracted, by = c(\"target\" = \"id\")) %>%\n  rename(to = target) %>%\n  filter(Year == \"2032\") %>%\n  group_by(from, to) %>%\n    summarise(weights = n()) %>%\n  filter(from!=to) %>%\n  filter(weights > 20) %>%\n  ungroup()\n\nvisNetwork(MC2_nodes_extracted_2032,\n           MC2_edges_aggregated2032) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n#             selectedBy = list(variable = \"Year\", highlight = TRUE)\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 3)), \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n#  visNodes(id = id, title = \"id\") %>%\n#  visInteraction(hover = TRUE) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#section-11",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#section-11",
    "title": "Take-home Exercise 2",
    "section": "2033",
    "text": "2033\n\n\nShow the code\nMC2_edges_aggregated2033 <- MC2_edges %>%\n#  left_join(MC2_nodes_extracted, by = c(\"source\" = \"id\")) %>%\n  rename(from = source) %>%\n#  left_join(MC2_nodes_extracted, by = c(\"target\" = \"id\")) %>%\n  rename(to = target) %>%\n  filter(Year == \"2033\") %>%\n  group_by(from, to) %>%\n    summarise(weights = n()) %>%\n  filter(from!=to) %>%\n  filter(weights > 20) %>%\n  ungroup()\n\nvisNetwork(MC2_nodes_extracted_2033,\n           MC2_edges_aggregated2033) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n#             selectedBy = list(variable = \"Year\", highlight = TRUE)\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 3)), \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n#  visNodes(id = id, title = \"id\") %>%\n#  visInteraction(hover = TRUE) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#section-12",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#section-12",
    "title": "Take-home Exercise 2",
    "section": "2034",
    "text": "2034\n\n\nShow the code\nMC2_edges_aggregated2034 <- MC2_edges %>%\n#  left_join(MC2_nodes_extracted, by = c(\"source\" = \"id\")) %>%\n  rename(from = source) %>%\n#  left_join(MC2_nodes_extracted, by = c(\"target\" = \"id\")) %>%\n  rename(to = target) %>%\n  filter(Year == \"2034\") %>%\n  group_by(from, to) %>%\n    summarise(weights = n()) %>%\n  filter(from!=to) %>%\n  filter(weights > 20) %>%\n  ungroup()\n\nvisNetwork(MC2_nodes_extracted_2034,\n           MC2_edges_aggregated2034) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n#             selectedBy = list(variable = \"Year\", highlight = TRUE)\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 3)), \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n#  visNodes(id = id, title = \"id\") %>%\n#  visInteraction(hover = TRUE) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#overview-top-80-weights-companies",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#overview-top-80-weights-companies",
    "title": "Take-home Exercise 2",
    "section": "3.1 Overview: Top 80 Weights Companies",
    "text": "3.1 Overview: Top 80 Weights Companies\n\n3.1.1 Data Preparation\n\nFilter MC2_edges_aggregated data table by top 80 weights records.\n\n\n\nShow the code\nMC2_edges_aggregated_top80 <- MC2_edges_aggregated %>% \n  arrange(desc(weights)) %>%\n  head(80)\nkable(head(MC2_edges_aggregated_top80))\n\n\n\n\n\n\n\n\n\n\n\n\nsource\ntarget\nhscode\nYear\nweights\n\n\n\n\nnián yú Ltd. Corporation\nNiger Bend Limited Liability Company Marine ecology\n304620\n2031\n3471\n\n\nnián yú Ltd. Corporation\nNiger Bend Limited Liability Company Marine ecology\n304620\n2030\n2979\n\n\nnián yú Ltd. Corporation\nCosta de la Felicidad Shipping\n304620\n2029\n2797\n\n\nSea Breezes S.A. de C.V. Freight\nCaracola del Sol Services\n304620\n2031\n2708\n\n\nnián yú Ltd. Corporation\nCosta de la Felicidad Shipping\n304620\n2028\n2473\n\n\nnián yú Ltd. Corporation\nNiger Bend Limited Liability Company Marine ecology\n304620\n2032\n2215\n\n\n\n\n\n\nPreparing nodes data table:\n\n\n\nShow the code\nid1 <- MC2_edges_aggregated_top80 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated_top80 %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted_top80 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\n3.1.2 Static Network Graph\n\n\nShow the code\nMC2_graphtop80 <- tbl_graph(nodes = MC2_nodes_extracted_top80,\n                       edges = MC2_edges_aggregated_top80,\n                       directed = TRUE) \n\nggraph(MC2_graphtop80, \n            layout = \"linear\", circular = TRUE) +\n  geom_edge_link(aes(width = weights, colour = factor(Year)), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(), \n                  size = 3) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Top 80 Weights Companies\") \n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nThe edge width denotes the weights size. The higher the weights, the thicker the edge width. The edge colour denotes the year.\nFrom MC2 data, the top 3 highest-weight source->target are identified as follows:\n\n\n\n\n\n\n\n\n\nNo.\nSource\nTarget\nYear / (weights)\n\n\n\n\n1\nnián yú Ltd. Corporation\nNiger Bend Limited Liability Company Marine ecology\n2031: 3471, 2030: 2979\n\n\n2\nnián yú Ltd. Corporation\nCosta de la Felicidad Shipping\n2029: 2797, 2028: 2473\n\n\n3\nSea Breezes S.A. de C.V. Freight\nCaracola del Sol Services\n2031: 2708"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#distribution-of-hscode-with-top-weights-by-year",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#distribution-of-hscode-with-top-weights-by-year",
    "title": "Take-home Exercise 2",
    "section": "3.2 Distribution of hscode with top weights by Year",
    "text": "3.2 Distribution of hscode with top weights by Year\nWe observed that the top 19 weights companies are associated with hscode 304620. We want to find out the distribution of this code by year.\n\n\nShow the code\nggplot(data=MC2_edges_aggregated %>% filter(hscode == \"304620\"), \n       aes(y = weights, x= factor(Year))) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"median\",           \n             colour =\"red\",          \n             size=4) +\n  xlab(\"Year\") +\n  ylab(\"Weights\") +\n  theme(axis.title.y=element_text(angle = 0)) +\n  ggtitle ('Weights of hscode = 304620 by Year')\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nThe hscode with top weights is 304620 which is categorised under:\n\nFish and crustaceans, molluscs and other aquatic invertebrates // Fish fillets and other fish meat (whether or not minced), fresh, chilled or frozen. // - Frozen fillets of tilapias (Oreochromis spp.), catfish (Pangasius spp., Silurus spp., Clarias spp., Ictalurus spp.), carp (Cyprinus carpio, Carassius carassius, Ctenopharyngodon idellus, Hypophthalmichthys spp., Cirrhinus spp., Mylopharyngodon piceus), eels (Anguilla spp.), Nile perch (Lates niloticus) and snakeheads (Channa spp.) : // – Catfish (Pangasius spp., Silurus spp., Clarias spp., Ictalurus spp.)\n\nIt is observed that the median weights is similar across the years but there are quite a number of outliers every year."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualization-of-centrality-measures-by-year",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualization-of-centrality-measures-by-year",
    "title": "Take-home Exercise 2",
    "section": "3.3 Visualization of Centrality Measures by Year",
    "text": "3.3 Visualization of Centrality Measures by Year\n\nData Preparation\n\nDerive new variable, weights, that sums the number of source to target and form new edges data tables by year.\n\n\n\nShow the code\nMC2_edges_aggregated2028 <- MC2_edges %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n()) %>%\n  filter(source!=target, Year == \"2028\") %>%\n  ungroup() \n\nMC2_edges_aggregated2029 <- MC2_edges %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n()) %>%\n  filter(source!=target, Year == \"2029\") %>%\n  ungroup() \n\nMC2_edges_aggregated2030 <- MC2_edges %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n()) %>%\n  filter(source!=target, Year == \"2030\") %>%\n  ungroup() \n\nMC2_edges_aggregated2031 <- MC2_edges %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n()) %>%\n  filter(source!=target, Year == \"2031\") %>%\n  ungroup() \n\nMC2_edges_aggregated2032 <- MC2_edges %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n()) %>%\n  filter(source!=target, Year == \"2032\") %>%\n  ungroup() \n\nMC2_edges_aggregated2033 <- MC2_edges %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n()) %>%\n  filter(source!=target, Year == \"2033\") %>%\n  ungroup() \n\nMC2_edges_aggregated2034 <- MC2_edges %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n()) %>%\n  filter(source!=target, Year == \"2034\") %>%\n  ungroup() \n\n\n\nForm new nodes data table for MC2 by year, by using source and target of MC2_edges_aggregated data table. This is to ensure that the nodes in nodes data tables include all the source and target values.\n\n\n\nShow the code\nid1 <- MC2_edges_aggregated2028 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated2028 %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted2028 <- rbind(id1, id2) %>%\n  distinct()\n\nid1 <- MC2_edges_aggregated2029 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated2029 %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted2029 <- rbind(id1, id2) %>%\n  distinct()\n\nid1 <- MC2_edges_aggregated2030 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated2030 %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted2030 <- rbind(id1, id2) %>%\n  distinct()\n\nid1 <- MC2_edges_aggregated2031 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated2031 %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted2031 <- rbind(id1, id2) %>%\n  distinct()\n\nid1 <- MC2_edges_aggregated2032 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated2032 %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted2032 <- rbind(id1, id2) %>%\n  distinct()\n\nid1 <- MC2_edges_aggregated2033 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated2033 %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted2033 <- rbind(id1, id2) %>%\n  distinct()\n\nid1 <- MC2_edges_aggregated2034 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated2034 %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted2034 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\nBuild the tidygraph data model\n\n\n\nShow the code\nMC2_graph2028 <- tbl_graph(nodes = MC2_nodes_extracted2028,\n                       edges = MC2_edges_aggregated2028,\n                       directed = TRUE) \n\nMC2_graph2029 <- tbl_graph(nodes = MC2_nodes_extracted2029,\n                       edges = MC2_edges_aggregated2029,\n                       directed = TRUE) \n\nMC2_graph2030 <- tbl_graph(nodes = MC2_nodes_extracted2030,\n                       edges = MC2_edges_aggregated2030,\n                       directed = TRUE) \n\nMC2_graph2031 <- tbl_graph(nodes = MC2_nodes_extracted2031,\n                       edges = MC2_edges_aggregated2031,\n                       directed = TRUE) \n\nMC2_graph2032 <- tbl_graph(nodes = MC2_nodes_extracted2032,\n                       edges = MC2_edges_aggregated2032,\n                       directed = TRUE) \n\nMC2_graph2033 <- tbl_graph(nodes = MC2_nodes_extracted2033,\n                       edges = MC2_edges_aggregated2033,\n                       directed = TRUE) \n\nMC2_graph2034 <- tbl_graph(nodes = MC2_nodes_extracted2034,\n                       edges = MC2_edges_aggregated2034,\n                       directed = TRUE) \n\n\n\nCompute various centrality measures from the tidygraph data models:\n\nIn Degree\nOut Degree\nEigenvalue\nBetweenness\nIn Closeness\nOut Closeness\n\nCompute centrality edge betweenness from the edges table.\n\n\n\nShow the code\nMC2_graph2028 <- MC2_graph2028 %>% \n  activate(\"nodes\") %>%\n  mutate(in_degree = centrality_degree(mode = \"in\")) %>%\n  mutate(out_degree = centrality_degree(mode = \"out\")) %>%\n  mutate(eigen = centrality_eigen()) %>%\n  mutate(betweenness = centrality_betweenness()) %>%\n  mutate(indeg_bin = cut(in_degree, breaks = c(0, 500, 1000, 1500, Inf),\n                       labels = c(\"1\\n(0-499)\", \n                                  \"2\\n(500-999)\", \n                                  \"3\\n(1000-1499)\",\n                                  \"4\\n(>=1500)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  mutate(outdeg_bin = cut(out_degree, breaks = c(0, 50, 100, 150, Inf),\n                       labels = c(\"1\\n(0-49)\", \n                                  \"2\\n(50-99)\", \n                                  \"3\\n(100-149)\",\n                                  \"4\\n(>=150)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  rename(group = outdeg_bin)\n\nMC2_graph2028 <- MC2_graph2028 %>%\n  activate(\"edges\") %>%\n  mutate(importance = centrality_edge_betweenness()) \n\nMC2_graph2029 <- MC2_graph2029 %>% \n  activate(\"nodes\") %>%\n  mutate(in_degree = centrality_degree(mode = \"in\")) %>%\n  mutate(out_degree = centrality_degree(mode = \"out\")) %>%\n  mutate(eigen = centrality_eigen()) %>%\n  mutate(betweenness = centrality_betweenness()) %>%\n  mutate(indeg_bin = cut(in_degree, breaks = c(0, 500, 1000, 1500, Inf),\n                       labels = c(\"1\\n(0-499)\", \n                                  \"2\\n(500-999)\", \n                                  \"3\\n(1000-1499)\",\n                                  \"4\\n(>=1500)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  mutate(outdeg_bin = cut(out_degree, breaks = c(0, 50, 100, 150, Inf),\n                       labels = c(\"1\\n(0-49)\", \n                                  \"2\\n(50-99)\", \n                                  \"3\\n(100-149)\",\n                                  \"4\\n(>=150)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  rename(group = outdeg_bin)\n\nMC2_graph2029 <- MC2_graph2029 %>%\n  activate(\"edges\") %>%\n  mutate(importance = centrality_edge_betweenness()) \n\nMC2_graph2030 <- MC2_graph2030 %>% \n  activate(\"nodes\") %>%\n  mutate(in_degree = centrality_degree(mode = \"in\")) %>%\n  mutate(out_degree = centrality_degree(mode = \"out\")) %>%\n  mutate(eigen = centrality_eigen()) %>%\n  mutate(betweenness = centrality_betweenness()) %>%\n  mutate(indeg_bin = cut(in_degree, breaks = c(0, 500, 1000, 1500, Inf),\n                       labels = c(\"1\\n(0-499)\", \n                                  \"2\\n(500-999)\", \n                                  \"3\\n(1000-1499)\",\n                                  \"4\\n(>=1500)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  mutate(outdeg_bin = cut(out_degree, breaks = c(0, 50, 100, 150, Inf),\n                       labels = c(\"1\\n(0-49)\", \n                                  \"2\\n(50-99)\", \n                                  \"3\\n(100-149)\",\n                                  \"4\\n(>=150)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  rename(group = outdeg_bin)\n\nMC2_graph2030 <- MC2_graph2030 %>%\n  activate(\"edges\") %>%\n  mutate(importance = centrality_edge_betweenness()) \n\nMC2_graph2031 <- MC2_graph2031 %>% \n  activate(\"nodes\") %>%\n  mutate(in_degree = centrality_degree(mode = \"in\")) %>%\n  mutate(out_degree = centrality_degree(mode = \"out\")) %>%\n  mutate(eigen = centrality_eigen()) %>%\n  mutate(betweenness = centrality_betweenness()) %>%\n  mutate(indeg_bin = cut(in_degree, breaks = c(0, 500, 1000, 1500, Inf),\n                       labels = c(\"1\\n(0-499)\", \n                                  \"2\\n(500-999)\", \n                                  \"3\\n(1000-1499)\",\n                                  \"4\\n(>=1500)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  mutate(outdeg_bin = cut(out_degree, breaks = c(0, 50, 100, 150, Inf),\n                       labels = c(\"1\\n(0-49)\", \n                                  \"2\\n(50-99)\", \n                                  \"3\\n(100-149)\",\n                                  \"4\\n(>=150)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  rename(group = outdeg_bin)\n\nMC2_graph2031 <- MC2_graph2031 %>%\n  activate(\"edges\") %>%\n  mutate(importance = centrality_edge_betweenness()) \n\nMC2_graph2032 <- MC2_graph2032 %>% \n  activate(\"nodes\") %>%\n  mutate(in_degree = centrality_degree(mode = \"in\")) %>%\n  mutate(out_degree = centrality_degree(mode = \"out\")) %>%\n  mutate(eigen = centrality_eigen()) %>%\n  mutate(betweenness = centrality_betweenness()) %>%\n  mutate(indeg_bin = cut(in_degree, breaks = c(0, 500, 1000, 1500, Inf),\n                       labels = c(\"1\\n(0-499)\", \n                                  \"2\\n(500-999)\", \n                                  \"3\\n(1000-1499)\",\n                                  \"4\\n(>=1500)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  mutate(outdeg_bin = cut(out_degree, breaks = c(0, 50, 100, 150, Inf),\n                       labels = c(\"1\\n(0-49)\", \n                                  \"2\\n(50-99)\", \n                                  \"3\\n(100-149)\",\n                                  \"4\\n(>=150)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  rename(group = outdeg_bin)\n\nMC2_graph2032 <- MC2_graph2032 %>%\n  activate(\"edges\") %>%\n  mutate(importance = centrality_edge_betweenness()) \n\nMC2_graph2033 <- MC2_graph2033 %>% \n  activate(\"nodes\") %>%\n  mutate(in_degree = centrality_degree(mode = \"in\")) %>%\n  mutate(out_degree = centrality_degree(mode = \"out\")) %>%\n  mutate(eigen = centrality_eigen()) %>%\n  mutate(betweenness = centrality_betweenness()) %>%\n  mutate(indeg_bin = cut(in_degree, breaks = c(0, 500, 1000, 1500, Inf),\n                       labels = c(\"1\\n(0-499)\", \n                                  \"2\\n(500-999)\", \n                                  \"3\\n(1000-1499)\",\n                                  \"4\\n(>=1500)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  mutate(outdeg_bin = cut(out_degree, breaks = c(0, 50, 100, 150, Inf),\n                       labels = c(\"1\\n(0-49)\", \n                                  \"2\\n(50-99)\", \n                                  \"3\\n(100-149)\",\n                                  \"4\\n(>=150)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  rename(group = outdeg_bin)\n\nMC2_graph2033 <- MC2_graph2033 %>%\n  activate(\"edges\") %>%\n  mutate(importance = centrality_edge_betweenness()) \n\nMC2_graph2034 <- MC2_graph2034 %>% \n  activate(\"nodes\") %>%\n  mutate(in_degree = centrality_degree(mode = \"in\")) %>%\n  mutate(out_degree = centrality_degree(mode = \"out\")) %>%\n  mutate(eigen = centrality_eigen()) %>%\n  mutate(betweenness = centrality_betweenness()) %>%\n  mutate(indeg_bin = cut(in_degree, breaks = c(0, 500, 1000, 1500, Inf),\n                       labels = c(\"1\\n(0-499)\", \n                                  \"2\\n(500-999)\", \n                                  \"3\\n(1000-1499)\",\n                                  \"4\\n(>=1500)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  mutate(outdeg_bin = cut(out_degree, breaks = c(0, 50, 100, 150, Inf),\n                       labels = c(\"1\\n(0-49)\", \n                                  \"2\\n(50-99)\", \n                                  \"3\\n(100-149)\",\n                                  \"4\\n(>=150)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  rename(group = outdeg_bin)\n\nMC2_graph2034 <- MC2_graph2034 %>%\n  activate(\"edges\") %>%\n  mutate(importance = centrality_edge_betweenness()) \n\n\n\n\n3.3.1 Centrality Degree (In)\n\nWe want to find out which companies have the highest number of incoming links.\nDue to the large data size, we filter data with in_degree > 30 and community group < 5. Group_component is used to identify the prominent communities.\n\n\n2028202920302031203220332034\n\n\n\n\nShow the code\nMC2_graph_indegree2028 <- MC2_graph2028 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(in_degree)) %>%\n  filter(in_degree > 30) %>%\n  mutate(group1 = group_components()) %>%\n  filter(group1 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_indegree2028, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = in_degree, colour = group1)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"In-degree Network in 2028\")\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_indegree2028 %>%\n  as_tibble(), 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup1\n\n\n\n\nhǎi dǎn Corporation Wharf\n1778\n0\n1.0000000\n0.000\n4\n\n\n\n\n(>=1500)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nMar del Este CJSC\n1229\n0\n0.5980740\n0.000\n3\n\n\n\n\n(1000-1499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCaracola del Sol Services\n790\n0\n0.3154585\n0.000\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCosta de la Felicidad Shipping\n432\n0\n0.1985760\n0.000\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nPao gan SE Seal\n423\n6\n0.1731546\n2544.935\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nMC2_graph_indegree2029 <- MC2_graph2029 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(in_degree)) %>%\n  filter(in_degree > 30) %>%\n  mutate(group1 = group_components()) %>%\n  filter(group1 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_indegree2029, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = in_degree, colour = group1)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"In-degree Network in 2029\")\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_indegree2029 %>%\n  as_tibble(), 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup1\n\n\n\n\nhǎi dǎn Corporation Wharf\n1744\n0\n1.0000000\n0.000\n4\n\n\n\n\n(>=1500)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nMar del Este CJSC\n1188\n0\n0.5993937\n0.000\n3\n\n\n\n\n(1000-1499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCaracola del Sol Services\n815\n0\n0.3867689\n0.000\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCosta de la Felicidad Shipping\n524\n1\n0.2569914\n1313.000\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nPao gan SE Seal\n433\n10\n0.1869867\n9580.049\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nMC2_graph_indegree2030 <- MC2_graph2030 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(in_degree)) %>%\n  filter(in_degree > 30) %>%\n  mutate(group1 = group_components()) %>%\n  filter(group1 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_indegree2030, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = in_degree, colour = group1)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"In-degree Network in 2030\")\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_indegree2030 %>%\n  as_tibble(), 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup1\n\n\n\n\nhǎi dǎn Corporation Wharf\n1647\n0\n1.0000000\n0.000\n4\n\n\n\n\n(>=1500)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nMar del Este CJSC\n1218\n2\n0.6260072\n2381.269\n3\n\n\n\n\n(1000-1499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCaracola del Sol Services\n830\n0\n0.3772743\n0.000\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCosta de la Felicidad Shipping\n538\n0\n0.2830454\n0.000\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nPao gan SE Seal\n460\n9\n0.2136137\n5851.913\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nMC2_graph_indegree2031 <- MC2_graph2031 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(in_degree)) %>%\n  filter(in_degree > 30) %>%\n  mutate(group1 = group_components()) %>%\n  filter(group1 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_indegree2031, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = in_degree, colour = group1)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"In-degree Network in 2031\")\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_indegree2031 %>%\n  as_tibble(), 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup1\n\n\n\n\nhǎi dǎn Corporation Wharf\n1607\n0\n1.0000000\n0.000\n4\n\n\n\n\n(>=1500)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nMar del Este CJSC\n1065\n1\n0.5230766\n1557.633\n3\n\n\n\n\n(1000-1499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCaracola del Sol Services\n940\n0\n0.4733496\n0.000\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCosta de la Felicidad Shipping\n612\n1\n0.3216593\n2605.785\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nPao gan SE Seal\n444\n4\n0.1999246\n58743.451\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nMC2_graph_indegree2032 <- MC2_graph2032 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(in_degree)) %>%\n  filter(in_degree > 30) %>%\n  mutate(group1 = group_components()) %>%\n  filter(group1 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_indegree2032, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = in_degree, colour = group1)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"In-degree Network in 2032\")\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_indegree2032 %>%\n  as_tibble(), 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup1\n\n\n\n\nhǎi dǎn Corporation Wharf\n1561\n0\n1.0000000\n0\n4\n\n\n\n\n(>=1500)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nMar del Este CJSC\n1144\n0\n0.6119755\n0\n3\n\n\n\n\n(1000-1499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCaracola del Sol Services\n888\n0\n0.4351457\n0\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCosta de la Felicidad Shipping\n625\n0\n0.3379958\n0\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nPao gan SE Seal\n514\n0\n0.2252316\n0\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nMC2_graph_indegree2033 <- MC2_graph2033 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(in_degree)) %>%\n  filter(in_degree > 30) %>%\n  mutate(group1 = group_components()) %>%\n  filter(group1 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_indegree2033, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = in_degree, colour = group1)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"In-degree Network in 2033\")\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_indegree2033 %>%\n  as_tibble(), 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup1\n\n\n\n\nhǎi dǎn Corporation Wharf\n1640\n0\n1.0000000\n0.0\n4\n\n\n\n\n(>=1500)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nMar del Este CJSC\n1200\n2\n0.5970732\n2784.5\n3\n\n\n\n\n(1000-1499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCaracola del Sol Services\n879\n0\n0.4209031\n0.0\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCosta de la Felicidad Shipping\n632\n0\n0.2901820\n0.0\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nPao gan SE Seal\n482\n0\n0.2174428\n0.0\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nMC2_graph_indegree2034 <- MC2_graph2034 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(in_degree)) %>%\n  filter(in_degree > 30) %>%\n  mutate(group1 = group_components()) %>%\n  filter(group1 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_indegree2034, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = in_degree, colour = group1)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"In-degree Network in 2034\")\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_indegree2034 %>%\n  as_tibble(), 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup1\n\n\n\n\nhǎi dǎn Corporation Wharf\n1605\n11\n1.0000000\n10881.555\n4\n\n\n\n\n(>=1500)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nMar del Este CJSC\n1173\n10\n0.4055537\n6852.741\n3\n\n\n\n\n(1000-1499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCaracola del Sol Services\n779\n6\n0.2687496\n3985.290\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCosta de la Felicidad Shipping\n588\n6\n0.2148332\n2071.264\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nPao gan SE Seal\n501\n5\n0.1475276\n1792.517\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nThe following configurations should be noted before we interpret the graphs:\n\nNode size is set to in-degree\nNode colour is set to community group\nEdge width is set to weights\nEdge colour is set to centrality_edge_betweenness\n\nIt is observed that the top 5 companies with highest in-degree in 2028 are:\n\nhǎi dǎn Corporation Wharf\nMar del Este CJSC\nCaracola del Sol Services\nCosta de la Felicidad Shipping\nPao gan SE Seal\n\nThe top 5 comapnies are consistent across the other years and the respective companies’ in-degree values are also quite consistent across the years. No abnormality is observed.\nThese companies are likely wholesalers/importers who buy/import fishes from other fishing companies/fishermen.\nIt is also observed that there is high centrality edge betweenness between Selous Game Reserve A/S and Pao gan SE Seal in 2028.\nIn 2032 and 2033, there is high centrality_edge_betweenness between AtlanticAppetite Oyster Ltd. Corporation Investment and Dutch Ltd. Liability Co Consultants.\n\n\n\n\n3.3.2 Centrality Degree (Out)\n\nWe want to find out which companies have the highest number of out-going links.\nDue to the large data size, we filter data with out_degree > 10 and community group < 5. Group_component is used to identify the prominent communities.\nData preparation:\n\n\n\nShow the code\nMC2_graph_outdegree2028 <- MC2_graph2028 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(out_degree)) %>%\n  filter(out_degree > 10) %>%\n  mutate(group2 = group_components()) %>%\n  filter(group2 < 5) \n\nwrite_rds(MC2_graph_outdegree2028, \"data/MC2_graph_outdegree2028.rds\")\n\nMC2_graph_outdegree2029 <- MC2_graph2029 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(out_degree)) %>%\n  filter(out_degree > 10) %>%\n  mutate(group2 = group_components()) %>%\n  filter(group2 < 5) \n\nwrite_rds(MC2_graph_outdegree2029, \"data/MC2_graph_outdegree2029.rds\")\n\nMC2_graph_outdegree2030 <- MC2_graph2030 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(out_degree)) %>%\n  filter(out_degree > 10) %>%\n  mutate(group2 = group_components()) %>%\n  filter(group2 < 5) \n\nwrite_rds(MC2_graph_outdegree2030, \"data/MC2_graph_outdegree2030.rds\")\n\nMC2_graph_outdegree2031 <- MC2_graph2031 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(out_degree)) %>%\n  filter(out_degree > 10) %>%\n  mutate(group2 = group_components()) %>%\n  filter(group2 < 5) \n\nwrite_rds(MC2_graph_outdegree2031, \"data/MC2_graph_outdegree2031.rds\")\n\nMC2_graph_outdegree2032 <- MC2_graph2032 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(out_degree)) %>%\n  filter(out_degree > 10) %>%\n  mutate(group2 = group_components()) %>%\n  filter(group2 < 5) \n\nwrite_rds(MC2_graph_outdegree2032, \"data/MC2_graph_outdegree2032.rds\")\n\nMC2_graph_outdegree2033 <- MC2_graph2033 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(out_degree)) %>%\n  filter(out_degree > 10) %>%\n  mutate(group2 = group_components()) %>%\n  filter(group2 < 5) \n\nwrite_rds(MC2_graph_outdegree2033, \"data/MC2_graph_outdegree2033.rds\")\n\nMC2_graph_outdegree2034 <- MC2_graph2034 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(out_degree)) %>%\n  filter(out_degree > 12) %>%\n  mutate(group2 = group_components()) %>%\n  filter(group2 < 5) \n\nwrite_rds(MC2_graph_outdegree2034, \"data/MC2_graph_outdegree2034.rds\")\n\n\n\nPrepare edges tibble data frame\n\n\n\nShow the code\nedges_outdegree2028_df <- MC2_graph_outdegree2028 %>%\n  activate(edges) %>%\n  as_tibble()\n\nedges_outdegree2029_df <- MC2_graph_outdegree2029 %>%\n  activate(edges) %>%\n  as_tibble()\n\nedges_outdegree2030_df <- MC2_graph_outdegree2030 %>%\n  activate(edges) %>%\n  as_tibble()\n\nedges_outdegree2031_df <- MC2_graph_outdegree2031 %>%\n  activate(edges) %>%\n  as_tibble()\n\nedges_outdegree2032_df <- MC2_graph_outdegree2032 %>%\n  activate(edges) %>%\n  as_tibble()\n\nedges_outdegree2033_df <- MC2_graph_outdegree2033 %>%\n  activate(edges) %>%\n  as_tibble()\n\nedges_outdegree2034_df <- MC2_graph_outdegree2034 %>%\n  activate(edges) %>%\n  as_tibble()\n\n\n\nPrepare nodes tibble data frame\n\n\n\nShow the code\nnodes_outdegree2028_df <- MC2_graph_outdegree2028 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label, group)\n\nnodes_outdegree2029_df <- MC2_graph_outdegree2029 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label, group)\n\nnodes_outdegree2030_df <- MC2_graph_outdegree2030 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label, group)\n\nnodes_outdegree2031_df <- MC2_graph_outdegree2031 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label, group)\n\nnodes_outdegree2032_df <- MC2_graph_outdegree2032 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label, group)\n\nnodes_outdegree2033_df <- MC2_graph_outdegree2033 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label, group)\n\nnodes_outdegree2034_df <- MC2_graph_outdegree2034 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label, group)\n\n\n\n2028202920302031203220332034\n\n\n\n\nShow the code\nvisNetwork(nodes_outdegree2028_df,\n           edges_outdegree2028_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 3)), \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)  \n\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_outdegree2028 %>%\n  as_tibble(), 10))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup2\n\n\n\n\nChhattisgarh Marine ecology A/S Delivery\n4\n125\n0.0062129\n566.0000\n1\n\n\n\n\n(0-499)\n3\n\n\n\n\n\n\n\n\n(100-149)\n1\n\n\n\n\n\n\n\n\nCaracola del Este Corporation Express\n0\n96\n0.1460439\n0.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nThe Salty Dog Limited Liability Company\n5\n87\n0.1506035\n260.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nFresh Limited Liability Company\n1\n83\n0.1113520\n108.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nbǐ mù yú Sagl Distribution\n3\n79\n0.0905995\n249.7579\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nEstrella del Mar Seafarer\n2\n75\n0.0031474\n117.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nZambezi Gorge N.V. Transport\n0\n72\n0.0929510\n0.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nCoral Cove LC Hull\n0\n68\n0.1066515\n0.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nAqua Aura SE Marine life\n7\n65\n0.1813949\n1385.3494\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nMar del Norte OJSC\n0\n65\n0.1905603\n0.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nvisNetwork(nodes_outdegree2029_df,\n           edges_outdegree2029_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 3)), \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)  \n\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_outdegree2029 %>%\n  as_tibble(), 10))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup2\n\n\n\n\nChhattisgarh Marine ecology A/S Delivery\n9\n127\n0.0071303\n1138.00000\n1\n\n\n\n\n(0-499)\n3\n\n\n\n\n\n\n\n\n(100-149)\n1\n\n\n\n\n\n\n\n\nEstrella del Mar Seafarer\n2\n98\n0.0645006\n814.93939\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n2\n\n\n\n\n\n\n\n\nZambezi Gorge N.V. Transport\n0\n97\n0.1696808\n0.00000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nThe Salty Dog Limited Liability Company\n4\n93\n0.1309068\n1617.72603\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nYu er he Bonito\n0\n86\n0.1877951\n0.00000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nFresh Limited Liability Company\n0\n84\n0.0902068\n0.00000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nCaracola del Este Corporation Express\n0\n83\n0.1698128\n0.00000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nMar del Norte OJSC\n1\n76\n0.2362744\n84.86061\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nDiao yu OJSC Overseas\n1\n69\n0.0938954\n151.34987\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nAqua Aura SE Marine life\n9\n68\n0.1655408\n3225.43333\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nvisNetwork(nodes_outdegree2030_df,\n           edges_outdegree2030_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 3)), \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)  \n\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_outdegree2030 %>%\n  as_tibble(), 10))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup2\n\n\n\n\nChhattisgarh Marine ecology A/S Delivery\n12\n154\n0.0166970\n7235.6597\n1\n\n\n\n\n(0-499)\n4\n\n\n\n\n\n\n\n\n(>=150)\n1\n\n\n\n\n\n\n\n\nEstrella del Mar Seafarer\n2\n129\n0.1086575\n1581.2705\n1\n\n\n\n\n(0-499)\n3\n\n\n\n\n\n\n\n\n(100-149)\n1\n\n\n\n\n\n\n\n\nYu er he Bonito\n0\n96\n0.1924592\n0.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nCaracola del Este Corporation Express\n0\n91\n0.1712262\n0.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nZambezi Gorge N.V. Transport\n0\n88\n0.0873909\n0.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nAqua Aura SE Marine life\n7\n85\n0.2675865\n7376.6484\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nFresh Limited Liability Company\n0\n76\n0.1434904\n0.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nMar del Norte OJSC\n0\n75\n0.2195350\n0.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nLake Tana & Son’s\n4\n61\n0.0785804\n451.7563\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nSaltwater Sanctuary Marine ecology\n0\n61\n0.1415295\n0.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nvisNetwork(nodes_outdegree2031_df,\n           edges_outdegree2031_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 3)), \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)  \n\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_outdegree2031 %>%\n  as_tibble(), 10))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup2\n\n\n\n\nChhattisgarh Marine ecology A/S Delivery\n8\n181\n0.0104816\n4532.2440\n1\n\n\n\n\n(0-499)\n4\n\n\n\n\n\n\n\n\n(>=150)\n2\n\n\n\n\n\n\n\n\nEstrella del Mar Seafarer\n1\n115\n0.0454587\n1801.6999\n1\n\n\n\n\n(0-499)\n3\n\n\n\n\n\n\n\n\n(100-149)\n1\n\n\n\n\n\n\n\n\nRajasthan GmbH & Co. KG\n5\n89\n0.1990920\n563.1667\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nAqua Aura SE Marine life\n7\n84\n0.1794450\n2006.0271\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nArena del Sol SRL\n0\n81\n0.2493176\n0.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nFresh Limited Liability Company\n1\n78\n0.0906836\n191.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nLine S.A. de C.V.\n0\n78\n0.2657106\n0.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nZambezi Gorge N.V. Transport\n0\n74\n0.0899246\n0.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nxiǎo xiā Oyj Marine ecology\n2\n66\n0.1013958\n419.3429\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nSea Breezes S.A. de C.V. Freight\n0\n64\n0.0943813\n0.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nvisNetwork(nodes_outdegree2032_df,\n           edges_outdegree2032_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 3)), \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)  \n\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_outdegree2032 %>%\n  as_tibble(), 10))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup2\n\n\n\n\nChhattisgarh Marine ecology A/S Delivery\n11\n195\n0.0142196\n5365.0862\n1\n\n\n\n\n(0-499)\n4\n\n\n\n\n\n\n\n\n(>=150)\n1\n\n\n\n\n\n\n\n\nEstrella del Mar Seafarer\n8\n103\n0.0289443\n2148.9990\n1\n\n\n\n\n(0-499)\n3\n\n\n\n\n\n\n\n\n(100-149)\n1\n\n\n\n\n\n\n\n\nRajasthan GmbH & Co. KG\n4\n96\n0.1730749\n255.0758\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n3\n\n\n\n\n\n\n\n\nZambezi Gorge N.V. Transport\n0\n94\n0.1265646\n0.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nFresh Limited Liability Company\n2\n73\n0.0882404\n592.4500\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nCaracola del Este Corporation Express\n1\n72\n0.1714518\n794.5935\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nAqua Aura SE Marine life\n8\n68\n0.1420964\n1966.3132\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nArena del Sol SRL\n2\n67\n0.1956795\n263.4360\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nLine S.A. de C.V.\n1\n66\n0.2482896\n253.1735\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nxiǎo xiā Oyj Marine ecology\n4\n59\n0.0715712\n646.1833\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nvisNetwork(nodes_outdegree2033_df,\n           edges_outdegree2033_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 3)), \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)  \n\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_outdegree2033 %>%\n  as_tibble(), 10))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup2\n\n\n\n\nLine S.A. de C.V.\n2\n160\n0.4545109\n35278.1474\n1\n\n\n\n\n(0-499)\n4\n\n\n\n\n\n\n\n\n(>=150)\n1\n\n\n\n\n\n\n\n\nChhattisgarh Marine ecology A/S Delivery\n3\n141\n0.0067976\n1416.0000\n1\n\n\n\n\n(0-499)\n3\n\n\n\n\n\n\n\n\n(100-149)\n1\n\n\n\n\n\n\n\n\nEstrella del Mar Seafarer\n4\n135\n0.0796653\n2425.2177\n1\n\n\n\n\n(0-499)\n3\n\n\n\n\n\n\n\n\n(100-149)\n1\n\n\n\n\n\n\n\n\nZambezi Gorge N.V. Transport\n0\n112\n0.1082797\n0.0000\n1\n\n\n\n\n(0-499)\n3\n\n\n\n\n\n\n\n\n(100-149)\n1\n\n\n\n\n\n\n\n\nThe Salty Dog Limited Liability Company\n0\n99\n0.1805246\n0.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nCaracola del Este Corporation Express\n1\n91\n0.1172898\n3224.6406\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nSaltwater Sirens S.p.A. International\n0\n74\n0.1512980\n0.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nFresh Limited Liability Company\n2\n72\n0.1133746\n165.0576\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nOceanSavor Surf Limited Liability Company Logistics\n0\n71\n0.0962042\n0.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nAqua Aura SE Marine life\n7\n70\n0.1083636\n2691.3200\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nvisNetwork(nodes_outdegree2034_df,\n           edges_outdegree2034_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 3)), \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)  \n\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_outdegree2034 %>%\n  as_tibble(), 10))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup2\n\n\n\n\nLine S.A. de C.V.\n3\n184\n0.6574433\n341.7841\n1\n\n\n\n\n(0-499)\n4\n\n\n\n\n\n\n\n\n(>=150)\n1\n\n\n\n\n\n\n\n\nEstrella del Mar Seafarer\n2\n122\n0.0678789\n1742.7780\n1\n\n\n\n\n(0-499)\n3\n\n\n\n\n\n\n\n\n(100-149)\n2\n\n\n\n\n\n\n\n\nAqua Aura SE Marine life\n3\n95\n0.2232807\n240.9202\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nCaracola del Este Corporation Express\n1\n93\n0.0790850\n1044.0905\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n2\n\n\n\n\n\n\n\n\nZambezi Gorge N.V. Transport\n0\n92\n0.0757808\n0.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nFresh Limited Liability Company\n2\n88\n0.0980568\n161.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nSaltwater Sirens S.p.A. International\n0\n79\n0.1326884\n0.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nTelangana Wakame CJSC United\n0\n77\n0.1863003\n0.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nLake Tana & Son’s\n0\n69\n0.0688000\n0.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nBelgian Scallop Harbor ОАО Freight\n0\n62\n0.0783702\n0.0000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nThe following configurations should be noted before we interpret the graphs:\n\nNode colour denotes the level of out-degree e.g. nodes with >=150 number of outgoing links are coloured in blue.\n\nIt is observed that the top 5 companies with highest out-degree in 2028 are:\n\nChhattisgarh Marine ecology A/S Delivery\nCaracola del Este Corporation Express\nThe Salty Dog Limited Liability Company\nFresh Limited Liability Company\nbǐ mù yú Sagl Distribution\n\nThese companies are likely wholesalers/exporters who sell/export fishes to retailers.\nChhattisgarh Marine ecology A/S Delivery remains the top company with highest out-degree in the subsequent years except for 2034 where it is overtaken by Line S.A. de C.V. The graph did not reflect all the outgoing links. This could be due to companies with number of outgoing links <=10 being removed before plotting the graph.\nIt is observed that in 2028, Caracola del Este Corporation Express, Zambezi Gorge N.V. Transport, Coral Cove LC Hull and Mar del Norte OJSC are within the top 10 list that only have out-going links and 0 incoming links.\nIn 2029, Zambezi Gorge N.V. Transport, Yu er he Bonito, Fresh Limited Liability Company and Caracola del Este Corporation Express are within the top 10 list that only have out-going links and 0 incoming links.\nIn 2030, Yu er he Bonito, Caracola del Este Corporation Express, Zambezi Gorge N.V. Transport, Fresh Limited Liability Company, Mar del Norte OJSC and Saltwater Sanctuary Marine ecology are within the top 10 list that only have out-going links and 0 incoming links.\nIn 2031, Arena del Sol SRL, Line S.A. de C.V., Zambezi Gorge N.V. Transport and Sea Breezes S.A. de C.V. Freight are within the top 10 list that only have out-going links and 0 incoming links.\nIn 2032, Zambezi Gorge N.V. Transport is the only company within the top 10 list that only have out-going links and 0 incoming links.\nIn 2033, Zambezi Gorge N.V. Transport, The Salty Dog Limited Liability Company, Saltwater Sirens S.p.A. International and OceanSavor Surf Limited Liability Company Logistics are within the top 10 list that only have out-going links and 0 incoming links.\nIn 2034, Zambezi Gorge N.V. Transport, Saltwater Sirens S.p.A. International, Telangana Wakame CJSC United, Lake Tana & Son’s and Belgian Scallop Harbor ОАО Freight are within the top 10 list that only have out-going links and 0 incoming links.\nThe above-mentioned companies with many out-going links and 0 incoming links should be further investigated as it is questionable why they are selling their fishes to so many different companies.\n\n\n\n\n3.3.3 Eigenvector Centrality\n\nEigenvector centrality measures the transitive influence of nodes. Relationships originating from high-scoring nodes contribute more to the score of a node than connections from low-scoring nodes. A high eigenvector centrality score means that a node is connected to many nodes who themselves have high scores.\nDue to the large data size, we filter data with eigenvector > 0.1 and community group < 5. Group_component is used to identify the prominent communities.\n\n\n2028202920302031203220332034\n\n\n\n\nShow the code\nMC2_graph_eigen2028 <- MC2_graph2028 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(eigen)) %>%\n  filter(eigen > 0.1) %>%\n  mutate(group3 = group_components()) %>%\n  filter(group3 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_eigen2028, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = eigen, colour = group3)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Eigen Network in 2028\")\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_eigen2028 %>%\n  as_tibble(), 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup3\n\n\n\n\nhǎi dǎn Corporation Wharf\n1778\n0\n1.0000000\n0\n4\n\n\n\n\n(>=1500)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nMar del Este CJSC\n1229\n0\n0.5980740\n0\n3\n\n\n\n\n(1000-1499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCaracola del Sol Services\n790\n0\n0.3154585\n0\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCosta de la Felicidad Shipping\n432\n0\n0.1985760\n0\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nMar del Norte OJSC\n0\n65\n0.1905603\n0\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nMC2_graph_eigen2029 <- MC2_graph2029 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(eigen)) %>%\n  filter(eigen > 0.1) %>%\n  mutate(group3 = group_components()) %>%\n  filter(group3 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_eigen2029, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = eigen, colour = group3)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Eigen Network in 2029\")\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_eigen2029 %>%\n  as_tibble(), 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup3\n\n\n\n\nhǎi dǎn Corporation Wharf\n1744\n0\n1.0000000\n0.00000\n4\n\n\n\n\n(>=1500)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nMar del Este CJSC\n1188\n0\n0.5993937\n0.00000\n3\n\n\n\n\n(1000-1499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCaracola del Sol Services\n815\n0\n0.3867689\n0.00000\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCosta de la Felicidad Shipping\n524\n1\n0.2569914\n1313.00000\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nMar del Norte OJSC\n1\n76\n0.2362744\n84.86061\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nMC2_graph_eigen2030 <- MC2_graph2030 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(eigen)) %>%\n  filter(eigen > 0.1) %>%\n  mutate(group3 = group_components()) %>%\n  filter(group3 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_eigen2030, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = eigen, colour = group3)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Eigen Network in 2030\")\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_eigen2030 %>%\n  as_tibble(), 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup3\n\n\n\n\nhǎi dǎn Corporation Wharf\n1647\n0\n1.0000000\n0.000\n4\n\n\n\n\n(>=1500)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nMar del Este CJSC\n1218\n2\n0.6260072\n2381.269\n3\n\n\n\n\n(1000-1499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCaracola del Sol Services\n830\n0\n0.3772743\n0.000\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCosta de la Felicidad Shipping\n538\n0\n0.2830454\n0.000\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nAqua Aura SE Marine life\n7\n85\n0.2675865\n7376.648\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nMC2_graph_eigen2031 <- MC2_graph2031 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(eigen)) %>%\n  filter(eigen > 0.1) %>%\n  mutate(group3 = group_components()) %>%\n  filter(group3 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_eigen2031, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = eigen, colour = group3)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Eigen Network in 2031\")\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_eigen2031 %>%\n  as_tibble(), 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup3\n\n\n\n\nhǎi dǎn Corporation Wharf\n1607\n0\n1.0000000\n0.000\n4\n\n\n\n\n(>=1500)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nMar del Este CJSC\n1065\n1\n0.5230766\n1557.633\n3\n\n\n\n\n(1000-1499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCaracola del Sol Services\n940\n0\n0.4733496\n0.000\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCosta de la Felicidad Shipping\n612\n1\n0.3216593\n2605.785\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nLine S.A. de C.V.\n0\n78\n0.2657106\n0.000\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nMC2_graph_eigen2032 <- MC2_graph2032 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(eigen)) %>%\n  filter(eigen > 0.1) %>%\n  mutate(group3 = group_components()) %>%\n  filter(group3 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_eigen2032, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = eigen, colour = group3)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Eigen Network in 2032\")\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_eigen2032 %>%\n  as_tibble(), 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup3\n\n\n\n\nhǎi dǎn Corporation Wharf\n1561\n0\n1.0000000\n0.0000\n4\n\n\n\n\n(>=1500)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nMar del Este CJSC\n1144\n0\n0.6119755\n0.0000\n3\n\n\n\n\n(1000-1499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCaracola del Sol Services\n888\n0\n0.4351457\n0.0000\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCosta de la Felicidad Shipping\n625\n0\n0.3379958\n0.0000\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nLine S.A. de C.V.\n1\n66\n0.2482896\n253.1735\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nMC2_graph_eigen2033 <- MC2_graph2033 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(eigen)) %>%\n  filter(eigen > 0.1) %>%\n  mutate(group3 = group_components()) %>%\n  filter(group3 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_eigen2033, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = eigen, colour = group3)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Eigen Network in 2033\")\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_eigen2033 %>%\n  as_tibble(), 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup3\n\n\n\n\nhǎi dǎn Corporation Wharf\n1640\n0\n1.0000000\n0.00\n4\n\n\n\n\n(>=1500)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nMar del Este CJSC\n1200\n2\n0.5970732\n2784.50\n3\n\n\n\n\n(1000-1499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nLine S.A. de C.V.\n2\n160\n0.4545109\n35278.15\n1\n\n\n\n\n(0-499)\n4\n\n\n\n\n\n\n\n\n(>=150)\n1\n\n\n\n\n\n\n\n\nCaracola del Sol Services\n879\n0\n0.4209031\n0.00\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCosta de la Felicidad Shipping\n632\n0\n0.2901820\n0.00\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nMC2_graph_eigen2034 <- MC2_graph2034 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(eigen)) %>%\n  filter(eigen > 0.1) %>%\n  mutate(group3 = group_components()) %>%\n  filter(group3 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_eigen2034, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = eigen, colour = group3)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Eigen Network in 2034\")\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_eigen2034 %>%\n  as_tibble(), 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup3\n\n\n\n\nhǎi dǎn Corporation Wharf\n1605\n11\n1.0000000\n10881.5554\n4\n\n\n\n\n(>=1500)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nLine S.A. de C.V.\n3\n184\n0.6574433\n341.7841\n1\n\n\n\n\n(0-499)\n4\n\n\n\n\n\n\n\n\n(>=150)\n1\n\n\n\n\n\n\n\n\nMar del Este CJSC\n1173\n10\n0.4055537\n6852.7408\n3\n\n\n\n\n(1000-1499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nSailors and Surfers Incorporated Enterprises\n388\n6\n0.3309788\n1212.9892\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCaracola del Sol Services\n779\n6\n0.2687496\n3985.2901\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nThe following configurations should be noted before we interpret the graphs:\n\nNode size is set to eigenvector centrality\nNode colour is set to community group\nEdge width is set to weights\nEdge colour is set to centrality_edge_betweenness\n\nIt is observed that the top 4 companies with highest eigenvector centrality from 2028 to 2032 are:\n\nhǎi dǎn Corporation Wharf\nMar del Este CJSC\nCaracola del Sol Services\nCosta de la Felicidad Shipping\n\nLine S.A. de C.V. came in 3rd in terms of highest eigenvector centrality in 2033 and rose to 2nd highest place in 2034.\nThe results are consistent with the top 4 companies with highest number of incoming links yearly.\n\n\n\n\n3.3.4 Centrality Betweenness\n\nCentrality Betweenness is a way of detecting the amount of influence a node has over the flow of information in a graph. It finds nodes that serve as a bridge from one part of a graph to another and measures the shortest paths between all pairs of nodes in a graph. A node with higher betweenness centrality would have more control over the network.\nDue to the large data size, we filter data with betweenness > 500 and community group < 5. Group_component is used to identify the prominent communities.\n\n\n2028202920302031203220332034\n\n\n\n\nShow the code\nMC2_graph_betweenness2028 <- MC2_graph2028 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(betweenness)) %>%\n  filter(betweenness > 500) %>%\n  mutate(group4 = group_components()) %>%\n  filter(group4 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_betweenness2028, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = betweenness, colour = group4)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Betweenness Network in 2028\")\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_betweenness2028 %>%\n  as_tibble(), 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup4\n\n\n\n\nSelous Game Reserve S.A. de C.V.\n310\n14\n0.1717515\n3357.830\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nPao gan SE Seal\n423\n6\n0.1731546\n2544.935\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nAdriatic Tuna Seabass BV Transit\n53\n15\n0.0506777\n2360.519\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nAqua Aura SE Marine life\n7\n65\n0.1813949\n1385.349\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nAmerigo S.A. de C.V.\n8\n11\n0.0106009\n1358.929\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nMC2_graph_betweenness2029 <- MC2_graph2029 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(betweenness)) %>%\n  filter(betweenness > 500) %>%\n  mutate(group4 = group_components()) %>%\n  filter(group4 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_betweenness2029, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = betweenness, colour = group4)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Betweenness Network in 2029\")\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_betweenness2029 %>%\n  as_tibble(), 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup4\n\n\n\n\nPao gan SE Seal\n433\n10\n0.1869867\n9580.049\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nSelous Game Reserve S.A. de C.V.\n337\n13\n0.1703965\n7590.479\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nKong zhong diao yu Ges.m.b.H.\n195\n5\n0.0955518\n3698.985\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nAqua Aura SE Marine life\n9\n68\n0.1655408\n3225.433\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nAdriatic Tuna Seabass BV Transit\n51\n23\n0.0576360\n2809.129\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nMC2_graph_betweenness2030 <- MC2_graph2030 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(betweenness)) %>%\n  filter(betweenness > 500) %>%\n  mutate(group4 = group_components()) %>%\n  filter(group4 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_betweenness2030, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = betweenness, colour = group4)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Betweenness Network in 2030\")\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_betweenness2030 %>%\n  as_tibble(), 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup4\n\n\n\n\nSelous Game Reserve Kga\n13\n22\n0.0325654\n7494.675\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nAqua Aura SE Marine life\n7\n85\n0.2675865\n7376.648\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nChhattisgarh Marine ecology A/S Delivery\n12\n154\n0.0166970\n7235.660\n1\n\n\n\n\n(0-499)\n4\n\n\n\n\n\n\n\n\n(>=150)\n1\n\n\n\n\n\n\n\n\nPao gan SE Seal\n460\n9\n0.2136137\n5851.913\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nIsla del Este SE\n23\n33\n0.0319624\n5693.108\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nMC2_graph_betweenness2031 <- MC2_graph2031 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(betweenness)) %>%\n  filter(betweenness > 500) %>%\n  mutate(group4 = group_components()) %>%\n  filter(group4 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_betweenness2031, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = betweenness, colour = group4)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Betweenness Network in 2031\")\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_betweenness2031 %>%\n  as_tibble(), 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup4\n\n\n\n\nTurkish Sword S.A. de C.V. Trout\n47\n4\n0.0184122\n59134.03\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nPao gan SE Seal\n444\n4\n0.1999246\n58743.45\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCongo Rapids Ltd. Corporation\n42\n25\n0.0392776\n54139.43\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nThe Salty Pearl Tsunami Corp Express\n5\n7\n0.0571568\n51732.84\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nMarine Mates NV Worldwide\n47\n33\n0.0564480\n39990.23\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nMC2_graph_betweenness2032 <- MC2_graph2032 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(betweenness)) %>%\n  filter(betweenness > 500) %>%\n  mutate(group4 = group_components()) %>%\n  filter(group4 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_betweenness2032, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = betweenness, colour = group4)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Betweenness Network in 2032\")\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_betweenness2032 %>%\n  as_tibble(), 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup4\n\n\n\n\nIsla del Mar NV Forwading\n25\n1\n0.0172792\n6410.560\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nArunachal Pradesh s A/S Transport\n1\n52\n0.0016079\n6365.560\n1\n\n\n\n\n(0-499)\n2\n\n\n\n\n\n\n\n\n(50-99)\n1\n\n\n\n\n\n\n\n\nChhattisgarh Marine ecology A/S Delivery\n11\n195\n0.0142196\n5365.086\n1\n\n\n\n\n(0-499)\n4\n\n\n\n\n\n\n\n\n(>=150)\n1\n\n\n\n\n\n\n\n\nTurkish Sword S.A. de C.V. Trout\n42\n5\n0.0124391\n4826.394\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nSelous Game Reserve Kga\n7\n7\n0.0017444\n4221.398\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nMC2_graph_betweenness2033 <- MC2_graph2033 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(betweenness)) %>%\n  filter(betweenness > 500) %>%\n  mutate(group4 = group_components()) %>%\n  filter(group4 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_betweenness2033, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = betweenness, colour = group4)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Betweenness Network in 2033\")\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_betweenness2033 %>%\n  as_tibble(), 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup4\n\n\n\n\nBlack Sea Tuna Sagl\n64\n5\n0.0444815\n36309.56\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nLine S.A. de C.V.\n2\n160\n0.4545109\n35278.15\n1\n\n\n\n\n(0-499)\n4\n\n\n\n\n\n\n\n\n(>=150)\n1\n\n\n\n\n\n\n\n\nDutch Ltd. Liability Co Consultants\n40\n8\n0.0290998\n27069.75\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nAtlanticAppetite Oyster Ltd. Corporation Investment\n100\n3\n0.0562261\n20777.39\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nDavid Ltd. Liability Co Forwading\n78\n5\n0.0513592\n13675.02\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nMC2_graph_betweenness2034 <- MC2_graph2034 %>%\n  activate(\"nodes\") %>%\n  arrange(desc(betweenness)) %>%\n  filter(betweenness > 500) %>%\n  mutate(group4 = group_components()) %>%\n  filter(group4 < 5) \n\nset.seed(1234)\nggraph(MC2_graph_betweenness2034, \n            layout = \"fr\") +\n  geom_edge_link(aes(width = weights, colour = importance), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = betweenness, colour = group4)) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Betweenness Network in 2034\")\n\n\n\n\n\nShow the code\nkable(head(MC2_graph_betweenness2034 %>%\n  as_tibble(), 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nin_degree\nout_degree\neigen\nbetweenness\nindeg_bin\ngroup\ngroup4\n\n\n\n\nhǎi dǎn Corporation Wharf\n1605\n11\n1.0000000\n10881.555\n4\n\n\n\n\n(>=1500)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nSelous Game Reserve S.A. de C.V.\n252\n17\n0.1203842\n7059.721\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nMar del Este CJSC\n1173\n10\n0.4055537\n6852.741\n3\n\n\n\n\n(1000-1499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nCaracola del Sol Services\n779\n6\n0.2687496\n3985.290\n2\n\n\n\n\n(500-999)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\nPao gan LC Freight\n227\n1\n0.0779475\n2104.397\n1\n\n\n\n\n(0-499)\n1\n\n\n\n\n\n\n\n\n(0-49)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nThe following configurations should be noted before we interpret the graphs:\n\nNode size is set to betweenness centrality\nNode colour is set to community group\nEdge width is set to weights\nEdge colour is set to centrality_edge_betweenness\n\nIt is observed that Selous Game Reserve S.A. de C.V. and Pao gan SE Seal are among the top 10 comanies with the highest betweenness centrality from 2028 to 2031. This means that they have higher control over the network. Selous Game Reserve S.A. de C.V. continues to be in the top 10 list from 2032 to 2034. The company name is suspicious as it has no inference to fishing activities."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html",
    "title": "Hands-on Exercise 7",
    "section": "",
    "text": "Show the code\npacman::p_load(scales, viridis, lubridate, ggthemes, gridExtra, readxl, knitr, data.table, CGPfunctions, ggHoriPlot, tidyverse)\n\n\n\n\n\n\n\n\n\nShow the code\nattacks <- read_csv(\"data/eventlog.csv\")\n\n\n\n\n\n\n\nShow the code\nkable(head(attacks))\n\n\n\n\n\ntimestamp\nsource_country\ntz\n\n\n\n\n2015-03-12 15:59:16\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:00:48\nFR\nEurope/Paris\n\n\n2015-03-12 16:02:26\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:02:38\nUS\nAmerica/Chicago\n\n\n2015-03-12 16:03:22\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:03:45\nCN\nAsia/Shanghai\n\n\n\n\n\n\n\n\n\n\nShow the code\nmake_hr_wkday <- function(ts, sc, tz) {\n  real_times <- ymd_hms(ts, \n                        tz = tz[1], \n                        quiet = TRUE)\n  dt <- data.table(source_country = sc,\n                   wkday = weekdays(real_times),\n                   hour = hour(real_times))\n  return(dt)\n}\n\nwkday_levels <- c('Saturday', 'Friday', \n                  'Thursday', 'Wednesday', \n                  'Tuesday', 'Monday', \n                  'Sunday')\n\nattacks <- attacks %>%\n  group_by(tz) %>%\n  do(make_hr_wkday(.$timestamp, \n                   .$source_country, \n                   .$tz)) %>% \n  ungroup() %>% \n  mutate(wkday = factor(\n    wkday, levels = wkday_levels),\n    hour  = factor(\n      hour, levels = 0:23))\n\nkable(head(attacks))\n\n\n\n\n\ntz\nsource_country\nwkday\nhour\n\n\n\n\nAfrica/Cairo\nBG\nSaturday\n20\n\n\nAfrica/Cairo\nTW\nSunday\n6\n\n\nAfrica/Cairo\nTW\nSunday\n8\n\n\nAfrica/Cairo\nCN\nSunday\n11\n\n\nAfrica/Cairo\nUS\nSunday\n15\n\n\nAfrica/Cairo\nCA\nMonday\n11\n\n\n\n\n\n\n\n\n\n\nShow the code\ngrouped <- attacks %>% \n  count(wkday, hour) %>% \n  ungroup() %>%\n  na.omit()\n\nggplot(grouped, \n       aes(hour, \n           wkday, \n           fill = n)) + \ngeom_tile(color = \"white\", \n          size = 0.1) + \ntheme_tufte(base_family = \"Helvetica\") + \ncoord_equal() +\nscale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\nlabs(x = NULL, \n     y = NULL, \n     title = \"Attacks by weekday and time of day\") +\ntheme(axis.ticks = element_blank(),\n      plot.title = element_text(hjust = 0.5),\n      legend.title = element_text(size = 8),\n      legend.text = element_text(size = 6) )\n\n\n\n\n\n\n\n\n\n\nShow the code\nattacks_by_country <- count(\n  attacks, source_country) %>%\n  mutate(percent = percent(n/sum(n))) %>%\n  arrange(desc(n))\n\n\n\n\nShow the code\ntop4 <- attacks_by_country$source_country[1:4]\ntop4_attacks <- attacks %>%\n  filter(source_country %in% top4) %>%\n  count(source_country, wkday, hour) %>%\n  ungroup() %>%\n  mutate(source_country = factor(\n    source_country, levels = top4)) %>%\n  na.omit()\n\n\n\n\nShow the code\nggplot(top4_attacks, \n       aes(hour, \n           wkday, \n           fill = n)) + \n  geom_tile(color = \"white\", \n          size = 0.1) + \n  theme_tufte(base_family = \"Helvetica\") + \n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\n  facet_wrap(~source_country, ncol = 2) +\n  labs(x = NULL, y = NULL, \n     title = \"Attacks on top 4 countries by weekday and time of day\") +\n  theme(axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 7),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6) )\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nair <- read_excel(\"data/arrivals_by_air.xlsx\")\n\n\n\n\n\n\n\nShow the code\nair$month <- factor(month(air$`Month-Year`), \n                    levels=1:12, \n                    labels=month.abb, \n                    ordered=TRUE) \nair$year <- year(ymd(air$`Month-Year`))\n\n\n\n\n\n\n\nShow the code\nVietnam <- air %>% \n  select(`Vietnam`, \n         month, \n         year) %>%\n  filter(year >= 2010)\n\n\n\n\n\n\n\nShow the code\nhline.data <- Vietnam %>% \n  group_by(month) %>%\n  summarise(avgvalue = mean(`Vietnam`))\n\n\n\n\n\n\n\nShow the code\nggplot() + \n  geom_line(data=Vietnam,\n            aes(x=year, \n                y=`Vietnam`, \n                group=month), \n            colour=\"black\") +\n  geom_hline(aes(yintercept=avgvalue), \n             data=hline.data, \n             linetype=6, \n             colour=\"red\", \n             size=0.5) + \n  facet_grid(~month) +\n  labs(axis.text.x = element_blank(),\n       title = \"Visitor arrivals from Vietnam by air, Jan 2010-Dec 2019\") +\n  xlab(\"\") +\n  ylab(\"No. of Visitors\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nrice <- read_csv(\"data/rice.csv\")\n\n\n\n\n\n\n\nShow the code\nrice %>% \n  mutate(Year = factor(Year)) %>%\n  filter(Year %in% c(1961, 1980)) %>%\n  newggslopegraph(Year, Yield, Country,\n                Title = \"Rice Yield of Top 11 Asian Counties\",\n                SubTitle = \"1961-1980\",\n                Caption = \"Prepared by: Dr. Kam Tin Seong\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#step-1-data-import-2",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#step-1-data-import-2",
    "title": "Hands-on Exercise 7",
    "section": "Step 1: Data Import",
    "text": "Step 1: Data Import\n\n\nShow the code\naverp <- read_csv(\"data/AVERP.csv\") %>%\n  mutate(`Date` = dmy(`Date`))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#step-2-plotting-the-horizon-graph",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#step-2-plotting-the-horizon-graph",
    "title": "Hands-on Exercise 7",
    "section": "Step 2: Plotting the horizon graph",
    "text": "Step 2: Plotting the horizon graph\n\n\nShow the code\naverp %>% \n  filter(Date >= \"2018-01-01\") %>%\n  ggplot() +\n  geom_horizon(aes(x = Date, y=Values), \n               origin = \"midpoint\", \n               horizonscale = 6)+\n  facet_grid(`Consumer Items`~.) +\n    theme_few() +\n  scale_fill_hcl(palette = 'RdBu') +\n  theme(panel.spacing.y=unit(0, \"lines\"), strip.text.y = element_text(\n    size = 5, angle = 0, hjust = 0),\n    legend.position = 'none',\n    axis.text.y = element_blank(),\n    axis.text.x = element_text(size=7),\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank()\n    ) +\n    scale_x_date(expand=c(0,0), date_breaks = \"3 month\", date_labels = \"%b%y\") +\n  ggtitle('Average Retail Prices of Selected Consumer Items (Jan 2018 to Dec 2022)')"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "title": "Take-home Exercise 3",
    "section": "",
    "text": "This exercise aims to use appropriate static and interactive statistical graphics methods to help FishEye identify companies that may be engaged in illegal fishing.\nThe original dataset was originated from Mini Challenge 3 of Vast Challenge 2023.\nThere is one file downloaded: MC3.json.\nThis exercise aims to answer Q1 of the challenge:\n\nUse visual analytics to identify anomalies in the business groups present in the knowledge graph. Limit your response to 400 words and 5 images."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#importing-json-file-by-using-jsonlite-package",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#importing-json-file-by-using-jsonlite-package",
    "title": "Take-home Exercise 3",
    "section": "2.2 Importing json file by using jsonlite package",
    "text": "2.2 Importing json file by using jsonlite package\n\n\nShow the code\nmc3_data <- fromJSON(\"data/MC3.json\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#taking-a-closer-look-at-zambezi-gorge-n.v.-transport",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#taking-a-closer-look-at-zambezi-gorge-n.v.-transport",
    "title": "Take-home Exercise 2",
    "section": "3.4 Taking a Closer Look at Zambezi Gorge N.V. Transport",
    "text": "3.4 Taking a Closer Look at Zambezi Gorge N.V. Transport\n\nWe want to find out the fishing activities of Zambezi Gorge N.V. Transport as it has one of the highest number of outgoing links but no incoming link.\n\n\n2028202920302031203220332034\n\n\n\n\nShow the code\nMC2_edges_aggregated_odtop2028 <- MC2_edges_aggregated2028 %>%\n  filter(source == \"Zambezi Gorge  N.V. Transport\") %>%\n  arrange(desc(weights)) %>%\n  select(source, target, hscode, Year, weights) %>%\n  head(30)\n\nid1 <- MC2_edges_aggregated_odtop2028 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated_odtop2028 %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted_odtop2028 <- rbind(id1, id2) %>%\n  distinct()\n\nMC2_graph_odtop2028 <- tbl_graph(nodes = MC2_nodes_extracted_odtop2028,\n                       edges = MC2_edges_aggregated_odtop2028,\n                       directed = TRUE) \n\nggraph(MC2_graph_odtop2028, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width = weights), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Activities of Zambezi Gorge N.V. Transport in 2028\")\n\n\n\n\n\n\n\n\n\nShow the code\nMC2_edges_aggregated_odtop2029 <- MC2_edges_aggregated2029 %>%\n  filter(source == \"Zambezi Gorge  N.V. Transport\") %>%\n  arrange(desc(weights)) %>%\n  select(source, target, hscode, Year, weights) %>%\n  head(30)\n\nid1 <- MC2_edges_aggregated_odtop2029 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated_odtop2029 %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted_odtop2029 <- rbind(id1, id2) %>%\n  distinct()\n\nMC2_graph_odtop2029 <- tbl_graph(nodes = MC2_nodes_extracted_odtop2029,\n                       edges = MC2_edges_aggregated_odtop2029,\n                       directed = TRUE) \n\nggraph(MC2_graph_odtop2029, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width = weights), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Activities of Zambezi Gorge N.V. Transport in 2029\")\n\n\n\n\n\n\n\n\n\nShow the code\nMC2_edges_aggregated_odtop2030 <- MC2_edges_aggregated2030 %>%\n  filter(source == \"Zambezi Gorge  N.V. Transport\") %>%\n  arrange(desc(weights)) %>%\n  select(source, target, hscode, Year, weights) %>%\n  head(30)\n\nid1 <- MC2_edges_aggregated_odtop2030 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated_odtop2030 %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted_odtop2030 <- rbind(id1, id2) %>%\n  distinct()\n\nMC2_graph_odtop2030 <- tbl_graph(nodes = MC2_nodes_extracted_odtop2030,\n                       edges = MC2_edges_aggregated_odtop2030,\n                       directed = TRUE) \n\nggraph(MC2_graph_odtop2030, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width = weights), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Activities of Zambezi Gorge N.V. Transport in 2030\")\n\n\n\n\n\n\n\n\n\nShow the code\nMC2_edges_aggregated_odtop2031 <- MC2_edges_aggregated2031 %>%\n  filter(source == \"Zambezi Gorge  N.V. Transport\") %>%\n  arrange(desc(weights)) %>%\n  select(source, target, hscode, Year, weights) %>%\n  head(30)\n\nid1 <- MC2_edges_aggregated_odtop2031 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated_odtop2031 %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted_odtop2031 <- rbind(id1, id2) %>%\n  distinct()\n\nMC2_graph_odtop2031 <- tbl_graph(nodes = MC2_nodes_extracted_odtop2031,\n                       edges = MC2_edges_aggregated_odtop2031,\n                       directed = TRUE) \n\nggraph(MC2_graph_odtop2031, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width = weights), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Activities of Zambezi Gorge N.V. Transport in 2031\")\n\n\n\n\n\n\n\n\n\nShow the code\nMC2_edges_aggregated_odtop2032 <- MC2_edges_aggregated2032 %>%\n  filter(source == \"Zambezi Gorge  N.V. Transport\") %>%\n  arrange(desc(weights)) %>%\n  select(source, target, hscode, Year, weights) %>%\n  head(30)\n\nid1 <- MC2_edges_aggregated_odtop2032 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated_odtop2032 %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted_odtop2032 <- rbind(id1, id2) %>%\n  distinct()\n\nMC2_graph_odtop2032 <- tbl_graph(nodes = MC2_nodes_extracted_odtop2032,\n                       edges = MC2_edges_aggregated_odtop2032,\n                       directed = TRUE) \n\nggraph(MC2_graph_odtop2032, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width = weights), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Activities of Zambezi Gorge N.V. Transport in 2032\")\n\n\n\n\n\n\n\n\n\nShow the code\nMC2_edges_aggregated_odtop2033 <- MC2_edges_aggregated2033 %>%\n  filter(source == \"Zambezi Gorge  N.V. Transport\") %>%\n  arrange(desc(weights)) %>%\n  select(source, target, hscode, Year, weights) %>%\n  head(30)\n\nid1 <- MC2_edges_aggregated_odtop2033 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated_odtop2033 %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted_odtop2033 <- rbind(id1, id2) %>%\n  distinct()\n\nMC2_graph_odtop2033 <- tbl_graph(nodes = MC2_nodes_extracted_odtop2033,\n                       edges = MC2_edges_aggregated_odtop2033,\n                       directed = TRUE) \n\nggraph(MC2_graph_odtop2033, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width = weights), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Activities of Zambezi Gorge N.V. Transport in 2033\")\n\n\n\n\n\n\n\n\n\nShow the code\nMC2_edges_aggregated_odtop2034 <- MC2_edges_aggregated2034 %>%\n  filter(source == \"Zambezi Gorge  N.V. Transport\") %>%\n  arrange(desc(weights)) %>%\n  select(source, target, hscode, Year, weights) %>%\n  head(30)\n\nid1 <- MC2_edges_aggregated_odtop2034 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_edges_aggregated_odtop2034 %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted_odtop2034 <- rbind(id1, id2) %>%\n  distinct()\n\nMC2_graph_odtop2034 <- tbl_graph(nodes = MC2_nodes_extracted_odtop2034,\n                       edges = MC2_edges_aggregated_odtop2034,\n                       directed = TRUE) \n\nggraph(MC2_graph_odtop2034, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width = weights), \n                 alpha=0.2, arrow = arrow(length = unit(4, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Activities of Zambezi Gorge N.V. Transport in 2034\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nIt is observed that Zambezi Gorge N.V. Transport do not send its goods to the same companies every year. It makes the most number of trips i.e. highest weights to Panope Limited Liability Company from 2032 to 2034. It is questionable why it only sends goods and to so many companies.\n\n\n4. Conclusion\nIn conclusion, there are several actors in the fishing industry, from commercial fishermen to vessel owners to retailers and distributors. Those companies with one-to-one relationship should be having exclusive agreements/distributorship. Those companies with high in-degree are likely wholesalers/importers who buy/import fishes from other fishing companies/fishermen. Those companies with high out-degree are likely wholesalers/exporters who sell/export fishes to retailers. Further investigation of the networks are required to detect specific anomalies."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#installing-and-launching-r-packages",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#installing-and-launching-r-packages",
    "title": "Take-home Exercise 3",
    "section": "2.1 Installing and launching R packages",
    "text": "2.1 Installing and launching R packages\nThe code chunk below will be used to install and load the necessary R packages to meet the data preparation, data wrangling, data analysis and visualisation needs.\n\n\nShow the code\npacman::p_load(jsonlite, tidygraph, ggraph, \n               visNetwork, graphlayouts, ggforce, \n               skimr, tidytext, tidyverse, extrafont, knitr, ggtext)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#data-preparation",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#data-preparation",
    "title": "Take-home Exercise 3",
    "section": "2.3 Data Preparation",
    "text": "2.3 Data Preparation\n\n2.3.1 Extracting edges\nThe code chunk below will be used to extract the links data.frame of mc3_data and save it as a tibble data.frame called mc3_edges.\n\n\nShow the code\nmc3_edges <- as_tibble(mc3_data$links) %>% \n  distinct() %>%\n  mutate(source = as.character(source),\n         target = as.character(target),\n         type = as.character(type)) %>%\n  group_by(source, target, type) %>%\n    summarise(weights = n()) %>%\n  filter(source!=target) %>%\n  ungroup()\n\n\n\n\n2.3.2 Extracting nodes\nThe code chunk below will be used to extract the nodes data.frame of mc3_data and save it as a tibble data.frame called mc3_nodes.\n\n\nShow the code\nmc3_nodes <- as_tibble(mc3_data$nodes) %>%\n  mutate(country = as.character(country),\n         id = as.character(id),\n         product_services = as.character(product_services),\n         revenue_omu = as.numeric(as.character(revenue_omu)),\n         type = as.character(type)) %>%\n  select(id, country, type, revenue_omu, product_services)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#exploring-the-edges-data-frame",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#exploring-the-edges-data-frame",
    "title": "Take-home Exercise 3",
    "section": "3.1 Exploring the edges data frame",
    "text": "3.1 Exploring the edges data frame\nIn the code chunk below, skim() of skimr package is used to display the summary statistics of mc3_edges tibble data frame.\n\n\nShow the code\nskim(mc3_edges)\n\n\n\nData summary\n\n\nName\nmc3_edges\n\n\nNumber of rows\n24036\n\n\nNumber of columns\n4\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nsource\n0\n1\n6\n700\n0\n12856\n0\n\n\ntarget\n0\n1\n6\n28\n0\n21265\n0\n\n\ntype\n0\n1\n16\n16\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nweights\n0\n1\n1\n0\n1\n1\n1\n1\n1\n▁▁▇▁▁\n\n\n\n\n\nThe report above reveals that there is not missing values in all fields.\nIn the code chunk below, datatable() of DT package is used to display mc3_edges tibble data frame as an interactive table on the html document.\n\n\nShow the code\nDT::datatable(mc3_edges)\n\n\n\n\n\n\n\nA plot below shows the distribution of variable type in the mc3_edges data table. This variable only consists of Beneficial Owner and Company Contacts. There are much more Beneficial Owners than Company Contacts.\n\n\nShow the code\nggplot(data = mc3_edges,\n       aes(x = type)) +\n  geom_bar() +\n  labs(title = \"Distribution of type in mc3_edges data table\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#initial-network-visualisation-and-analysis",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#initial-network-visualisation-and-analysis",
    "title": "Take-home Exercise 3",
    "section": "3.2 Initial Network Visualisation and Analysis",
    "text": "3.2 Initial Network Visualisation and Analysis\n\n3.2.1 Building network model with tidygraph\n\n\nShow the code\nid1 <- mc3_edges %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- mc3_edges %>%\n  select(target) %>%\n  rename(id = target)\nmc3_nodes1 <- rbind(id1, id2) %>%\n  distinct() %>%\n  left_join(mc3_nodes,\n            unmatched = \"drop\")\n\nmc3_graph <- tbl_graph(nodes = mc3_nodes1,\n                       edges = mc3_edges,\n                       directed = FALSE) %>%\n  mutate(betweenness_centrality = centrality_betweenness(),\n         closeness_centrality = centrality_closeness())\n\nmc3_graph %>%\n  filter(betweenness_centrality >= 100000) %>%\nggraph(layout = \"fr\") +\n  geom_edge_link(aes(alpha=0.5)) +\n  geom_node_point(aes(\n    size = betweenness_centrality,\n    colors = \"lightblue\",\n    alpha = 0.5)) +\n  scale_size_continuous(range=c(1,10))+\n  theme_graph() +\n  labs(title = \"Network model of mc3 data\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#exploring-the-nodes-data-frame",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#exploring-the-nodes-data-frame",
    "title": "Take-home Exercise 3",
    "section": "3.3 Exploring the nodes data frame",
    "text": "3.3 Exploring the nodes data frame\nIn the code chunk below, skim() of skimr package is used to display the summary statistics of mc3_nodes tibble data frame.\n\n\nShow the code\nskim(mc3_nodes)\n\n\n\nData summary\n\n\nName\nmc3_nodes\n\n\nNumber of rows\n27622\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n4\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nid\n0\n1\n6\n64\n0\n22929\n0\n\n\ncountry\n0\n1\n2\n15\n0\n100\n0\n\n\ntype\n0\n1\n7\n16\n0\n3\n0\n\n\nproduct_services\n0\n1\n4\n1737\n0\n3244\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nrevenue_omu\n21515\n0.22\n1822155\n18184433\n3652.23\n7676.36\n16210.68\n48327.66\n310612303\n▇▁▁▁▁\n\n\n\n\n\nThe report above reveals that there is no missing values in all fields.\nIn the code chunk below, datatable() of DT package is used to display mc3_nodes tibble data frame as an interactive table on the html document.\n\n\nShow the code\nDT::datatable(mc3_nodes)\n\n\n\n\n\n\n\nA plot below shows the distribution of variable type in the mc3_nodes data table. This variable consists of Beneficial Owner, Company and Company Contacts. There are more Beneficial Owners than Companies than Company Contacts.\n\n\nShow the code\nggplot(data = mc3_nodes,\n       aes(x = type)) +\n  geom_bar() +\n  labs(title = \"Distribution of type in mc3_nodes data table\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#text-sensing-with-tidytext",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#text-sensing-with-tidytext",
    "title": "Take-home Exercise 3",
    "section": "3.4 Text Sensing with tidytext",
    "text": "3.4 Text Sensing with tidytext\nThis section performs basic text sensing using appropriate functions of tidytext package.\n\n3.4.1 Simple word count\nThis code counts the number of words related to fishing e.g. “fish”, “fishes”, “seafood”, “fishing”, etc. in the product_services column. Before that, we make the characters in product_services all lower case for ease of searching.\n\n\nShow the code\nmc3_nodes <- mc3_nodes %>% \n    mutate_at(.vars = vars(product_services), \n          .funs = funs(tolower)) \n\nmc3_nodesfish <- mc3_nodes %>% \n    mutate(n_fish = str_count(product_services, \"fish|fishes|seafood|fishing|food|salmon|tuna|sea|seafoods\")) \n\n\nA plot of the distribution of nodes with fishing related descriptions in their product services is shown below.\n\n\nShow the code\nggplot(data = mc3_nodesfish,\n       aes(x = n_fish)) +\n  geom_bar() + \n  coord_cartesian(xlim =c(0, 25)) +\n  labs(title = \"Distribution of ids related to fishing activities\", x = \"Number of fishing related words\", y = \"Number of ids\")\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nIt is observed that majority of the nodes are not related to fishing activities.\n\n\n\n\n3.4.2 Tokenisation\nThe word tokenisation have different meaning in different scientific domains. In text sensing, tokenisation is the process of breaking up a given text into units called tokens. Tokens can be individual words, phrases or even whole sentences. In the process of tokenisation, some characters like punctuation marks may be discarded. The tokens usually become the input for the processes like parsing and text mining.\nIn the code chunk below, unnest_token() of tidytext is used to split text in product_services field into words.\n\n\nShow the code\ntoken_nodes <- mc3_nodes %>%\n  unnest_tokens(word, \n                product_services)\n\n\nThe two basic arguments to unnest_tokens() used here are column names. First we have the output column name that will be created as the text is unnested into it (word, in this case), and then the input column that the text comes from (product_services, in this case).\nNext, we visualise the words extracted by using the code chunk below.\n\n\nShow the code\ntoken_nodes %>%\n  count(word, sort = TRUE) %>%\n  top_n(15) %>%\n  mutate(word = reorder(word, n)) %>%\n  ggplot(aes(x = word, y = n)) +\n  geom_col() +\n  xlab(NULL) +\n  coord_flip() +\n      labs(x = \"Count\",\n      y = \"Unique words\",\n      title = \"Count of unique words found in product_services field\")\n\n\n\n\n\nThe bar chart reveals that the unique words contains some words that may not be useful to use e.g. “and” and “of”. We want to remove these words from your analysis as they are fillers used to compose a sentence.\n\n\n3.4.3 Removing stopwords\nUse tidytext package that has a function called stop_words that will help to clean up stop words.\n\n\nShow the code\nstopwords_removed <- token_nodes %>% \n  anti_join(stop_words)\n\nstopwords_removed %>%\n  count(word, sort = TRUE) %>%\n  top_n(15) %>%\n  mutate(word = reorder(word, n)) %>%\n  ggplot(aes(x = word, y = n)) +\n  geom_col() +\n  xlab(NULL) +\n  coord_flip() +\n      labs(x = \"Count\",\n      y = \"Unique words\",\n      title = \"Count of unique words found in product_services field\")\n\n\n\n\n\n\n\n3.4.4 Recode words “character”, “0”, and “unknown” in product_services field to NA\nTo make the data more clean and meaningful, we recode the words “character”, “0”, “unknown” and “related” in product_services field to NA. It is also found that there are words “characters” and characterization”. These are recoded to NA as well.\n\n\nShow the code\nstopwords_removed$word[grepl(\"character|characters|characterization|0|unknown|related\", stopwords_removed$word)]<-\"NA\""
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html",
    "title": "Hands-on Exercise 8",
    "section": "",
    "text": "Show the code\npacman::p_load(sf, tmap, tidyverse)\n\n\n\n\n\n\n\n\n\nShow the code\nmpsz <- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\sherveille\\ISSS608-VAA\\Hands-on_Ex\\Hands-on_Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nShow the code\nmpsz\n\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\n\n\n\n\n\nShow the code\npopdata <- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n\n\n\n\n\n\n\n\n\nShow the code\npopdata2020 <- popdata %>%\n  filter(Time == 2020) %>%\n  group_by(PA, SZ, AG) %>%\n  summarise(`POP` = sum(`Pop`)) %>%\n  ungroup()%>%\n  pivot_wider(names_from=AG, \n              values_from=POP) %>%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %>%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%>%\nmutate(`AGED`=rowSums(.[16:21])) %>%\nmutate(`TOTAL`=rowSums(.[3:21])) %>%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %>%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n\n\n\n\n\n\nShow the code\npopdata2020 <- popdata2020 %>%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = funs(toupper)) %>%\n  filter(`ECONOMY ACTIVE` > 0)\n\nmpsz_pop2020 <- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")\n\n\n\n\n\n\n\n\n\n\n\nShow the code\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\nShow the code\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\n\n\n\n\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\n\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)\n\n\n\n\n\n\n\n\n\n\n\nUsing jenks\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nUsing equal\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nUsing sd\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"sd\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nUsing kmeans\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"kmeans\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nUsing hclust\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"hclust\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nUsing n = 2\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 2,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nUsing n = 6\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nUsing n = 10\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 10,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nUsing n = 20\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 20,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nShow the code\nsummary(mpsz_pop2020$DEPENDENCY)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.1111  0.7147  0.7866  0.8585  0.8763 19.0000      92 \n\n\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\n\n\n\n\n\n\n\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\nShow the code\ntmap_style(\"white\")\n\n\n\n\n\n\n\n\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\n\n\nShow the code\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n\nShow the code\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nShow the code\nyoungmap <- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap <- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\nShow the code\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#installing-and-launching-r-packages-1",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#installing-and-launching-r-packages-1",
    "title": "Hands-on Exercise 8",
    "section": "Installing and launching R packages",
    "text": "Installing and launching R packages\n\n\nShow the code\npacman::p_load(sf, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#geospatial-data-wrangling",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#geospatial-data-wrangling",
    "title": "Hands-on Exercise 8",
    "section": "Geospatial Data Wrangling",
    "text": "Geospatial Data Wrangling\n\nData Import and Preparation\n\n\nShow the code\nsgpools <- read_csv(\"data/aspatial/SGPools_svy21.csv\")\n\nlist(sgpools) \n\n\n[[1]]\n# A tibble: 306 × 7\n   NAME           ADDRESS POSTCODE XCOORD YCOORD `OUTLET TYPE` `Gp1Gp2 Winnings`\n   <chr>          <chr>      <dbl>  <dbl>  <dbl> <chr>                     <dbl>\n 1 Livewire (Mar… 2 Bayf…    18972 30842. 29599. Branch                        5\n 2 Livewire (Res… 26 Sen…    98138 26704. 26526. Branch                       11\n 3 SportsBuzz (K… Lotus …   738078 20118. 44888. Branch                        0\n 4 SportsBuzz (P… 1 Sele…   188306 29777. 31382. Branch                       44\n 5 Prime Serango… Blk 54…   552542 32239. 39519. Branch                        0\n 6 Singapore Poo… 1A Woo…   731001 21012. 46987. Branch                        3\n 7 Singapore Poo… Blk 64…   370064 33990. 34356. Branch                       17\n 8 Singapore Poo… Blk 88…   370088 33847. 33976. Branch                       16\n 9 Singapore Poo… Blk 30…   540308 33910. 41275. Branch                       21\n10 Singapore Poo… Blk 20…   560202 29246. 38943. Branch                       25\n# ℹ 296 more rows\n\n\n\n\nCreating a sf data frame from an aspatial data frame\n\n\nShow the code\nsgpools_sf <- st_as_sf(sgpools, \n                       coords = c(\"XCOORD\", \"YCOORD\"),\n                       crs= 3414)\n\nlist(sgpools_sf)\n\n\n[[1]]\nSimple feature collection with 306 features and 5 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 7844.194 ymin: 26525.7 xmax: 45176.57 ymax: 47987.13\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 306 × 6\n   NAME                         ADDRESS POSTCODE `OUTLET TYPE` `Gp1Gp2 Winnings`\n * <chr>                        <chr>      <dbl> <chr>                     <dbl>\n 1 Livewire (Marina Bay Sands)  2 Bayf…    18972 Branch                        5\n 2 Livewire (Resorts World Sen… 26 Sen…    98138 Branch                       11\n 3 SportsBuzz (Kranji)          Lotus …   738078 Branch                        0\n 4 SportsBuzz (PoMo)            1 Sele…   188306 Branch                       44\n 5 Prime Serangoon North        Blk 54…   552542 Branch                        0\n 6 Singapore Pools Woodlands C… 1A Woo…   731001 Branch                        3\n 7 Singapore Pools 64 Circuit … Blk 64…   370064 Branch                       17\n 8 Singapore Pools 88 Circuit … Blk 88…   370088 Branch                       16\n 9 Singapore Pools Anchorvale … Blk 30…   540308 Branch                       21\n10 Singapore Pools Ang Mo Kio … Blk 20…   560202 Branch                       25\n# ℹ 296 more rows\n# ℹ 1 more variable: geometry <POINT [m]>"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-proportional-symbol-map",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-proportional-symbol-map",
    "title": "Hands-on Exercise 8",
    "section": "Drawing Proportional Symbol Map",
    "text": "Drawing Proportional Symbol Map\n\n\nShow the code\ntmap_mode(\"view\")\n\n\n\nIt all started with an interactive point symbol map\n\n\nShow the code\ntm_shape(sgpools_sf)+\ntm_bubbles(col = \"red\",\n           size = 1,\n           border.col = \"black\",\n           border.lwd = 1)\n\n\n\n\n\n\n\n\n\nLets make it proportional\n\n\nShow the code\ntm_shape(sgpools_sf)+\ntm_bubbles(col = \"red\",\n           size = \"Gp1Gp2 Winnings\",\n           border.col = \"black\",\n           border.lwd = 1)\n\n\n\n\n\n\n\n\n\nLets give it a different colour\n\n\nShow the code\ntm_shape(sgpools_sf)+\ntm_bubbles(col = \"OUTLET TYPE\", \n          size = \"Gp1Gp2 Winnings\",\n          border.col = \"black\",\n          border.lwd = 1)\n\n\n\n\n\n\n\n\n\nI have a twin brother\n\n\nShow the code\ntm_shape(sgpools_sf) +\n  tm_bubbles(col = \"OUTLET TYPE\", \n          size = \"Gp1Gp2 Winnings\",\n          border.col = \"black\",\n          border.lwd = 1) +\n  tm_facets(by= \"OUTLET TYPE\",\n            nrow = 1,\n            sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#installing-and-loading-packages",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#installing-and-loading-packages",
    "title": "Hands-on Exercise 8",
    "section": "Installing and loading packages",
    "text": "Installing and loading packages\n\n\nShow the code\npacman::p_load(sf, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#importing-data",
    "title": "Hands-on Exercise 8",
    "section": "Importing data",
    "text": "Importing data\n\n\nShow the code\nNGA_wp <- read_rds(\"data/rds/NGA_wp.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#basic-choropleth-mapping",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#basic-choropleth-mapping",
    "title": "Hands-on Exercise 8",
    "section": "Basic Choropleth Mapping",
    "text": "Basic Choropleth Mapping\n\nVisualising distribution of non-functional water point\n\n\nShow the code\np1 <- tm_shape(NGA_wp) +\n  tm_fill(\"wp_functional\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\") +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Distribution of functional water point by LGAs\",\n            legend.outside = FALSE)\n\n\n\n\nShow the code\np2 <- tm_shape(NGA_wp) +\n  tm_fill(\"total_wp\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\") +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Distribution of total  water point by LGAs\",\n            legend.outside = FALSE)\n\n\n\n\nShow the code\ntmap_arrange(p2, p1, nrow = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#choropleth-map-for-rates",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#choropleth-map-for-rates",
    "title": "Hands-on Exercise 8",
    "section": "Choropleth Map for Rates",
    "text": "Choropleth Map for Rates\n\nDeriving Proportion of Functional Water Points and Non-Functional Water Points\n\n\nShow the code\nNGA_wp <- NGA_wp %>%\n  mutate(pct_functional = wp_functional/total_wp) %>%\n  mutate(pct_nonfunctional = wp_nonfunctional/total_wp)\n\n\n\n\nPlotting map of rate\n\n\nShow the code\ntm_shape(NGA_wp) +\n  tm_fill(\"pct_functional\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\",\n          legend.hist = TRUE) +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Rate map of functional water point by LGAs\",\n            legend.outside = TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#extreme-value-maps",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#extreme-value-maps",
    "title": "Hands-on Exercise 8",
    "section": "Extreme Value Maps",
    "text": "Extreme Value Maps\n\nPercentile Map\n\nData Preparation\n\n\nShow the code\nNGA_wp <- NGA_wp %>%\n  drop_na()\n\n\n\n\nShow the code\npercent <- c(0,.01,.1,.5,.9,.99,1)\nvar <- NGA_wp[\"pct_functional\"] %>%\n  st_set_geometry(NULL)\nquantile(var[,1], percent)\n\n\n       0%        1%       10%       50%       90%       99%      100% \n0.0000000 0.0000000 0.2169811 0.4791667 0.8611111 1.0000000 1.0000000 \n\n\n\n\nCreating the get.var function\n\n\nShow the code\nget.var <- function(vname,df) {\n  v <- df[vname] %>% \n    st_set_geometry(NULL)\n  v <- unname(v[,1])\n  return(v)\n}\n\n\n\n\nA percentile mapping function\n\n\nShow the code\npercentmap <- function(vnam, df, legtitle=NA, mtitle=\"Percentile Map\"){\n  percent <- c(0,.01,.1,.5,.9,.99,1)\n  var <- get.var(vnam, df)\n  bperc <- quantile(var, percent)\n  tm_shape(df) +\n  tm_polygons() +\n  tm_shape(df) +\n     tm_fill(vnam,\n             title=legtitle,\n             breaks=bperc,\n             palette=\"Blues\",\n          labels=c(\"< 1%\", \"1% - 10%\", \"10% - 50%\", \"50% - 90%\", \"90% - 99%\", \"> 99%\"))  +\n  tm_borders() +\n  tm_layout(main.title = mtitle, \n            title.position = c(\"right\",\"bottom\"))\n}\n\n\n\n\nTest drive the percentile mapping function\n\n\nShow the code\npercentmap(\"total_wp\", NGA_wp)\n\n\n\n\n\n\n\n\nBox map\n\n\nShow the code\nggplot(data = NGA_wp,\n       aes(x = \"\",\n           y = wp_nonfunctional)) +\n  geom_boxplot()\n\n\n\n\n\n\nCreating the boxbreaks function\n\n\nShow the code\nboxbreaks <- function(v,mult=1.5) {\n  qv <- unname(quantile(v))\n  iqr <- qv[4] - qv[2]\n  upfence <- qv[4] + mult * iqr\n  lofence <- qv[2] - mult * iqr\n  # initialize break points vector\n  bb <- vector(mode=\"numeric\",length=7)\n  # logic for lower and upper fences\n  if (lofence < qv[1]) {  # no lower outliers\n    bb[1] <- lofence\n    bb[2] <- floor(qv[1])\n  } else {\n    bb[2] <- lofence\n    bb[1] <- qv[1]\n  }\n  if (upfence > qv[5]) { # no upper outliers\n    bb[7] <- upfence\n    bb[6] <- ceiling(qv[5])\n  } else {\n    bb[6] <- upfence\n    bb[7] <- qv[5]\n  }\n  bb[3:5] <- qv[2:4]\n  return(bb)\n}\n\n\n\n\nCreating the get.var function\n\n\nShow the code\nget.var <- function(vname,df) {\n  v <- df[vname] %>% st_set_geometry(NULL)\n  v <- unname(v[,1])\n  return(v)\n}\n\n\n\n\nTest drive the newly created function\n\n\nShow the code\nvar <- get.var(\"wp_nonfunctional\", NGA_wp) \nboxbreaks(var)\n\n\n[1] -56.5   0.0  14.0  34.0  61.0 131.5 278.0\n\n\n\n\nBoxmap function\n\n\nShow the code\nboxmap <- function(vnam, df, \n                   legtitle=NA,\n                   mtitle=\"Box Map\",\n                   mult=1.5){\n  var <- get.var(vnam,df)\n  bb <- boxbreaks(var)\n  tm_shape(df) +\n    tm_polygons() +\n  tm_shape(df) +\n     tm_fill(vnam,title=legtitle,\n             breaks=bb,\n             palette=\"Blues\",\n          labels = c(\"lower outlier\", \n                     \"< 25%\", \n                     \"25% - 50%\", \n                     \"50% - 75%\",\n                     \"> 75%\", \n                     \"upper outlier\"))  +\n  tm_borders() +\n  tm_layout(main.title = mtitle, \n            title.position = c(\"left\",\n                               \"top\"))\n}\n\n\n\n\nShow the code\ntmap_mode(\"plot\")\nboxmap(\"wp_nonfunctional\", NGA_wp)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#identify-anomalies-in-the-business-groups",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#identify-anomalies-in-the-business-groups",
    "title": "Take-home Exercise 3",
    "section": "3.5 Identify anomalies in the business groups",
    "text": "3.5 Identify anomalies in the business groups\n\n3.5.1 Data preparation\n\n3.5.1.1 Unlist source column of mc3_edges data table\nWe observed there are lists in the source column of mc3_edges data table. To clean up the list, we first segregate out rows with lists from the mc3_edges data table into a separate mc3_edges_wlist data table.\n\n\nShow the code\nmc3_edges_nolist <- mc3_edges %>% \n  filter(!grepl('c(', source, fixed = TRUE))\n\nmc3_edges_wlist <- mc3_edges %>% \n  filter(grepl('c(', source, fixed = TRUE))\n\n\nAs the source column is in chr format, we unlist the lists in source column of mc3_edges_wlist data table by removing characters “c(” and “)” and split the elements by “,” using str R package. Then, we remove any duplicate names using lapply. Next, we use the unnest_longer function to separate the elements into new rows.\n\n\nShow the code\nmc3_edges_wlist$source <- str_replace_all(mc3_edges_wlist$source, \"c\\\\(|\\\\)|\\\"\", \"\") \n\nmc3_edges_wlist$source <- str_split(mc3_edges_wlist$source, \", \") \n\nmc3_edges_wlist$source <- lapply(mc3_edges_wlist$source, unique)\n\nmc3_edges_wlist <- mc3_edges_wlist %>%\n  unnest_longer(source) %>%\n  distinct()\n\n\nLastly, we merge back the rows with the original mc3_edges data table (less the list) to form the cleaned edges data table.\n\n\nShow the code\nmc3_edges_cleaned <- rbind(mc3_edges_nolist, mc3_edges_wlist) %>%\n  distinct()\n\n\n\n\n3.5.1.2 Create new mc3_nodes data table\nNow that we have a cleaned mc3 edges data table, we will use this to create a new nodes data table to ensure all sources and targets are captured in the nodes data table to facilitate accurate development and analysis of network graphs later.\nWe want to extract the source and target from the mc3_edges_cleaned data table and left join stopwords_removed nodes data table to form the new nodes table.\nWe first take a look at the stopwords_removed nodes data table. We observed there are duplicate ids, some of which having same id but different country. We want to combine those duplicate ids to remove duplication. This can be done by grouping by id and type and using the summarise function to concatenate the country and word. For revenue_omu, we take the median value as taking the sum may not be comparative to other single id nodes. Then, we use str_split function to split the characters by ” , ” and then use lapply to ensure no duplicates in each field of country column.\n\n\nShow the code\nmc3_nodesclean <- stopwords_removed %>%\n  group_by(id, type) %>%\n  summarise(country = paste(country, collapse = \" , \"), revenue_omu = median(revenue_omu), word = paste(word, collapse = \" , \")) %>%\n  ungroup()\n\nmc3_nodesclean$country <- str_split(mc3_nodesclean$country, \" , \") \nmc3_nodesclean$country <- lapply(mc3_nodesclean$country, unique)\n\nmc3_nodesclean <- mc3_nodesclean %>%\n  select(id, country, revenue_omu, word)\n\n\nThen, we look at the mc3_nodes_cleaned data table. We observed that the source in mc3_nodes_cleaned data table are all companies while the target are people’s names, which are aligned to type that comprises Beneficial Owner and Company Contacts. As such, we can safely assume that type belongs to target.\nWe extract the source (and create a new column type and name it as “Company”) and also extract target from the mc3_edges_cleaned data table and left join mc3_nodesclean data table to form the new nodes table.\n\n\nShow the code\nid3 <- mc3_edges_cleaned %>%\n  select(source) %>%\n  rename(id = source) %>%\n  mutate(type = \"Company\")\n\nid4 <- mc3_edges_cleaned %>%\n  select(target, type) %>%\n  rename(id = target)\n\nmc3_nodes_cleaned <- rbind(id3, id4) %>%\n  distinct() %>%\n  left_join(mc3_nodesclean, by=c(\"id\" = \"id\"),\n            unmatched = \"drop\") %>%\n    mutate_at(.vars = vars(word), \n          .funs = funs(tolower)) \n\nmc3_graphcleaned <- tbl_graph(nodes = mc3_nodes_cleaned,\n                       edges = mc3_edges_cleaned,\n                       directed = FALSE) %>%\n  mutate(betweenness_centrality = centrality_betweenness(),\n         closeness_centrality = centrality_closeness())\n\n\nWe are now ready to analyse the following relationships:\n\nCompany (source) and Beneficial Owner (target)\nCompany (source) and Company Contacts (target)\n\n:::\n\n\n\n3.5.2 Visualization of distribution of Company ownership by Beneficial Owner\nWe want to check the frequency distribution of Company ownership by Beneficial Owner.\nFirst, select edges where source type = Company and target_type = Beneficial Owner. Count number of duplicated target i.e. Beneficial Owner to find out how many companies are owned by the Beneficial Owner. Then plot the distribution.\n\n\nShow the code\nmc3_edges_cb <- mc3_edges_cleaned %>%\n  filter(type == \"Beneficial Owner\") %>%\n    add_count(target) #This adds a column (n) to the table indicating the number of companies linked to the target. \n\nggplot(data = mc3_edges_cb,\n       aes(x = n)) +\n  geom_bar() +\n  labs(title = \"Distribution of Number of Companies Owned by Beneficial Owner\", x = \"Number of Companies Owned\", y = \"Number of Beneficial Owners\")\n\n\n\n\n\nShow the code\nkable(head(mc3_edges_cb %>%\n        arrange(desc(n)) %>%\n  as_tibble(), 10))\n\n\n\n\n\n\n\n\n\n\n\n\nsource\ntarget\ntype\nweights\nn\n\n\n\n\nAdams Group\nJohn Smith\nBeneficial Owner\n1\n11\n\n\nFaroe Islands Company World\nJohn Smith\nBeneficial Owner\n1\n11\n\n\nGuzman-Chang\nJohn Smith\nBeneficial Owner\n1\n11\n\n\nPeterson PLC\nJohn Smith\nBeneficial Owner\n1\n11\n\n\nRyan-Curry\nJohn Smith\nBeneficial Owner\n1\n11\n\n\nThe Salted Pearl Inc Pelican\nJohn Smith\nBeneficial Owner\n1\n11\n\n\nhǎi zhé Herring Incorporated Logistics\nJohn Smith\nBeneficial Owner\n1\n11\n\n\nBeachcombers Nautical Plc Carriers\nJohn Smith\nBeneficial Owner\n1\n11\n\n\nSeaSplash Foods Corporation Freight\nJohn Smith\nBeneficial Owner\n1\n11\n\n\nKerala Market Oyj Freight\nJohn Smith\nBeneficial Owner\n1\n11\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nIt is observed that majority of the Beneficial Owners own only 1 company, which is normal. However, a minority of them own more than 4 companies. For example, John Smith owns the most companies (11). This is rather suspicious and should be investigated further.\n\n\n\n\n3.5.3 Visualization of relationship between Company and Beneficial Owner using network graph\n\n3.5.3.1 Analysis of Beneficial Owners with more than 4 companies\nFirst, we form new nodes data table by using source and target of the edges data table. This is to ensure that the nodes in nodes data tables include all the source and target values. Group_component <10 is used to identify the prominent communities.\n\n\nShow the code\nmc3_edges_cb4 <- mc3_edges_cb %>%\n  filter(n>4)\n\nid7 <- mc3_edges_cb4 %>%\n  select(source) %>%\n  rename(id = source)\nid8 <- mc3_edges_cb4 %>%\n  select(target) %>%\n  rename(id = target)\nmc3_nodes_cb4 <- rbind(id7, id8) %>%\n  distinct() %>%\n  left_join(mc3_nodes_cleaned, by=c(\"id\" = \"id\"),\n            unmatched = \"drop\") %>%\n  filter(type %in% c(\"Company\", \"Beneficial Owner\"))\n\nmc3_graph_cb4 <- tbl_graph(nodes = mc3_nodes_cb4,\n                       edges = mc3_edges_cb4,\n                       directed = FALSE) \n\nmc3_graph_cb4 <- mc3_graph_cb4 %>%\n  activate(\"nodes\") %>%\n  mutate(group = group_components()) %>%\n  filter(group < 10) \n\nedges_cb4_df <- mc3_graph_cb4 %>%\n  activate(edges) %>%\n  as_tibble()\n\nnodes_cb4_df <- mc3_graph_cb4 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label, group)\n\n\n\n\nShow the code\nvisNetwork(nodes_cb4_df,\n           edges_cb4_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visEdges(smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nFrom the above graph, we can see that John Smith owns 11 companies. We extract info of the companies owned by John Smith and can only ascertain that one of them (Adams Group) is related to fishing activities. Beachcombers Nautical Plc Carriers is into products, mail, houses activities and it has an exceptionally high revenue_omu of 9891666.673. The rest has no info.\n\n\nShow the code\nmc3_nodes_cb4 %>%\n  filter(id %in% c(\"Adams Group\", \"Faroe Islands Company World\", \"Guzman-Chang\", \"Peterson PLC\", \"Ryan-Curry\", \"The Salted Pearl Inc Pelican\", \"hǎi zhé Herring Incorporated Logistics\", \"Beachcombers Nautical Plc Carriers\", \"SeaSplash Foods Corporation Freight\", \"Kerala Market Oyj Freight\", \"Oka S.A. de C.V.\"))\n\n\n# A tibble: 10 × 5\n   id                                     type    country   revenue_omu word    \n   <chr>                                  <chr>   <list>          <dbl> <chr>   \n 1 Adams Group                            Company <chr [1]>         NA  na , na…\n 2 Adams Group                            Company <chr [1]>       9056. range ,…\n 3 Adams Group                            Company <chr [1]>         NA  na , na…\n 4 Guzman-Chang                           Company <NULL>            NA  <NA>    \n 5 Peterson PLC                           Company <NULL>            NA  <NA>    \n 6 Ryan-Curry                             Company <NULL>            NA  <NA>    \n 7 The Salted Pearl Inc Pelican           Company <chr [1]>       8619. na      \n 8 hǎi zhé Herring Incorporated Logistics Company <chr [1]>       4767. na      \n 9 Beachcombers Nautical Plc Carriers     Company <chr [1]>    9891667. product…\n10 SeaSplash Foods Corporation Freight    Company <NULL>            NA  <NA>    \n\n\nThe 2nd Beneficial Owner who owns most companies (9) is Michael Johnson. We extract info of the companies owned by him and can only ascertain that of the 9 companies, only one of them (Baker and Sons) is related to fishing activities and which has significantly high revenue_omu of 104095830. SeaBass Leska N.V. International is in milling business. The rest has no info.\n\n\nShow the code\nmc3_nodes_cb4 %>%\n  filter(id %in% c(\"Baker and Sons\", \"Chen, Jones and Davis\", \"Hancock Inc\", \"Jones, Kennedy and Johnson\", \"Knight-Brown\", \"Miller, Wiggins and Smith\", \"SeaBass  Leska N.V. International\", \"Seashell Seekers ОАО International\", \"Thompson LLC\"))\n\n\n# A tibble: 11 × 5\n   id                                 type    country   revenue_omu word        \n   <chr>                              <chr>   <list>          <dbl> <chr>       \n 1 Baker and Sons                     Company <chr [1]>         NA  na , na , n…\n 2 Baker and Sons                     Company <chr [1]>  104095830. fish , fres…\n 3 Chen, Jones and Davis              Company <NULL>            NA  <NA>        \n 4 Hancock Inc                        Company <NULL>            NA  <NA>        \n 5 Jones, Kennedy and Johnson         Company <NULL>            NA  <NA>        \n 6 Knight-Brown                       Company <NULL>            NA  <NA>        \n 7 Miller, Wiggins and Smith          Company <NULL>            NA  <NA>        \n 8 SeaBass  Leska N.V. International  Company <chr [1]>     106543. vertical , …\n 9 Seashell Seekers ОАО International Company <chr [1]>       7926. na          \n10 Thompson LLC                       Company <chr [1]>         NA  na , na , n…\n11 Thompson LLC                       Company <chr [1]>         NA  na , na , n…\n\n\nThe 3rd Beneficial Owner who owns most companies (8) is Jennifer Smith. We extract info of the companies owned by her and observed that of the 8 companies, only Mar del Oeste - and Dutch Mussels S.p.A. Sea spray are related to fishing activities. Luangwa River Limited Liability Company Holdings is in chemicals business while Mar de Cristal ОАО is in dairy product business. The rest has no info.\n\n\nShow the code\nmc3_nodes_cb4 %>%\n  filter(id %in% c(\"Cortez Group\", \"Hamilton LLC\", \"Luangwa River   Limited Liability Company Holdings\", \"Mar de Coral GmbH and Son's\", \"Mar de Cristal ОАО\", \"Mar del Oeste -\", \"Dutch Mussels S.p.A. Sea spray\", \"Maacama  S.p.A. Marine ecology\"))\n\n\n# A tibble: 9 × 5\n  id                                             type  country revenue_omu word \n  <chr>                                          <chr> <list>        <dbl> <chr>\n1 Cortez Group                                   Comp… <chr>           NA  na ,…\n2 Cortez Group                                   Comp… <chr>           NA  na ,…\n3 Hamilton LLC                                   Comp… <chr>           NA  na ,…\n4 Luangwa River   Limited Liability Company Hol… Comp… <chr>           NA  chem…\n5 Mar de Coral GmbH and Son's                    Comp… <chr>         9726. na   \n6 Mar de Cristal ОАО                             Comp… <chr>        30027. flui…\n7 Mar del Oeste -                                Comp… <chr>        57148. salm…\n8 Dutch Mussels S.p.A. Sea spray                 Comp… <chr>       168248. gela…\n9 Maacama  S.p.A. Marine ecology                 Comp… <chr>         8996. na   \n\n\nNext, we observed a rather large community where 3 companies seem to be of high betweenness centrality. They are namely:\n\nBlueTide GmbH & Co. KG - in fabrication and metal products business\nWest Fish GmbH Transport - in veneer and wood business\nMar del Oeste - - in legit fishing business\n\nThese 3 companies are all owned by Jessica Brown, who owned a total of 5 companies. BlueTide GmbH & Co. KG is owned by David Thomas, Mar del Oeste is owned by Jennifer Smith and West Fish GmbH Transport is owned by Michael Miller. We will investigate further in below section when we examine the betweenness centrality between Company and Beneficial Owners.\n\n\nShow the code\nmc3_nodes_cb4 %>%\n  filter(id %in% c(\"BlueTide GmbH & Co. KG\", \"West Fish  GmbH Transport\", \"Mar del Oeste -\"))\n\n\n# A tibble: 3 × 5\n  id                        type    country   revenue_omu word                  \n  <chr>                     <chr>   <list>          <dbl> <chr>                 \n1 BlueTide GmbH & Co. KG    Company <chr [1]>      24731. fabricated , metal , …\n2 Mar del Oeste -           Company <chr [1]>      57148. salmon , products     \n3 West Fish  GmbH Transport Company <chr [1]>      13627. veneer , sheets , woo…\n\n\n\n\n\n\n3.5.3.2 Analysis of Beneficial Owners by betweenness centrality (tidygraph)\nCentrality Betweenness is a way of detecting the amount of influence a node has over the flow of information in a graph. It finds nodes that serve as a bridge from one part of a graph to another and measures the shortest paths between all pairs of nodes in a graph. A node with higher betweenness centrality would have more control over the network.\nFirst, we form new nodes data table by using source and target of the edges data table. This is to ensure that the nodes in nodes data tables include all the source and target values.\n\n\nShow the code\nid5 <- mc3_edges_cb %>%\n  select(source) %>%\n  rename(id = source)\nid6 <- mc3_edges_cb %>%\n  select(target) %>%\n  rename(id = target)\nmc3_nodes_cb <- rbind(id5, id6) %>%\n  distinct() %>%\n  left_join(mc3_nodes_cleaned, by=c(\"id\" = \"id\"),\n            unmatched = \"drop\") %>%\n  filter(type %in% c(\"Company\", \"Beneficial Owner\"))\n\nmc3_graph_cb <- tbl_graph(nodes = mc3_nodes_cb,\n                       edges = mc3_edges_cb,\n                       directed = FALSE) %>%\n  mutate(betweenness_centrality = centrality_betweenness(),\n         closeness_centrality = centrality_closeness())\n\n\nWe bin the betweenness centrality of the nodes for ease of visualization using VisNetwork later.\nDue to the large data size, we filter data with betweenness > 500000 and community group < 10. Group_component is used to identify the prominent communities.\n\n\nShow the code\nmc3_graph_cbcb <- mc3_graph_cb %>%\n  activate(\"nodes\") %>%\n  mutate(group = cut(betweenness_centrality, breaks = c(0, 1000000, 2000000, 3000000, Inf),\n                       labels = c(\"1\\n(0-999999)\", \n                                  \"2\\n(1000000-1999999)\", \n                                  \"3\\n(2000000-2999999)\",\n                                  \"4\\n(>=3000000)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  arrange(desc(betweenness_centrality)) %>%\n  filter(betweenness_centrality > 500000) %>%\n  mutate(group1 = group_components()) %>%\n  filter(group1 < 10) \n\nmc3_graph_cbcb <- mc3_graph_cbcb %>%\n  activate(\"edges\") %>%\n  mutate(importance = centrality_edge_betweenness()) \n\n\nThe network graph showing the relationship between Company and Beneficial Owner is plotted.\n\n\nShow the code\nset.seed(1234)\nggraph(mc3_graph_cbcb, \n            layout = \"stress\") +\n  geom_edge_link(aes(colour = importance), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = betweenness_centrality, colour = factor(group1))) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Betweenness Centrality Network Between Company and Beneficial Owner\")\n\n\n\n\n\nShow the code\nkable(head(mc3_graph_cbcb %>%\n             activate(\"nodes\") %>%\n             as_tibble(), 10))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ntype\ncountry\nrevenue_omu\nword\nbetweenness_centrality\ncloseness_centrality\ngroup\ngroup1\n\n\n\n\nSenegal Coast Ltd. Liability Co\nCompany\nOceanus\nNA\nna\n3399060\n2.09e-05\n4\n\n\n\n(>=3000000)\n1\n\n\n\n\n\n\n\n\n\nJessica Brown\nBeneficial Owner\nNULL\nNA\nNA\n2793321\n1.95e-05\n3\n\n\n\n(2000000-2999999)\n1\n\n\n\n\n\n\n\n\n\nOcean Observers Marine mist\nCompany\nPuerto Sol\n39678.54\ntransportation , na , services\n2691699\n1.86e-05\n3\n\n\n\n(2000000-2999999)\n1\n\n\n\n\n\n\n\n\n\nBlueTide GmbH & Co. KG\nCompany\nAzurionix\n24730.50\nfabricated , metal , products\n2542636\n1.86e-05\n3\n\n\n\n(2000000-2999999)\n1\n\n\n\n\n\n\n\n\n\nDavid Thomas\nBeneficial Owner\nNULL\nNA\nNA\n2500803\n1.77e-05\n3\n\n\n\n(2000000-2999999)\n1\n\n\n\n\n\n\n\n\n\nDutch Oyster Sagl Cruise ship\nCompany\nMarebak\n62913.42\nimport , export , textiles , knitwear , raw , materials\n2483222\n1.84e-05\n3\n\n\n\n(2000000-2999999)\n1\n\n\n\n\n\n\n\n\n\nCongo Rapids Ltd. Corporation\nCompany\nBrindivaria\n90386.21\nchildren’s , accessories , desk , accessories , dry , erase , cleaners , dry , erase , erasers , art , pencils , accessories , art , drawing , products , erasers , highlighters , liquid , paper , corrections , markers , transparency , markers , pencils , refills , pens , presentation , products , sets , kits , hon , atlantic , salmon , hg , atlantic , salmon , fresh , atlantic , fillet , frozen , trim , iqf , atlantic , fillet , trim , ivp , atlantic , frozen , fillet , hg , coho , salmon , vacuum , portions , atlantic , salmon , skin\n2468986\n2.12e-05\n3\n\n\n\n(2000000-2999999)\n1\n\n\n\n\n\n\n\n\n\nMatthew Reynolds\nBeneficial Owner\nNULL\nNA\nNA\n2399894\n1.97e-05\n3\n\n\n\n(2000000-2999999)\n1\n\n\n\n\n\n\n\n\n\nJennifer Smith\nBeneficial Owner\nNULL\nNA\nNA\n2344093\n1.97e-05\n3\n\n\n\n(2000000-2999999)\n1\n\n\n\n\n\n\n\n\n\nNiger Bend AS Express\nCompany\nPuerto Sol\n613590.73\ncruise , ship , holidays\n2295423\n2.01e-05\n3\n\n\n\n(2000000-2999999)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nThe following configurations should be noted before we interpret the graphs:\n\nNode size is set to betweenness centrality\nNode colour is set to community group\nEdge width is set to number of companies\nEdge colour is set to centrality_edge_betweenness\n\nIt is observed that the top 5 ids with highest betweenness centrality are:\n\nSenegal Coast Ltd. Liability Co\nJessica Brown\nOcean Observers Marine mist\nBlueTide GmbH & Co. KG\nDavid Thomas\n\nThis means that the above companies/beneficial owners have higher control over the network. However, from the data table, there is no info on the type of services that Senegal Coast Ltd. Liability Co provides while the other 2 companies are not related to fishing activities. Ocean Observers Marine mist is into transportation while BlueTide GmbH & Co. KG is into fabrication and metal products. Following down the list, we observed that only Congo Rapids Ltd. Corporation is related to fishing activities.\nIt is also observed that although John Smith owns the most number of companies, he does not have as high betweenness centrality i.e. control over the network as compared to other owners who own fewer companies.\nThe graph did not reflect all the links e.g. although John Smith owns the most companies, this graph only shows 2. This could be due to companies with betweenness <= 500000 being removed before plotting the graph.\n\n\nIn the next step, we plot the interactive graph using VisNetwork to better visualize who are the beneficial owners of the non-fishing companies.\n\n\n3.5.3.3 Analysis of Beneficial Owners by betweenness centrality (VisNetwork)\n\n\nShow the code\nedges_cbcb_df <- mc3_graph_cbcb %>%\n  activate(edges) %>%\n  as_tibble()\n\nnodes_cbcb_df <- mc3_graph_cbcb %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label, group)\n\n\n\n\nShow the code\nvisNetwork(nodes_cbcb_df,\n           edges_cbcb_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visEdges(smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nThe different colour groups represent the different range of betweenness centrality with blue having the highest range, which Senegal Coast Ltd. Liability Co fall into.\nAs earlier mentioned, the graph did not reflect all the links. This could be due to companies with betweenness <= 500000 being removed before plotting the graph.\nSenegal Coast Ltd. Liability Co has the highest betweenness centrality. We extract the company from the edges table and found that it is owned by 22 people, although the graph only showed 4 links. The other 18 people should have betweenness centrality <=500000 and therefore were not shown. We only know it is from Oceanus, but there is no info on its revenue_omu and product services. As such, no findings can be drawn. But this company is highly suspicious as it does not make sense for it to have so many owners.\n\n\nShow the code\nmc3_edges_cb %>%\n  filter(source == \"Senegal Coast  Ltd. Liability Co\")\n\n\n# A tibble: 22 × 5\n   source                           target              type       weights     n\n   <chr>                            <chr>               <chr>        <int> <int>\n 1 Senegal Coast  Ltd. Liability Co Amanda West         Beneficia…       1     1\n 2 Senegal Coast  Ltd. Liability Co Angela Ward         Beneficia…       1     2\n 3 Senegal Coast  Ltd. Liability Co Ashlee Campbell     Beneficia…       1     1\n 4 Senegal Coast  Ltd. Liability Co Brooke Lawson       Beneficia…       1     1\n 5 Senegal Coast  Ltd. Liability Co Carlos Harrell      Beneficia…       1     1\n 6 Senegal Coast  Ltd. Liability Co Daniel Davis        Beneficia…       1     3\n 7 Senegal Coast  Ltd. Liability Co Emily Marshall      Beneficia…       1     1\n 8 Senegal Coast  Ltd. Liability Co Erica Sanchez       Beneficia…       1     1\n 9 Senegal Coast  Ltd. Liability Co Erin Alvarez        Beneficia…       1     1\n10 Senegal Coast  Ltd. Liability Co Francisco Singleton Beneficia…       1     1\n# ℹ 12 more rows\n\n\n\n\nShow the code\nmc3_nodes_cb %>%\n  filter(id == \"Senegal Coast  Ltd. Liability Co\")\n\n\n# A tibble: 1 × 5\n  id                               type    country   revenue_omu word \n  <chr>                            <chr>   <list>          <dbl> <chr>\n1 Senegal Coast  Ltd. Liability Co Company <chr [1]>          NA na   \n\n\nJessica Brown is the 2nd highest in betweenness centrality and she owns 5 companies as we can see from the table below.\n\n\nShow the code\nmc3_edges_cb %>%\n  filter(target == \"Jessica Brown\")\n\n\n# A tibble: 5 × 5\n  source                    target        type             weights     n\n  <chr>                     <chr>         <chr>              <int> <int>\n1 Bauer-Taylor              Jessica Brown Beneficial Owner       1     5\n2 BlueTide GmbH & Co. KG    Jessica Brown Beneficial Owner       1     5\n3 Mar del Oeste -           Jessica Brown Beneficial Owner       1     5\n4 Mcintyre-White            Jessica Brown Beneficial Owner       1     5\n5 West Fish  GmbH Transport Jessica Brown Beneficial Owner       1     5\n\n\nWe extract the company info and observed that only Mar del Oeste - is related to fishing activities. The other 4 companies have either no info or are doing other businesses (metal/wood and veneer). Mar del Oeste -has much higher revenue_omu as compared to the other 4 companies.\n\n\nShow the code\nmc3_nodes_cb %>%\n  filter(id %in% c(\"Bauer-Taylor\", \"BlueTide GmbH & Co. KG\", \"Mar del Oeste -\", \"Mcintyre-White\", \"West Fish  GmbH Transport\"))\n\n\n# A tibble: 5 × 5\n  id                        type    country   revenue_omu word                  \n  <chr>                     <chr>   <list>          <dbl> <chr>                 \n1 Bauer-Taylor              Company <NULL>            NA  <NA>                  \n2 BlueTide GmbH & Co. KG    Company <chr [1]>      24731. fabricated , metal , …\n3 Mar del Oeste -           Company <chr [1]>      57148. salmon , products     \n4 Mcintyre-White            Company <NULL>            NA  <NA>                  \n5 West Fish  GmbH Transport Company <chr [1]>      13627. veneer , sheets , woo…\n\n\nThe 3rd highest in betweenness centrality is Ocean Observers Marine mist which is owned by 24 people. It is in transportation business with revenue_omu of 39678.54. This company is also highly suspicious as it does not make sense for it to have so many owners and the revenue_omu is not high too.\n\n\nShow the code\nmc3_edges_cb %>%\n  filter(source == \"Ocean Observers Marine mist\")\n\n\n# A tibble: 24 × 5\n   source                      target              type            weights     n\n   <chr>                       <chr>               <chr>             <int> <int>\n 1 Ocean Observers Marine mist Amanda Smith        Beneficial Own…       1     4\n 2 Ocean Observers Marine mist Brendan Brown       Beneficial Own…       1     1\n 3 Ocean Observers Marine mist Cindy White         Beneficial Own…       1     1\n 4 Ocean Observers Marine mist Don Mooney          Beneficial Own…       1     1\n 5 Ocean Observers Marine mist Douglas Park        Beneficial Own…       1     1\n 6 Ocean Observers Marine mist Elizabeth Nicholson Beneficial Own…       1     1\n 7 Ocean Observers Marine mist Ethan Thomas        Beneficial Own…       1     1\n 8 Ocean Observers Marine mist Gary Rodriguez      Beneficial Own…       1     1\n 9 Ocean Observers Marine mist Jacob Gonzalez      Beneficial Own…       1     1\n10 Ocean Observers Marine mist Jamie Byrd          Beneficial Own…       1     1\n# ℹ 14 more rows\n\n\n\n\nShow the code\nmc3_nodes_cb %>%\n  filter(id == \"Ocean Observers Marine mist\")\n\n\n# A tibble: 1 × 5\n  id                          type    country   revenue_omu word                \n  <chr>                       <chr>   <list>          <dbl> <chr>               \n1 Ocean Observers Marine mist Company <chr [1]>      39679. transportation , na…\n\n\nThe 4th highest in betweenness centrality is BlueTide GmbH & Co. KG which is owned by 48 people. It is in fabrication and metal products business with revenue_omu of 24730.5. This company is highly suspicious too as it does not make sense for it to have so many owners and the revenue_omu is low.\n\n\nShow the code\nmc3_edges_cb %>%\n  filter(source == \"BlueTide GmbH & Co. KG\")\n\n\n# A tibble: 48 × 5\n   source                 target             type             weights     n\n   <chr>                  <chr>              <chr>              <int> <int>\n 1 BlueTide GmbH & Co. KG Adam Hall          Beneficial Owner       1     1\n 2 BlueTide GmbH & Co. KG Angie Braun        Beneficial Owner       1     1\n 3 BlueTide GmbH & Co. KG Ann Forbes         Beneficial Owner       1     1\n 4 BlueTide GmbH & Co. KG Ashley Johns       Beneficial Owner       1     1\n 5 BlueTide GmbH & Co. KG Austin Lowe        Beneficial Owner       1     1\n 6 BlueTide GmbH & Co. KG Barbara Brady      Beneficial Owner       1     1\n 7 BlueTide GmbH & Co. KG Brian Holland      Beneficial Owner       1     1\n 8 BlueTide GmbH & Co. KG Brianna Lee        Beneficial Owner       1     1\n 9 BlueTide GmbH & Co. KG Charles Turner     Beneficial Owner       1     1\n10 BlueTide GmbH & Co. KG Christine Cummings Beneficial Owner       1     1\n# ℹ 38 more rows\n\n\n\n\nShow the code\nmc3_nodes_cb %>%\n  filter(id == \"BlueTide GmbH & Co. KG\")\n\n\n# A tibble: 1 × 5\n  id                     type    country   revenue_omu word                     \n  <chr>                  <chr>   <list>          <dbl> <chr>                    \n1 BlueTide GmbH & Co. KG Company <chr [1]>      24731. fabricated , metal , pro…\n\n\nThe 5th highest in betweenness centrality is David Thomas and he owns 6 companies as we can see from the table below.\n\n\nShow the code\nmc3_edges_cb %>%\n  filter(target == \"David Thomas\")\n\n\n# A tibble: 6 × 5\n  source                                         target      type  weights     n\n  <chr>                                          <chr>       <chr>   <int> <int>\n1 BlueTide GmbH & Co. KG                         David Thom… Bene…       1     6\n2 Nagaland Sea Catch Ltd. Liability Co Logistics David Thom… Bene…       1     6\n3 Ocean Quest S.A. de C.V.                       David Thom… Bene…       1     6\n4 Rubio-Evans                                    David Thom… Bene…       1     6\n5 Marine Muse Pic Marine ecology                 David Thom… Bene…       1     6\n6 Andhra Pradesh  Limited Liability Company Ray  David Thom… Bene…       1     6\n\n\nWe extract the company info and observed that only Nagaland Sea Catch Ltd. Liability Co Logistics is related to fishing activities. The other 5 companies have either no info or are doing other businesses.\n\n\nShow the code\nmc3_nodes_cb %>%\n  filter(id %in% c(\"Bauer-Taylor\", \"BlueTide GmbH & Co. KG\", \"Nagaland Sea Catch Ltd. Liability Co Logistics\", \"Ocean Quest S.A. de C.V.\", \"Rubio-Evans\", \"Marine Muse Pic Marine ecology\", \"Andhra Pradesh Limited Liability Company Ray\"))\n\n\n# A tibble: 6 × 5\n  id                                             type  country revenue_omu word \n  <chr>                                          <chr> <list>        <dbl> <chr>\n1 Bauer-Taylor                                   Comp… <NULL>          NA  <NA> \n2 BlueTide GmbH & Co. KG                         Comp… <chr>        24731. fabr…\n3 Nagaland Sea Catch Ltd. Liability Co Logistics Comp… <chr>        54913. proc…\n4 Ocean Quest S.A. de C.V.                       Comp… <chr>        46704. cook…\n5 Rubio-Evans                                    Comp… <NULL>          NA  <NA> \n6 Marine Muse Pic Marine ecology                 Comp… <chr>         5357. arra…\n\n\n\n\n\n\n3.5.3.4 Analysis of Beneficial Owners by closeness centrality\nWe bin the closeness centrality of the nodes for ease of visualization using VisNetwork later.\n\n\nShow the code\nmc3_graph_cbcc <- mc3_graph_cb %>%\n  activate(\"nodes\") %>%\n  mutate(group = cut(closeness_centrality, breaks = c(0, 0.05, 0.1, 0.15, 0.2, Inf),\n                       labels = c(\"1\\n(0-0.049)\", \n                                  \"2\\n(0.05-0.099)\", \n                                  \"3\\n(0.1-0.149)\",\n                                  \"4\\n(0.15-0.199)\",\n                                  \"5\\n(>=0.2)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  arrange(desc(closeness_centrality)) %>%\n  filter(closeness_centrality > 0.1) %>%\n  mutate(group1 = group_components()) %>%\n  filter(group1 < 10) \n\nmc3_graph_cbcc <- mc3_graph_cbcc %>%\n  activate(\"edges\") %>%\n  mutate(importance = centrality_edge_betweenness()) \n\n\nThe network graph showing the relationship between Company and Beneficial Owner is plotted.\n\n\nShow the code\nmc3_graph_cbcc %>%\nggraph(layout = \"nicely\") +\n  geom_edge_link(aes(colour = importance, \n                 alpha=0.2)) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(\n    size = closeness_centrality,\n    colors = factor(group1))) +\n#  scale_size_continuous(range=c(1,10))+\n  theme_graph()\n\n\n\n\n\nShow the code\nkable(mc3_graph_cbcc %>%\n        activate(\"nodes\") %>%\n        arrange(desc(closeness_centrality)) %>%\n  as_tibble())\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ntype\ncountry\nrevenue_omu\nword\nbetweenness_centrality\ncloseness_centrality\ngroup\ngroup1\n\n\n\n\nArunachal Pradesh s Kga Seabreeze\nCompany\nAlverossia\n9946.038\ndie , casting , machines\n10\n0.2000000\n4\n\n\n\n(0.15-0.199)\n1\n\n\n\n\n\n\n\n\n\nAssam Market Kga Brothers\nCompany\nMawazam\n16312.954\noffers , range , products , including , frozen , shrimps , fish , fillets , squid , cuttlefish , mollusks , ready , cook , ready , serve , foods , honey , flavored , marinated , grill , shrimps , breaded , shrimps , cheese , sauce , toppings , mushroom , shrimp , encroute , pre , fried , breaded , shrimp , skewers\n10\n0.2000000\n4\n\n\n\n(0.15-0.199)\n2\n\n\n\n\n\n\n\n\n\nBaltic Sprat Kelp GmbH Forwading\nCompany\nOceanus\n6256.673\noutdoor , led , lcd , televisions , weather , digital , signage , displays , touch , screen , monitors , accessories , mounts , stands , dust , covers\n10\n0.2000000\n4\n\n\n\n(0.15-0.199)\n3\n\n\n\n\n\n\n\n\n\nBarents Sea Cod Coral Reef AS Consulting\nCompany\nPuerto Sol\n38386.483\nmachines , footwear , industry\n10\n0.2000000\n4\n\n\n\n(0.15-0.199)\n4\n\n\n\n\n\n\n\n\n\nBrown LLC\nCompany\nZH\nNA\nna , na , na , na , na , na , na , na , na , na , na , na , na , na , na , na , na , na\n10\n0.2000000\n4\n\n\n\n(0.15-0.199)\n5\n\n\n\n\n\n\n\n\n\nCape of Good Hope Kga\nCompany\nMawazam, Marebak\n11135.223\nna , na\n10\n0.2000000\n4\n\n\n\n(0.15-0.199)\n6\n\n\n\n\n\n\n\n\n\nChavez LLC\nCompany\nZH\nNA\nna , na , na , na , na , na\n10\n0.2000000\n4\n\n\n\n(0.15-0.199)\n7\n\n\n\n\n\n\n\n\n\nDanish Plaice Swordfish AB Shipping\nCompany\nMawazam\n34169.185\nfresh , frozen , seafood , frozen , added , seafood , pork , poultry , products\n10\n0.2000000\n4\n\n\n\n(0.15-0.199)\n8\n\n\n\n\n\n\n\n\n\nGarcia Ltd\nCompany\nZH\nNA\nna , na , na , na\n10\n0.2000000\n4\n\n\n\n(0.15-0.199)\n9\n\n\n\n\n\n\n\n\n\nAmanda Norris\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n1\n\n\n\n\n\n\n\n\n\nHeather Orozco\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n1\n\n\n\n\n\n\n\n\n\nKenneth Fisher\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n1\n\n\n\n\n\n\n\n\n\nKristen Howard\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n1\n\n\n\n\n\n\n\n\n\nRobert Mendoza\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n1\n\n\n\n\n\n\n\n\n\nAaron Munoz\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n2\n\n\n\n\n\n\n\n\n\nAbigail Williams\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n2\n\n\n\n\n\n\n\n\n\nBreanna Davidson\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n2\n\n\n\n\n\n\n\n\n\nJulie Skinner\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n2\n\n\n\n\n\n\n\n\n\nLucas Sanchez\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n2\n\n\n\n\n\n\n\n\n\nAmanda Allen\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n3\n\n\n\n\n\n\n\n\n\nCarolyn Daniels\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n3\n\n\n\n\n\n\n\n\n\nDarius Simmons\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n3\n\n\n\n\n\n\n\n\n\nElizabeth Jones\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n3\n\n\n\n\n\n\n\n\n\nKathleen Cox\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n3\n\n\n\n\n\n\n\n\n\nBarbara Meyers\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n4\n\n\n\n\n\n\n\n\n\nBrandon Robinson\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n4\n\n\n\n\n\n\n\n\n\nDavid Perkins\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n4\n\n\n\n\n\n\n\n\n\nJoshua Reynolds\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n4\n\n\n\n\n\n\n\n\n\nTyler Morrow\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n4\n\n\n\n\n\n\n\n\n\nJonathan Neal MD\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n5\n\n\n\n\n\n\n\n\n\nJordan Olson\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n5\n\n\n\n\n\n\n\n\n\nKatie York\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n5\n\n\n\n\n\n\n\n\n\nOlivia Alvarez\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n5\n\n\n\n\n\n\n\n\n\nSteven Morrison\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n5\n\n\n\n\n\n\n\n\n\nBrandy Chavez\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n6\n\n\n\n\n\n\n\n\n\nJames Miles\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n6\n\n\n\n\n\n\n\n\n\nKyle Hess\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n6\n\n\n\n\n\n\n\n\n\nLacey Beck\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n6\n\n\n\n\n\n\n\n\n\nMiranda Cox\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n6\n\n\n\n\n\n\n\n\n\nChad Coleman\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n7\n\n\n\n\n\n\n\n\n\nCharlene Huff\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n7\n\n\n\n\n\n\n\n\n\nJason Conner\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n7\n\n\n\n\n\n\n\n\n\nJonathan West PhD\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n7\n\n\n\n\n\n\n\n\n\nSharon Rodriguez\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n7\n\n\n\n\n\n\n\n\n\nAshley Scott\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n8\n\n\n\n\n\n\n\n\n\nDanielle Bryant\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n8\n\n\n\n\n\n\n\n\n\nJonathan Johnson\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n8\n\n\n\n\n\n\n\n\n\nKristina Schultz\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n8\n\n\n\n\n\n\n\n\n\nWayne Underwood\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n8\n\n\n\n\n\n\n\n\n\nBethany Vasquez\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n9\n\n\n\n\n\n\n\n\n\nBrianna Barrett\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n9\n\n\n\n\n\n\n\n\n\nMichael Frazier\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n9\n\n\n\n\n\n\n\n\n\nRhonda Mcclain\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n9\n\n\n\n\n\n\n\n\n\nTammy Hayden\nBeneficial Owner\nNULL\nNA\nNA\n0\n0.1111111\n3\n\n\n\n(0.1-0.149)\n9\n\n\n\n\n\n\n\n\n\n\n\n\nIn the next step, we plot the interactive graph using VisNetwork to better visualize which are the nodes with high closeness centrality.\n\n\nShow the code\nedges_cbcc_df <- mc3_graph_cbcc %>%\n  activate(edges) %>%\n  as_tibble()\n\nnodes_cbcc_df <- mc3_graph_cbcc %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label, group)\n\n\n\n\nShow the code\nvisNetwork(nodes_cbcc_df,\n           edges_cbcc_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visEdges(smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\n\n\n\n3.5.4 Visualization of distribution of Company vs Company Contacts\nWe want to check the frequency distribution of Company vs Company Contacts.\nFirst, select edges where source type = Company and target_type = Company Contacts. Count number of duplicated target i.e. Company Contacts to find out how many companies are linked to each contact. Then plot the distribution.\n\n\nShow the code\nmc3_edges_cc <- mc3_edges_cleaned %>%\n  filter(type == \"Company Contacts\") %>%\n    add_count(target) #This adds a column (n) to the table indicating the number of companies linked to the target. \n\nggplot(data = mc3_edges_cc,\n       aes(x = n)) +\n  geom_bar() +\n  labs(title = \"Distribution of Number of Companies linked to Company Contacts\", x = \"Number of Companies Linked\", y = \"Number of Company Contacts\")\n\n\n\n\n\nShow the code\nkable(head(mc3_edges_cc %>%\n        arrange(desc(n)) %>%\n  as_tibble(), 10))\n\n\n\n\n\n\n\n\n\n\n\n\nsource\ntarget\ntype\nweights\nn\n\n\n\n\nNáutica del Sol Ges.m.b.H.\nAngela Wood\nCompany Contacts\n1\n7\n\n\nNáutica del Mar S.A. de C.V. Carriers\nAngela Wood\nCompany Contacts\n1\n7\n\n\nCosta del Sol Carriers\nAngela Wood\nCompany Contacts\n1\n7\n\n\nAncla de Oro United Yacht\nAngela Wood\nCompany Contacts\n1\n7\n\n\nPlaya de Oro Company\nAngela Wood\nCompany Contacts\n1\n7\n\n\nSparrmans Swordfish Ges.m.b.H. Merchants\nAngela Wood\nCompany Contacts\n1\n7\n\n\nGulf of Guinea Oceanography\nAngela Wood\nCompany Contacts\n1\n7\n\n\nPacificPlates S.A. de C.V.\nMr. Jason Carrillo\nCompany Contacts\n1\n6\n\n\nBaltic Sprat Ges.m.b.H. Enterprises\nMr. Jason Carrillo\nCompany Contacts\n1\n6\n\n\nRufiji Delta Limited Liability Company\nMr. Jason Carrillo\nCompany Contacts\n1\n6\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nIt is observed that majority of the Company Contacts have contact with only 1 company, which is normal. However, a minority of them have contacts with 4 or more companies. For example, Angela Wood has contacts with 7 companies. This is rather suspicious and should be investigated further.\n\n\n\n\n3.5.5 Visualization of relationship between Company and Company Contacts using network graph\n\n3.5.5.1 Analysis of Company Contacts with contacts to more than 3 companies\nFirst, we form new nodes data table by using source and target of the edges data table. This is to ensure that the nodes in nodes data tables include all the source and target values. Group_component <10 is used to identify the prominent communities.\n\n\nShow the code\nmc3_edges_cc4 <- mc3_edges_cc %>%\n  filter(n>3)\n\nid9 <- mc3_edges_cc4 %>%\n  select(source) %>%\n  rename(id = source)\nid10 <- mc3_edges_cc4 %>%\n  select(target) %>%\n  rename(id = target)\nmc3_nodes_cc4 <- rbind(id9, id10) %>%\n  distinct() %>%\n  left_join(mc3_nodes_cleaned, by=c(\"id\" = \"id\"),\n            unmatched = \"drop\") %>%\n  filter(type %in% c(\"Company\", \"Company Contacts\"))\n\nmc3_graph_cc4 <- tbl_graph(nodes = mc3_nodes_cc4,\n                       edges = mc3_edges_cc4,\n                       directed = FALSE) \n\nmc3_graph_cc4 <- mc3_graph_cc4 %>%\n  activate(\"nodes\") %>%\n  mutate(group = group_components()) %>%\n  filter(group < 10) \n\nedges_cc4_df <- mc3_graph_cc4 %>%\n  activate(edges) %>%\n  as_tibble()\n\nnodes_cc4_df <- mc3_graph_cc4 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label, group)\n\n\n\n\nShow the code\nvisNetwork(nodes_cc4_df,\n           edges_cc4_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visEdges(smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nFrom the above graph, we can see that Angela Wood has contacts with 7 companies. We extract info of the companies associated with Angela Wood and cannot find any info on revenue_omu nor product services other than the info that Náutica del Sol Ges.m.b.H. is involved in industrial adhesives business.\n\n\nShow the code\nmc3_nodes_cc4 %>%\n  filter(id %in% c(\"Náutica del Sol Ges.m.b.H.\", \"Náutica del Mar S.A. de C.V. Carriers\", \"Costa del Sol Carriers\", \"Ancla de Oro United Yacht\", \"Playa de Oro Company\", \"Sparrmans  Swordfish Ges.m.b.H. Merchants\", \"Gulf of Guinea   Oceanography\"))\n\n\n# A tibble: 7 × 5\n  id                                        type    country   revenue_omu word  \n  <chr>                                     <chr>   <list>          <dbl> <chr> \n1 Náutica del Sol Ges.m.b.H.                Company <chr [2]>          NA indus…\n2 Náutica del Mar S.A. de C.V. Carriers     Company <NULL>             NA <NA>  \n3 Costa del Sol Carriers                    Company <NULL>             NA <NA>  \n4 Ancla de Oro United Yacht                 Company <NULL>             NA <NA>  \n5 Playa de Oro Company                      Company <NULL>             NA <NA>  \n6 Sparrmans  Swordfish Ges.m.b.H. Merchants Company <NULL>             NA <NA>  \n7 Gulf of Guinea   Oceanography             Company <NULL>             NA <NA>  \n\n\nThe 2nd Beneficial Owner withe most contacts (6) is Jason Carillo. We extract info of the companies associated with him and cannot find any insights as there is no info on revenue_omu and product services.\n\n\nShow the code\nmc3_nodes_cc4 %>%\n  filter(id %in% c(\"PacificPlates S.A. de C.V.\", \"Baltic Sprat Ges.m.b.H. Enterprises\", \"Rufiji Delta  Limited Liability Company\", \"jīn qiāng yú AG\", \"Aqua Adventures Ltd. Corporation\", \"Náutica del Mar GmbH & Co. KG\"))\n\n\n# A tibble: 6 × 5\n  id                                      type    country   revenue_omu word \n  <chr>                                   <chr>   <list>          <dbl> <chr>\n1 PacificPlates S.A. de C.V.              Company <chr [1]>          NA na   \n2 Baltic Sprat Ges.m.b.H. Enterprises     Company <NULL>             NA <NA> \n3 Rufiji Delta  Limited Liability Company Company <chr [1]>          NA na   \n4 jīn qiāng yú AG                         Company <NULL>             NA <NA> \n5 Aqua Adventures Ltd. Corporation        Company <NULL>             NA <NA> \n6 Náutica del Mar GmbH & Co. KG           Company <NULL>             NA <NA> \n\n\nJennifer Johnson is one of the Beneficial Owner with the 3rd highest contacts (5). We extract info of the companies associated with her and could only find that House Inc is in glass and packaging business with a relatively high revenue_omu of 157513.702 while Tshikwea S.A. de C.V. is in stationery business with revenue_omu of 25221.835. There is no info on the other 3 companies.\n\n\nShow the code\nmc3_nodes_cc4 %>%\n  filter(id %in% c(\"House Inc\", \"Mar del Golfo Incorporated\", \"Rodriguez and Sons\", \"Silva-Cabrera\", \"Tshikwea S.A. de C.V.\"))\n\n\n# A tibble: 6 × 5\n  id                         type    country   revenue_omu word                 \n  <chr>                      <chr>   <list>          <dbl> <chr>                \n1 House Inc                  Company <chr [1]>     157514. glass , packaging , …\n2 Mar del Golfo Incorporated Company <chr [1]>       8657. na                   \n3 Rodriguez and Sons         Company <chr [1]>         NA  na , na , na , na , …\n4 Rodriguez and Sons         Company <chr [1]>         NA  na , na              \n5 Silva-Cabrera              Company <NULL>            NA  <NA>                 \n6 Tshikwea S.A. de C.V.      Company <chr [1]>      25222. offers , range , sta…\n\n\n\n\n\n\n3.5.5.2 Analysis of relationship between Company and Company Contacts (tidygraph)\nFirst, we form new nodes data table by using source and target of the edges data table. This is to ensure that the nodes in nodes data tables include all the source and target values.\n\n\nShow the code\nid11 <- mc3_edges_cc %>%\n  select(source) %>%\n  rename(id = source)\nid12 <- mc3_edges_cc %>%\n  select(target) %>%\n  rename(id = target)\nmc3_nodes_cc <- rbind(id11, id12) %>%\n  distinct() %>%\n  left_join(mc3_nodes_cleaned, by=c(\"id\" = \"id\"),\n            unmatched = \"drop\") %>%\n  filter(type %in% c(\"Company\", \"Company Contacts\"))\n\nmc3_graph_cc <- tbl_graph(nodes = mc3_nodes_cc,\n                       edges = mc3_edges_cc,\n                       directed = FALSE) %>%\n  mutate(betweenness_centrality = centrality_betweenness(),\n         closeness_centrality = centrality_closeness())\n\n\nWe bin the betweenness centrality of the nodes for ease of visualization using VisNetwork later.\nDue to the large data size, we filter data with betweenness > 0 and community group < 10. Group_component is used to identify the prominent communities.\n\n\nShow the code\nmc3_graph_cccb <- mc3_graph_cc %>%\n  activate(\"nodes\") %>%\n#  mutate(group = cut(betweenness_centrality, breaks = c(0, 1000000, 2000000, 3000000, Inf),\n#                       labels = c(\"1\\n(0-999999)\", \n#                                  \"2\\n(1000000-1999999)\", \n#                                  \"3\\n(2000000-2999999)\",\n#                                  \"4\\n(>=3000000)\\n\"),  \n#                       include.lowest = TRUE)) %>%\n  arrange(desc(betweenness_centrality)) %>%\n  filter(betweenness_centrality > 0) %>%\n  mutate(group1 = group_components()) %>%\n  filter(group1 < 10) \n\nmc3_graph_cccb <- mc3_graph_cccb %>%\n  activate(\"edges\") %>%\n  mutate(importance = centrality_edge_betweenness()) \n\n\nThe network graph showing the relationship between Company and Beneficial Owner is plotted.\n\n\nShow the code\nset.seed(1234)\nggraph(mc3_graph_cccb, \n            layout = \"fr\") +\n  geom_edge_link(aes(colour = importance), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = betweenness_centrality, colour = factor(group1))) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"Betweenness Centrality Network Between Company and Company Contacts\")\n\n\n\n\n\nShow the code\nkable(head(mc3_graph_cccb %>%\n             activate(\"nodes\") %>%\n             as_tibble(), 10))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ntype\ncountry\nrevenue_omu\nword\nbetweenness_centrality\ncloseness_centrality\ngroup1\n\n\n\n\nAqua Aura SE Marine life\nCompany\nMawazam , Rio Isla , Icarnia , Oceanus , Nalakond , Coralmarica, Alverossia , Isliandor , Talandria\nNA\nfood , ingredients , frozen , fruits , vegetables , ready , eat , products , ready , cook , products , snacks , drinks , kitchen , accessories , seafood , aquatic , products , bone , ash , natural , calcium , phosphate , feldspar , prepared , bone , china , bodies , na , na , fish , seafood , products , tuna , salmon , herring , shellfish , groundfish , products , flounder , fillets , cornmeal , pollock , strips , burger , tuna , steak , frozen , halibut , steaks , canned , sockeye , salmon , frozen , sockeye , crabs , alaskan , seafood , domestic , caviar , imported , caviar , na , na , na , optical , fiber , communication , passive , components , fiber , optical , attenuator , fiber , optical , isolator , fiber , optical , switch , optical , filter , fiber , optical , fiber , optical , coupler , na\n108.5\n0.0357143\n4\n\n\nIrish Mackerel S.A. de C.V. Marine biology\nCompany\nOceanus\nNA\ntransportation , services , ceramic , resin , home , garden , decor , source , freelance , researcher , involved , retailing , fresh , frozen , cured , meats , poultry , na , na , na , na , na , na , na , na , na\n70.5\n0.0277778\n4\n\n\nJillian White\nCompany Contacts\nNULL\nNA\nNA\n30.0\n0.0312500\n4\n\n\nLeah Cruz\nCompany Contacts\nNULL\nNA\nNA\n30.0\n0.0312500\n4\n\n\nMar del Norte NV\nCompany\nOceanus, Marebak\n22966.67\nseafoods , fish , na , seafood , products , na\n21.0\n0.0769231\n5\n\n\nGregory Kennedy\nCompany Contacts\nNULL\nNA\nNA\n15.5\n0.1000000\n6\n\n\nKimberly Rodriguez\nCompany Contacts\nNULL\nNA\nNA\n13.0\n0.0625000\n5\n\n\nKenneth Johnson\nCompany Contacts\nNULL\nNA\nNA\n13.0\n0.0625000\n5\n\n\nLisa Green\nCompany Contacts\nNULL\nNA\nNA\n7.5\n0.1666667\n7\n\n\nDavid Ramirez\nCompany Contacts\nNULL\nNA\nNA\n7.0\n0.0555556\n5\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nThe following configurations should be noted before we interpret the graphs:\n\nNode size is set to betweenness centrality\nNode colour is set to community group\nEdge width is set to number of companies linked to the Company Contact\nEdge colour is set to centrality_edge_betweenness\n\nIt is observed that the top 5 ids with highest betweenness centrality are:\n\nAqua Aura SE Marine life\nIrish Mackerel S.A. de C.V. Marine biology\nJillian White\nLeah Cruz\nMar del Norte NV\n\nThis means that the above companies/Company Contacts have higher control over the network. Aqua Aura SE Marine life and Mar del Norte NV are in fishing business while Irish Mackerel S.A. de C.V. Marine biology may possibly be in the fishing business too as the product services description mentioned fresh, frozen, meats.\n\n\nShow the code\nmc3_nodes_cc %>%\n  filter(id %in% c(\"Aqua Aura SE Marine life\", \"Irish Mackerel S.A. de C.V. Marine biology\", \"Mar del Norte NV\"))\n\n\n# A tibble: 3 × 5\n  id                                         type    country   revenue_omu word \n  <chr>                                      <chr>   <list>          <dbl> <chr>\n1 Aqua Aura SE Marine life                   Company <chr [9]>         NA  food…\n2 Irish Mackerel S.A. de C.V. Marine biology Company <chr [1]>         NA  tran…\n3 Mar del Norte NV                           Company <chr [2]>      22967. seaf…\n\n\nIt is also observed that although Angela Wood is associated with the most number of companies, she does not have as high betweenness centrality i.e. control over the network as compared to other contacts who are associated with fewer companies."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#conclusion",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#conclusion",
    "title": "Take-home Exercise 3",
    "section": "3.6 Conclusion",
    "text": "3.6 Conclusion\nIn conclusion, majority of the Beneficial Owners own only 1 company, which is normal. However, a minority of them own more than 4 companies, which is suspicious. For example, John Smith owns the most number of companies (11). We can only ascertain that one of the companies (Adams Group) is related to fishing activities. Beachcombers Nautical Plc Carriers is into products, mail, houses activities and it has an exceptionally high revenue_omu of 9891666.673. There is no info for the rest of the companies.\nIt is also observed that majority of the Company Contacts are associated with only 1 company, which is normal. However, a minority of them are associated with 4 or more companies, which is rather suspicious. For example, Angela Wood has contacts with the most number of companies (7). However, there is no info on revenue_omu nor product services for all the 7 companies other than the info that Náutica del Sol Ges.m.b.H. is involved in industrial adhesives business."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#data-preparation-1",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#data-preparation-1",
    "title": "Take-home Exercise 3",
    "section": "4.1 Data preparation",
    "text": "4.1 Data preparation\n\n4.1.1 Unlist source column of mc3_edges data table\nWe observed there are lists in the source column of mc3_edges data table. To clean up the list, we first segregate out rows with lists from the mc3_edges data table into a separate mc3_edges_wlist data table.\n\n\nShow the code\nmc3_edges_nolist <- mc3_edges %>% \n  filter(!grepl('c(', source, fixed = TRUE))\n\nmc3_edges_wlist <- mc3_edges %>% \n  filter(grepl('c(', source, fixed = TRUE))\n\n\nAs the source column is in chr format, we unlist the lists in source column of mc3_edges_wlist data table by removing characters “c(” and “)” and split the elements by “,” using str R package. Then, we remove any duplicate names using lapply. Next, we use the unnest_longer function to separate the elements into new rows.\n\n\nShow the code\nmc3_edges_wlist$source <- str_replace_all(mc3_edges_wlist$source, \"c\\\\(|\\\\)|\\\"\", \"\") \n\nmc3_edges_wlist$source <- str_split(mc3_edges_wlist$source, \", \") \n\nmc3_edges_wlist$source <- lapply(mc3_edges_wlist$source, unique)\n\nmc3_edges_wlist <- mc3_edges_wlist %>%\n  unnest_longer(source) %>%\n  distinct()\n\n\nLastly, we merge back the rows with the original mc3_edges data table (less the list) to form the cleaned edges data table.\n\n\nShow the code\nmc3_edges_cleaned <- rbind(mc3_edges_nolist, mc3_edges_wlist) %>%\n  distinct()\n\n\n\n\n4.1.2 Create new mc3_nodes data table\nNow that we have a cleaned mc3 edges data table, we will use this to create a new nodes data table to ensure all sources and targets are captured in the nodes data table to facilitate accurate development and analysis of network graphs later.\nWe want to extract the source and target from the mc3_edges_cleaned data table and left join stopwords_removed nodes data table to form the new nodes table.\nWe first take a look at the stopwords_removed nodes data table. We observed there are duplicate ids, some of which having same id but different country. We want to combine those duplicate ids to remove duplication. This can be done by grouping by id and type and using the summarise function to concatenate the country and word. For revenue_omu, we take the median value as taking the sum may not be comparative to other single id nodes. Then, we use str_split function to split the characters by ” , ” and then use lapply to ensure no duplicates in each field of country column.\n\n\nShow the code\nmc3_nodesclean <- stopwords_removed %>%\n  group_by(id, type) %>%\n  summarise(country = paste(country, collapse = \" , \"), revenue_omu = median(revenue_omu), word = paste(word, collapse = \" , \")) %>%\n  ungroup()\n\nmc3_nodesclean$country <- str_split(mc3_nodesclean$country, \" , \") \nmc3_nodesclean$country <- lapply(mc3_nodesclean$country, unique)\n\nmc3_nodesclean <- mc3_nodesclean %>%\n  select(id, country, revenue_omu, word)\n\n\nThen, we look at the mc3_nodes_cleaned data table. We observed that the source in mc3_nodes_cleaned data table are all companies while the target are people’s names, which are aligned to type that comprises Beneficial Owner and Company Contacts. As such, we can safely assume that type belongs to target.\nWe extract the source (and create a new column type and name it as “Company”) and also extract target from the mc3_edges_cleaned data table and left join mc3_nodesclean data table to form the new nodes table.\n\n\nShow the code\nid3 <- mc3_edges_cleaned %>%\n  select(source) %>%\n  rename(id = source) %>%\n  mutate(type = \"Company\")\n\nid4 <- mc3_edges_cleaned %>%\n  select(target, type) %>%\n  rename(id = target)\n\nmc3_nodes_cleaned <- rbind(id3, id4) %>%\n  distinct() %>%\n  left_join(mc3_nodesclean, by=c(\"id\" = \"id\"),\n            unmatched = \"drop\")  \n\nmc3_graphcleaned <- tbl_graph(nodes = mc3_nodes_cleaned,\n                       edges = mc3_edges_cleaned,\n                       directed = FALSE) %>%\n  mutate(betweenness_centrality = centrality_betweenness(),\n         closeness_centrality = centrality_closeness())\n\n\nWe are now ready to analyse the following relationships:\n\nCompany (source) and Beneficial Owner (target)\nCompany (source) and Company Contacts (target)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visualization-of-distribution-of-company-ownership-by-beneficial-owner",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visualization-of-distribution-of-company-ownership-by-beneficial-owner",
    "title": "Take-home Exercise 3",
    "section": "4.2 Visualization of distribution of Company ownership by Beneficial Owner",
    "text": "4.2 Visualization of distribution of Company ownership by Beneficial Owner\nWe want to check the frequency distribution of Company ownership by Beneficial Owner.\nFirst, select edges where source type = Company and target type = Beneficial Owner. Count number of duplicated target i.e. Beneficial Owner to find out how many companies are owned by the Beneficial Owner. Then plot the distribution.\n\n\nShow the code\nmc3_edges_cb <- mc3_edges_cleaned %>%\n  filter(type == \"Beneficial Owner\") %>%\n    add_count(target) #This adds a column (n) to the table indicating the number of companies linked to the target. \n\nggplot(data = mc3_edges_cb,\n       aes(x = n)) +\n  geom_bar() +\n  labs(title = \"Distribution of Number of Companies Owned by Beneficial Owner\", x = \"Number of Companies Owned\", y = \"Number of Beneficial Owners\")\n\n\n\n\n\nShow the code\nkable(head(mc3_edges_cb %>%\n        arrange(desc(n)) %>%\n  as_tibble(), 10))\n\n\n\n\n\n\n\n\n\n\n\n\nsource\ntarget\ntype\nweights\nn\n\n\n\n\nAdams Group\nJohn Smith\nBeneficial Owner\n1\n11\n\n\nFaroe Islands Company World\nJohn Smith\nBeneficial Owner\n1\n11\n\n\nGuzman-Chang\nJohn Smith\nBeneficial Owner\n1\n11\n\n\nPeterson PLC\nJohn Smith\nBeneficial Owner\n1\n11\n\n\nRyan-Curry\nJohn Smith\nBeneficial Owner\n1\n11\n\n\nThe Salted Pearl Inc Pelican\nJohn Smith\nBeneficial Owner\n1\n11\n\n\nhǎi zhé Herring Incorporated Logistics\nJohn Smith\nBeneficial Owner\n1\n11\n\n\nBeachcombers Nautical Plc Carriers\nJohn Smith\nBeneficial Owner\n1\n11\n\n\nSeaSplash Foods Corporation Freight\nJohn Smith\nBeneficial Owner\n1\n11\n\n\nKerala Market Oyj Freight\nJohn Smith\nBeneficial Owner\n1\n11\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nIt is observed that majority of the Beneficial Owners own only 1 company, which is normal. However, a minority of them own more than 4 companies. For example, John Smith owns the most companies (11). This is rather suspicious and should be investigated further."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visualization-of-relationship-between-company-and-beneficial-owner-using-network-graph",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visualization-of-relationship-between-company-and-beneficial-owner-using-network-graph",
    "title": "Take-home Exercise 3",
    "section": "4.3 Visualization of relationship between Company and Beneficial Owner using network graph",
    "text": "4.3 Visualization of relationship between Company and Beneficial Owner using network graph\n\n4.3.1 Analysis of Beneficial Owners with more than 4 companies\nFirst, we form new nodes data table by using source and target of the edges data table. This is to ensure that the nodes in nodes data tables include all the source and target values. Group_component <10 is used to identify the prominent communities.\n\n\nShow the code\nmc3_edges_cb4 <- mc3_edges_cb %>%\n  filter(n>4)\n\nid7 <- mc3_edges_cb4 %>%\n  select(source) %>%\n  rename(id = source)\nid8 <- mc3_edges_cb4 %>%\n  select(target) %>%\n  rename(id = target)\nmc3_nodes_cb4 <- rbind(id7, id8) %>%\n  distinct() %>%\n  left_join(mc3_nodes_cleaned, by=c(\"id\" = \"id\"),\n            unmatched = \"drop\") %>%\n  filter(type %in% c(\"Company\", \"Beneficial Owner\"))\n\nmc3_graph_cb4 <- tbl_graph(nodes = mc3_nodes_cb4,\n                       edges = mc3_edges_cb4,\n                       directed = FALSE) \n\nmc3_graph_cb4 <- mc3_graph_cb4 %>%\n  activate(\"nodes\") %>%\n  mutate(group = group_components()) %>%\n  filter(group < 10) \n\nedges_cb4_df <- mc3_graph_cb4 %>%\n  activate(edges) %>%\n  as_tibble()\n\nnodes_cb4_df <- mc3_graph_cb4 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label, group)\n\n\n\n\nShow the code\nvisNetwork(nodes_cb4_df,\n           edges_cb4_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visEdges(smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nFrom the above graph, we can see that John Smith owns 11 companies. We extract info of the companies owned by John Smith and can only ascertain that one of them (Adams Group) is related to fishing activities. Beachcombers Nautical Plc Carriers is into products, mail, houses activities and it has an exceptionally high revenue_omu of 9891666.673. The rest has no info.\n\n\nShow the code\nmc3_nodes_cb4 %>%\n  filter(id %in% c(\"Adams Group\", \"Faroe Islands Company World\", \"Guzman-Chang\", \"Peterson PLC\", \"Ryan-Curry\", \"The Salted Pearl Inc Pelican\", \"hǎi zhé Herring Incorporated Logistics\", \"Beachcombers Nautical Plc Carriers\", \"SeaSplash Foods Corporation Freight\", \"Kerala Market Oyj Freight\", \"Oka S.A. de C.V.\"))\n\n\n# A tibble: 10 × 5\n   id                                     type    country   revenue_omu word    \n   <chr>                                  <chr>   <list>          <dbl> <chr>   \n 1 Adams Group                            Company <chr [1]>         NA  NA , NA…\n 2 Adams Group                            Company <chr [1]>       9056. range ,…\n 3 Adams Group                            Company <chr [1]>         NA  NA , NA…\n 4 Guzman-Chang                           Company <NULL>            NA  <NA>    \n 5 Peterson PLC                           Company <NULL>            NA  <NA>    \n 6 Ryan-Curry                             Company <NULL>            NA  <NA>    \n 7 The Salted Pearl Inc Pelican           Company <chr [1]>       8619. NA      \n 8 hǎi zhé Herring Incorporated Logistics Company <chr [1]>       4767. NA      \n 9 Beachcombers Nautical Plc Carriers     Company <chr [1]>    9891667. product…\n10 SeaSplash Foods Corporation Freight    Company <NULL>            NA  <NA>    \n\n\nThe 2nd Beneficial Owner who owns most companies (9) is Michael Johnson. We extract info of the companies owned by him and can only ascertain that of the 9 companies, only one of them (Baker and Sons) is related to fishing activities and which has significantly high revenue_omu of 104095830. SeaBass Leska N.V. International is in milling business. The rest has no info.\n\n\nShow the code\nmc3_nodes_cb4 %>%\n  filter(id %in% c(\"Baker and Sons\", \"Chen, Jones and Davis\", \"Hancock Inc\", \"Jones, Kennedy and Johnson\", \"Knight-Brown\", \"Miller, Wiggins and Smith\", \"SeaBass  Leska N.V. International\", \"Seashell Seekers ОАО International\", \"Thompson LLC\"))\n\n\n# A tibble: 11 × 5\n   id                                 type    country   revenue_omu word        \n   <chr>                              <chr>   <list>          <dbl> <chr>       \n 1 Baker and Sons                     Company <chr [1]>         NA  NA , NA , N…\n 2 Baker and Sons                     Company <chr [1]>  104095830. fish , fres…\n 3 Chen, Jones and Davis              Company <NULL>            NA  <NA>        \n 4 Hancock Inc                        Company <NULL>            NA  <NA>        \n 5 Jones, Kennedy and Johnson         Company <NULL>            NA  <NA>        \n 6 Knight-Brown                       Company <NULL>            NA  <NA>        \n 7 Miller, Wiggins and Smith          Company <NULL>            NA  <NA>        \n 8 SeaBass  Leska N.V. International  Company <chr [1]>     106543. vertical , …\n 9 Seashell Seekers ОАО International Company <chr [1]>       7926. NA          \n10 Thompson LLC                       Company <chr [1]>         NA  NA , NA , N…\n11 Thompson LLC                       Company <chr [1]>         NA  NA , NA , N…\n\n\nThe 3rd Beneficial Owner who owns most companies (8) is Jennifer Smith. We extract info of the companies owned by her and observed that of the 8 companies, only Mar del Oeste - and Dutch Mussels S.p.A. Sea spray are related to fishing activities. Luangwa River Limited Liability Company Holdings is in chemicals business while Mar de Cristal ОАО is in dairy product business. The rest has no info.\n\n\nShow the code\nmc3_nodes_cb4 %>%\n  filter(id %in% c(\"Cortez Group\", \"Hamilton LLC\", \"Luangwa River   Limited Liability Company Holdings\", \"Mar de Coral GmbH and Son's\", \"Mar de Cristal ОАО\", \"Mar del Oeste -\", \"Dutch Mussels S.p.A. Sea spray\", \"Maacama  S.p.A. Marine ecology\"))\n\n\n# A tibble: 9 × 5\n  id                                             type  country revenue_omu word \n  <chr>                                          <chr> <list>        <dbl> <chr>\n1 Cortez Group                                   Comp… <chr>           NA  NA ,…\n2 Cortez Group                                   Comp… <chr>           NA  NA ,…\n3 Hamilton LLC                                   Comp… <chr>           NA  NA ,…\n4 Luangwa River   Limited Liability Company Hol… Comp… <chr>           NA  chem…\n5 Mar de Coral GmbH and Son's                    Comp… <chr>         9726. NA   \n6 Mar de Cristal ОАО                             Comp… <chr>        30027. flui…\n7 Mar del Oeste -                                Comp… <chr>        57148. salm…\n8 Dutch Mussels S.p.A. Sea spray                 Comp… <chr>       168248. gela…\n9 Maacama  S.p.A. Marine ecology                 Comp… <chr>         8996. NA   \n\n\nNext, we observed a rather large community where 3 companies seem to be of high betweenness centrality. They are namely:\n\nBlueTide GmbH & Co. KG - in fabrication and metal products business\nWest Fish GmbH Transport - in veneer and wood business\nMar del Oeste - - in legit fishing business\n\nThese 3 companies are all owned by Jessica Brown, who owned a total of 5 companies. BlueTide GmbH & Co. KG is owned by David Thomas, Mar del Oeste is owned by Jennifer Smith and West Fish GmbH Transport is owned by Michael Miller. We will investigate further in below section when we examine the betweenness centrality between Company and Beneficial Owners.\n\n\nShow the code\nmc3_nodes_cb4 %>%\n  filter(id %in% c(\"BlueTide GmbH & Co. KG\", \"West Fish  GmbH Transport\", \"Mar del Oeste -\"))\n\n\n# A tibble: 3 × 5\n  id                        type    country   revenue_omu word                  \n  <chr>                     <chr>   <list>          <dbl> <chr>                 \n1 BlueTide GmbH & Co. KG    Company <chr [1]>      24731. fabricated , metal , …\n2 Mar del Oeste -           Company <chr [1]>      57148. salmon , products     \n3 West Fish  GmbH Transport Company <chr [1]>      13627. veneer , sheets , woo…\n\n\n\n\n\n\n4.3.2 Analysis of betweenness centrality between Company and Beneficial Owner (tidygraph)\nCentrality Betweenness is a way of detecting the amount of influence a node has over the flow of information in a graph. It finds nodes that serve as a bridge from one part of a graph to another and measures the shortest paths between all pairs of nodes in a graph. A node with higher betweenness centrality would have more control over the network.\nFirst, we form new nodes data table by using source and target of the edges data table. This is to ensure that the nodes in nodes data tables include all the source and target values.\n\n\nShow the code\nid5 <- mc3_edges_cb %>%\n  select(source) %>%\n  rename(id = source)\nid6 <- mc3_edges_cb %>%\n  select(target) %>%\n  rename(id = target)\nmc3_nodes_cb <- rbind(id5, id6) %>%\n  distinct() %>%\n  left_join(mc3_nodes_cleaned, by=c(\"id\" = \"id\"),\n            unmatched = \"drop\") %>%\n  filter(type %in% c(\"Company\", \"Beneficial Owner\"))\n\nmc3_graph_cb <- tbl_graph(nodes = mc3_nodes_cb,\n                       edges = mc3_edges_cb,\n                       directed = FALSE) %>%\n  mutate(betweenness_centrality = centrality_betweenness(),\n         closeness_centrality = centrality_closeness())\n\n\nWe bin the betweenness centrality of the nodes for ease of visualization using VisNetwork later.\nDue to the large data size, we filter data with betweenness > 500000 and community group < 10. Group_component is used to identify the prominent communities.\n\n\nShow the code\nmc3_graph_cbcb <- mc3_graph_cb %>%\n  activate(\"nodes\") %>%\n  mutate(group = cut(betweenness_centrality, breaks = c(0, 1000000, 2000000, 3000000, Inf),\n                       labels = c(\"1\\n(0-999999)\", \n                                  \"2\\n(1000000-1999999)\", \n                                  \"3\\n(2000000-2999999)\",\n                                  \"4\\n(>=3000000)\\n\"),  \n                       include.lowest = TRUE)) %>%\n  arrange(desc(betweenness_centrality)) %>%\n  filter(betweenness_centrality > 500000) %>%\n  mutate(group1 = group_components()) %>%\n  filter(group1 < 10) \n\nmc3_graph_cbcb <- mc3_graph_cbcb %>%\n  activate(\"edges\") %>%\n  mutate(importance = centrality_edge_betweenness()) \n\n\nThe network graph showing the relationship between Company and Beneficial Owner is plotted.\n\n\nShow the code\nset.seed(1234)\nggraph(mc3_graph_cbcb, \n            layout = \"stress\") +\n  geom_edge_link(aes(colour = importance), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = betweenness_centrality, colour = factor(group1))) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"<span style='font-size: 14pt;'>Betweenness Centrality Network (Company-Beneficial Owner)</font>\") +\n  theme(plot.title = element_markdown())\n\n\n\n\n\nShow the code\nkable(head(mc3_graph_cbcb %>%\n             activate(\"nodes\") %>%\n             as_tibble(), 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ntype\ncountry\nrevenue_omu\nword\nbetweenness_centrality\ncloseness_centrality\ngroup\ngroup1\n\n\n\n\nSenegal Coast Ltd. Liability Co\nCompany\nOceanus\nNA\nNA\n3399060\n2.09e-05\n4\n\n\n\n(>=3000000)\n1\n\n\n\n\n\n\n\n\n\nJessica Brown\nBeneficial Owner\nNULL\nNA\nNA\n2793321\n1.95e-05\n3\n\n\n\n(2000000-2999999)\n1\n\n\n\n\n\n\n\n\n\nOcean Observers Marine mist\nCompany\nPuerto Sol\n39678.54\ntransportation , NA , services\n2691699\n1.86e-05\n3\n\n\n\n(2000000-2999999)\n1\n\n\n\n\n\n\n\n\n\nBlueTide GmbH & Co. KG\nCompany\nAzurionix\n24730.50\nfabricated , metal , products\n2542636\n1.86e-05\n3\n\n\n\n(2000000-2999999)\n1\n\n\n\n\n\n\n\n\n\nDavid Thomas\nBeneficial Owner\nNULL\nNA\nNA\n2500803\n1.77e-05\n3\n\n\n\n(2000000-2999999)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nThe following configurations should be noted before we interpret the graphs:\n\nNode size is set to betweenness centrality\nNode colour is set to community group\nEdge colour is set to centrality_edge_betweenness\n\nIt is observed that the top 5 ids with highest betweenness centrality are:\n\nSenegal Coast Ltd. Liability Co\nJessica Brown\nOcean Observers Marine mist\nBlueTide GmbH & Co. KG\nDavid Thomas\n\nThis means that the above companies/beneficial owners have higher control over the network. However, from the data table, there is no info on the type of services that Senegal Coast Ltd. Liability Co provides while the other 2 companies are not related to fishing activities. Ocean Observers Marine mist is into transportation while BlueTide GmbH & Co. KG is into fabrication and metal products. Following down the list, we observed that only Congo Rapids Ltd. Corporation is related to fishing activities.\nIt is also observed that although John Smith owns the most number of companies, he does not have as high betweenness centrality i.e. control over the network as compared to other owners who own fewer companies.\nThe graph did not reflect all the links e.g. although John Smith owns the most companies, this graph only shows 2. This could be due to companies with betweenness <= 500000 being removed before plotting the graph.\n\n\nIn the next step, we plot the interactive graph using VisNetwork to better visualize who are the beneficial owners of the non-fishing companies.\n\n\n4.3.3 Analysis of betweenness centrality between Company and Beneficial Owner (VisNetwork)\n\n\nShow the code\nedges_cbcb_df <- mc3_graph_cbcb %>%\n  activate(edges) %>%\n  as_tibble()\n\nnodes_cbcb_df <- mc3_graph_cbcb %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label, group)\n\n\n\n\nShow the code\nvisNetwork(nodes_cbcb_df,\n           edges_cbcb_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visEdges(smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nThe different colour groups represent the different range of betweenness centrality with blue having the highest range, which Senegal Coast Ltd. Liability Co fall into.\nAs earlier mentioned, the graph did not reflect all the links. This could be due to companies with betweenness <= 500000 being removed before plotting the graph.\nSenegal Coast Ltd. Liability Co has the highest betweenness centrality. We extract the company from the edges table and found that it is owned by 22 people, although the graph only showed 4 links. The other 18 people should have betweenness centrality <=500000 and therefore were not shown. We only know it is from Oceanus, but there is no info on its revenue_omu and product services. As such, no findings can be drawn. But this company is highly suspicious as it does not make sense for it to have so many owners.\n\n\nShow the code\nmc3_edges_cb %>%\n  filter(source == \"Senegal Coast  Ltd. Liability Co\")\n\n\n# A tibble: 22 × 5\n   source                           target              type       weights     n\n   <chr>                            <chr>               <chr>        <int> <int>\n 1 Senegal Coast  Ltd. Liability Co Amanda West         Beneficia…       1     1\n 2 Senegal Coast  Ltd. Liability Co Angela Ward         Beneficia…       1     2\n 3 Senegal Coast  Ltd. Liability Co Ashlee Campbell     Beneficia…       1     1\n 4 Senegal Coast  Ltd. Liability Co Brooke Lawson       Beneficia…       1     1\n 5 Senegal Coast  Ltd. Liability Co Carlos Harrell      Beneficia…       1     1\n 6 Senegal Coast  Ltd. Liability Co Daniel Davis        Beneficia…       1     3\n 7 Senegal Coast  Ltd. Liability Co Emily Marshall      Beneficia…       1     1\n 8 Senegal Coast  Ltd. Liability Co Erica Sanchez       Beneficia…       1     1\n 9 Senegal Coast  Ltd. Liability Co Erin Alvarez        Beneficia…       1     1\n10 Senegal Coast  Ltd. Liability Co Francisco Singleton Beneficia…       1     1\n# ℹ 12 more rows\n\n\n\n\nShow the code\nmc3_nodes_cb %>%\n  filter(id == \"Senegal Coast  Ltd. Liability Co\")\n\n\n# A tibble: 1 × 5\n  id                               type    country   revenue_omu word \n  <chr>                            <chr>   <list>          <dbl> <chr>\n1 Senegal Coast  Ltd. Liability Co Company <chr [1]>          NA NA   \n\n\nJessica Brown is the 2nd highest in betweenness centrality and she owns 5 companies as we can see from the table below.\n\n\nShow the code\nmc3_edges_cb %>%\n  filter(target == \"Jessica Brown\")\n\n\n# A tibble: 5 × 5\n  source                    target        type             weights     n\n  <chr>                     <chr>         <chr>              <int> <int>\n1 Bauer-Taylor              Jessica Brown Beneficial Owner       1     5\n2 BlueTide GmbH & Co. KG    Jessica Brown Beneficial Owner       1     5\n3 Mar del Oeste -           Jessica Brown Beneficial Owner       1     5\n4 Mcintyre-White            Jessica Brown Beneficial Owner       1     5\n5 West Fish  GmbH Transport Jessica Brown Beneficial Owner       1     5\n\n\nWe extract the company info and observed that only Mar del Oeste - is related to fishing activities. The other 4 companies have either no info or are doing other businesses (metal/wood and veneer). Mar del Oeste -has much higher revenue_omu as compared to the other 4 companies.\n\n\nShow the code\nmc3_nodes_cb %>%\n  filter(id %in% c(\"Bauer-Taylor\", \"BlueTide GmbH & Co. KG\", \"Mar del Oeste -\", \"Mcintyre-White\", \"West Fish  GmbH Transport\"))\n\n\n# A tibble: 5 × 5\n  id                        type    country   revenue_omu word                  \n  <chr>                     <chr>   <list>          <dbl> <chr>                 \n1 Bauer-Taylor              Company <NULL>            NA  <NA>                  \n2 BlueTide GmbH & Co. KG    Company <chr [1]>      24731. fabricated , metal , …\n3 Mar del Oeste -           Company <chr [1]>      57148. salmon , products     \n4 Mcintyre-White            Company <NULL>            NA  <NA>                  \n5 West Fish  GmbH Transport Company <chr [1]>      13627. veneer , sheets , woo…\n\n\nThe 3rd highest in betweenness centrality is Ocean Observers Marine mist which is owned by 24 people. It is in transportation business with revenue_omu of 39678.54. This company is also highly suspicious as it does not make sense for it to have so many owners and the revenue_omu is not high too.\n\n\nShow the code\nmc3_edges_cb %>%\n  filter(source == \"Ocean Observers Marine mist\")\n\n\n# A tibble: 24 × 5\n   source                      target              type            weights     n\n   <chr>                       <chr>               <chr>             <int> <int>\n 1 Ocean Observers Marine mist Amanda Smith        Beneficial Own…       1     4\n 2 Ocean Observers Marine mist Brendan Brown       Beneficial Own…       1     1\n 3 Ocean Observers Marine mist Cindy White         Beneficial Own…       1     1\n 4 Ocean Observers Marine mist Don Mooney          Beneficial Own…       1     1\n 5 Ocean Observers Marine mist Douglas Park        Beneficial Own…       1     1\n 6 Ocean Observers Marine mist Elizabeth Nicholson Beneficial Own…       1     1\n 7 Ocean Observers Marine mist Ethan Thomas        Beneficial Own…       1     1\n 8 Ocean Observers Marine mist Gary Rodriguez      Beneficial Own…       1     1\n 9 Ocean Observers Marine mist Jacob Gonzalez      Beneficial Own…       1     1\n10 Ocean Observers Marine mist Jamie Byrd          Beneficial Own…       1     1\n# ℹ 14 more rows\n\n\n\n\nShow the code\nmc3_nodes_cb %>%\n  filter(id == \"Ocean Observers Marine mist\")\n\n\n# A tibble: 1 × 5\n  id                          type    country   revenue_omu word                \n  <chr>                       <chr>   <list>          <dbl> <chr>               \n1 Ocean Observers Marine mist Company <chr [1]>      39679. transportation , NA…\n\n\nThe 4th highest in betweenness centrality is BlueTide GmbH & Co. KG which is owned by 48 people. It is in fabrication and metal products business with revenue_omu of 24730.5. This company is highly suspicious too as it does not make sense for it to have so many owners and the revenue_omu is low.\n\n\nShow the code\nmc3_edges_cb %>%\n  filter(source == \"BlueTide GmbH & Co. KG\")\n\n\n# A tibble: 48 × 5\n   source                 target             type             weights     n\n   <chr>                  <chr>              <chr>              <int> <int>\n 1 BlueTide GmbH & Co. KG Adam Hall          Beneficial Owner       1     1\n 2 BlueTide GmbH & Co. KG Angie Braun        Beneficial Owner       1     1\n 3 BlueTide GmbH & Co. KG Ann Forbes         Beneficial Owner       1     1\n 4 BlueTide GmbH & Co. KG Ashley Johns       Beneficial Owner       1     1\n 5 BlueTide GmbH & Co. KG Austin Lowe        Beneficial Owner       1     1\n 6 BlueTide GmbH & Co. KG Barbara Brady      Beneficial Owner       1     1\n 7 BlueTide GmbH & Co. KG Brian Holland      Beneficial Owner       1     1\n 8 BlueTide GmbH & Co. KG Brianna Lee        Beneficial Owner       1     1\n 9 BlueTide GmbH & Co. KG Charles Turner     Beneficial Owner       1     1\n10 BlueTide GmbH & Co. KG Christine Cummings Beneficial Owner       1     1\n# ℹ 38 more rows\n\n\n\n\nShow the code\nmc3_nodes_cb %>%\n  filter(id == \"BlueTide GmbH & Co. KG\")\n\n\n# A tibble: 1 × 5\n  id                     type    country   revenue_omu word                     \n  <chr>                  <chr>   <list>          <dbl> <chr>                    \n1 BlueTide GmbH & Co. KG Company <chr [1]>      24731. fabricated , metal , pro…\n\n\nThe 5th highest in betweenness centrality is David Thomas and he owns 6 companies as we can see from the table below.\n\n\nShow the code\nmc3_edges_cb %>%\n  filter(target == \"David Thomas\")\n\n\n# A tibble: 6 × 5\n  source                                         target      type  weights     n\n  <chr>                                          <chr>       <chr>   <int> <int>\n1 BlueTide GmbH & Co. KG                         David Thom… Bene…       1     6\n2 Nagaland Sea Catch Ltd. Liability Co Logistics David Thom… Bene…       1     6\n3 Ocean Quest S.A. de C.V.                       David Thom… Bene…       1     6\n4 Rubio-Evans                                    David Thom… Bene…       1     6\n5 Marine Muse Pic Marine ecology                 David Thom… Bene…       1     6\n6 Andhra Pradesh  Limited Liability Company Ray  David Thom… Bene…       1     6\n\n\nWe extract the company info and observed that only Nagaland Sea Catch Ltd. Liability Co Logistics is related to fishing activities. The other 5 companies have either no info or are doing other businesses.\n\n\nShow the code\nmc3_nodes_cb %>%\n  filter(id %in% c(\"Bauer-Taylor\", \"BlueTide GmbH & Co. KG\", \"Nagaland Sea Catch Ltd. Liability Co Logistics\", \"Ocean Quest S.A. de C.V.\", \"Rubio-Evans\", \"Marine Muse Pic Marine ecology\", \"Andhra Pradesh Limited Liability Company Ray\"))\n\n\n# A tibble: 6 × 5\n  id                                             type  country revenue_omu word \n  <chr>                                          <chr> <list>        <dbl> <chr>\n1 Bauer-Taylor                                   Comp… <NULL>          NA  <NA> \n2 BlueTide GmbH & Co. KG                         Comp… <chr>        24731. fabr…\n3 Nagaland Sea Catch Ltd. Liability Co Logistics Comp… <chr>        54913. proc…\n4 Ocean Quest S.A. de C.V.                       Comp… <chr>        46704. cook…\n5 Rubio-Evans                                    Comp… <NULL>          NA  <NA> \n6 Marine Muse Pic Marine ecology                 Comp… <chr>         5357. arra…"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visualization-of-distribution-of-company-vs-company-contacts",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visualization-of-distribution-of-company-vs-company-contacts",
    "title": "Take-home Exercise 3",
    "section": "4.4 Visualization of distribution of Company vs Company Contacts",
    "text": "4.4 Visualization of distribution of Company vs Company Contacts\nWe want to check the frequency distribution of Company vs Company Contacts.\nFirst, select edges where source type = Company and target type = Company Contacts. Count number of duplicated target i.e. Company Contacts to find out how many companies are linked to each contact. Then plot the distribution.\n\n\nShow the code\nmc3_edges_cc <- mc3_edges_cleaned %>%\n  filter(type == \"Company Contacts\") %>%\n    add_count(target) #This adds a column (n) to the table indicating the number of companies linked to the Company Contact. \n\nggplot(data = mc3_edges_cc,\n       aes(x = n)) +\n  geom_bar() +\n  labs(title = \"Distribution of Number of Companies linked to Company Contacts\", x = \"Number of Companies Linked\", y = \"Number of Company Contacts\")\n\n\n\n\n\nShow the code\nkable(head(mc3_edges_cc %>%\n        arrange(desc(n)) %>%\n  as_tibble(), 10))\n\n\n\n\n\n\n\n\n\n\n\n\nsource\ntarget\ntype\nweights\nn\n\n\n\n\nNáutica del Sol Ges.m.b.H.\nAngela Wood\nCompany Contacts\n1\n7\n\n\nNáutica del Mar S.A. de C.V. Carriers\nAngela Wood\nCompany Contacts\n1\n7\n\n\nCosta del Sol Carriers\nAngela Wood\nCompany Contacts\n1\n7\n\n\nAncla de Oro United Yacht\nAngela Wood\nCompany Contacts\n1\n7\n\n\nPlaya de Oro Company\nAngela Wood\nCompany Contacts\n1\n7\n\n\nSparrmans Swordfish Ges.m.b.H. Merchants\nAngela Wood\nCompany Contacts\n1\n7\n\n\nGulf of Guinea Oceanography\nAngela Wood\nCompany Contacts\n1\n7\n\n\nPacificPlates S.A. de C.V.\nMr. Jason Carrillo\nCompany Contacts\n1\n6\n\n\nBaltic Sprat Ges.m.b.H. Enterprises\nMr. Jason Carrillo\nCompany Contacts\n1\n6\n\n\nRufiji Delta Limited Liability Company\nMr. Jason Carrillo\nCompany Contacts\n1\n6\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nIt is observed that majority of the Company Contacts are associated with only 1 company, which is normal. However, a minority of them are associated with 4 or more companies. For example, Angela Wood is associated with 7 companies. This is rather suspicious and should be investigated further.\n\n\nWe also want to find out which company has the most number of contacts.\n\n\nShow the code\nmc3_edges_cc1 <- mc3_edges_cleaned %>%\n  filter(type == \"Company Contacts\") %>%\n    add_count(source) #This adds a column (n) to the table indicating the number of contacts linked to the company. \n\nggplot(data = mc3_edges_cc1,\n       aes(x = n)) +\n  geom_bar() +\n  labs(title = \"Distribution of Number of Company Contacts Linked to Company\", x = \"Number of Company Contacts\", y = \"Number of Companies\")\n\n\n\n\n\nShow the code\nkable(head(mc3_edges_cc1 %>%\n        arrange(desc(n)) %>%\n  as_tibble(), 15))\n\n\n\n\n\n\n\n\n\n\n\n\nsource\ntarget\ntype\nweights\nn\n\n\n\n\nAqua Aura SE Marine life\nAnthony Hunter\nCompany Contacts\n1\n11\n\n\nAqua Aura SE Marine life\nHeather Erickson\nCompany Contacts\n1\n11\n\n\nAqua Aura SE Marine life\nJesus Mcclure\nCompany Contacts\n1\n11\n\n\nAqua Aura SE Marine life\nLeon Pittman\nCompany Contacts\n1\n11\n\n\nAqua Aura SE Marine life\nMrs. Amy Graves\nCompany Contacts\n1\n11\n\n\nAqua Aura SE Marine life\nSarah Barrett\nCompany Contacts\n1\n11\n\n\nAqua Aura SE Marine life\nShannon Snyder\nCompany Contacts\n1\n11\n\n\nAqua Aura SE Marine life\nThomas Snyder\nCompany Contacts\n1\n11\n\n\nAqua Aura SE Marine life\nJennifer Bauer\nCompany Contacts\n1\n11\n\n\nAqua Aura SE Marine life\nJillian White\nCompany Contacts\n1\n11\n\n\nAqua Aura SE Marine life\nLeah Cruz\nCompany Contacts\n1\n11\n\n\nIrish Mackerel S.A. de C.V. Marine biology\nAngelica Gates\nCompany Contacts\n1\n7\n\n\nIrish Mackerel S.A. de C.V. Marine biology\nMario Lee\nCompany Contacts\n1\n7\n\n\nIrish Mackerel S.A. de C.V. Marine biology\nTara Cooper\nCompany Contacts\n1\n7\n\n\nIrish Mackerel S.A. de C.V. Marine biology\nWendy Gardner\nCompany Contacts\n1\n7\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nIt is observed that majority of the companies are associated with only 1 Company Contact. However, a minority of them are associated with 4 or more contacts For example, Aqua Aura SE Marine life has 11 contacts This is rather suspicious and should be investigated further."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visualization-of-relationship-between-company-and-company-contacts-using-network-graph",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visualization-of-relationship-between-company-and-company-contacts-using-network-graph",
    "title": "Take-home Exercise 3",
    "section": "4.5 Visualization of relationship between Company and Company Contacts using network graph",
    "text": "4.5 Visualization of relationship between Company and Company Contacts using network graph\n\n4.5.1 Analysis of Company Contacts associated with more than 3 companies\nFirst, we form new nodes data table by using source and target of the edges data table. This is to ensure that the nodes in nodes data tables include all the source and target values. Group_component <10 is used to identify the prominent communities.\n\n\nShow the code\nmc3_edges_cc4 <- mc3_edges_cc %>%\n  filter(n>3)\n\nid9 <- mc3_edges_cc4 %>%\n  select(source) %>%\n  rename(id = source)\nid10 <- mc3_edges_cc4 %>%\n  select(target) %>%\n  rename(id = target)\nmc3_nodes_cc4 <- rbind(id9, id10) %>%\n  distinct() %>%\n  left_join(mc3_nodes_cleaned, by=c(\"id\" = \"id\"),\n            unmatched = \"drop\") %>%\n  filter(type %in% c(\"Company\", \"Company Contacts\"))\n\nmc3_graph_cc4 <- tbl_graph(nodes = mc3_nodes_cc4,\n                       edges = mc3_edges_cc4,\n                       directed = FALSE) \n\nmc3_graph_cc4 <- mc3_graph_cc4 %>%\n  activate(\"nodes\") %>%\n  mutate(group = group_components()) %>%\n  filter(group < 10) \n\nedges_cc4_df <- mc3_graph_cc4 %>%\n  activate(edges) %>%\n  as_tibble()\n\nnodes_cc4_df <- mc3_graph_cc4 %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label, group)\n\n\n\n\nShow the code\nvisNetwork(nodes_cc4_df,\n           edges_cc4_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visEdges(smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nFrom the above graph, we can see that Angela Wood has contacts with 7 companies. We extract info of the companies associated with Angela Wood and cannot find any info on revenue_omu nor product services other than the info that Náutica del Sol Ges.m.b.H. is involved in industrial adhesives business.\n\n\nShow the code\nmc3_nodes_cc4 %>%\n  filter(id %in% c(\"Náutica del Sol Ges.m.b.H.\", \"Náutica del Mar S.A. de C.V. Carriers\", \"Costa del Sol Carriers\", \"Ancla de Oro United Yacht\", \"Playa de Oro Company\", \"Sparrmans  Swordfish Ges.m.b.H. Merchants\", \"Gulf of Guinea   Oceanography\"))\n\n\n# A tibble: 7 × 5\n  id                                        type    country   revenue_omu word  \n  <chr>                                     <chr>   <list>          <dbl> <chr> \n1 Náutica del Sol Ges.m.b.H.                Company <chr [2]>          NA indus…\n2 Náutica del Mar S.A. de C.V. Carriers     Company <NULL>             NA <NA>  \n3 Costa del Sol Carriers                    Company <NULL>             NA <NA>  \n4 Ancla de Oro United Yacht                 Company <NULL>             NA <NA>  \n5 Playa de Oro Company                      Company <NULL>             NA <NA>  \n6 Sparrmans  Swordfish Ges.m.b.H. Merchants Company <NULL>             NA <NA>  \n7 Gulf of Guinea   Oceanography             Company <NULL>             NA <NA>  \n\n\nThe 2nd person withe most company association (6) is Jason Carillo. We extract info of the companies associated with him and cannot find any insights as there is no info on revenue_omu and product services.\n\n\nShow the code\nmc3_nodes_cc4 %>%\n  filter(id %in% c(\"PacificPlates S.A. de C.V.\", \"Baltic Sprat Ges.m.b.H. Enterprises\", \"Rufiji Delta  Limited Liability Company\", \"jīn qiāng yú AG\", \"Aqua Adventures Ltd. Corporation\", \"Náutica del Mar GmbH & Co. KG\"))\n\n\n# A tibble: 6 × 5\n  id                                      type    country   revenue_omu word \n  <chr>                                   <chr>   <list>          <dbl> <chr>\n1 PacificPlates S.A. de C.V.              Company <chr [1]>          NA NA   \n2 Baltic Sprat Ges.m.b.H. Enterprises     Company <NULL>             NA <NA> \n3 Rufiji Delta  Limited Liability Company Company <chr [1]>          NA NA   \n4 jīn qiāng yú AG                         Company <NULL>             NA <NA> \n5 Aqua Adventures Ltd. Corporation        Company <NULL>             NA <NA> \n6 Náutica del Mar GmbH & Co. KG           Company <NULL>             NA <NA> \n\n\nJennifer Johnson is one of those with the 3rd highest company association (5). We extract info of the companies associated with her and could only find that House Inc is in glass and packaging business with a relatively high revenue_omu of 157513.702 while Tshikwea S.A. de C.V. is in stationery business with revenue_omu of 25221.835. There is no info on the other 3 companies.\n\n\nShow the code\nmc3_nodes_cc4 %>%\n  filter(id %in% c(\"House Inc\", \"Mar del Golfo Incorporated\", \"Rodriguez and Sons\", \"Silva-Cabrera\", \"Tshikwea S.A. de C.V.\"))\n\n\n# A tibble: 6 × 5\n  id                         type    country   revenue_omu word                 \n  <chr>                      <chr>   <list>          <dbl> <chr>                \n1 House Inc                  Company <chr [1]>     157514. glass , packaging , …\n2 Mar del Golfo Incorporated Company <chr [1]>       8657. NA                   \n3 Rodriguez and Sons         Company <chr [1]>         NA  NA , NA , NA , NA , …\n4 Rodriguez and Sons         Company <chr [1]>         NA  NA , NA              \n5 Silva-Cabrera              Company <NULL>            NA  <NA>                 \n6 Tshikwea S.A. de C.V.      Company <chr [1]>      25222. offers , range , sta…\n\n\n\n\n\n\n4.5.2 Analysis of relationship between Company and Company Contacts (tidygraph)\nFirst, we form new nodes data table by using source and target of the edges data table. This is to ensure that the nodes in nodes data tables include all the source and target values.\n\n\nShow the code\nid11 <- mc3_edges_cc %>%\n  select(source) %>%\n  rename(id = source)\nid12 <- mc3_edges_cc %>%\n  select(target) %>%\n  rename(id = target)\nmc3_nodes_cc <- rbind(id11, id12) %>%\n  distinct() %>%\n  left_join(mc3_nodes_cleaned, by=c(\"id\" = \"id\"),\n            unmatched = \"drop\") %>%\n  filter(type %in% c(\"Company\", \"Company Contacts\"))\n\nmc3_graph_cc <- tbl_graph(nodes = mc3_nodes_cc,\n                       edges = mc3_edges_cc,\n                       directed = FALSE) %>%\n  mutate(betweenness_centrality = centrality_betweenness(),\n         closeness_centrality = centrality_closeness())\n\n\nDue to the large data size, we filter data with betweenness centrality > 0 and community group < 10. Group_component is used to identify the prominent communities.\n\n\nShow the code\nmc3_graph_cccb <- mc3_graph_cc %>%\n  activate(\"nodes\") %>%\n  arrange(desc(betweenness_centrality)) %>%\n  filter(betweenness_centrality > 0) %>%\n  mutate(group1 = group_components()) %>%\n  filter(group1 < 10) \n\nmc3_graph_cccb <- mc3_graph_cccb %>%\n  activate(\"edges\") %>%\n  mutate(importance = centrality_edge_betweenness()) \n\n\nThe network graph showing the relationship between Company and Company Contacts is plotted.\n\n\nShow the code\nset.seed(1234)\nggraph(mc3_graph_cccb, \n            layout = \"fr\") +\n  geom_edge_link(aes(colour = importance), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(size = betweenness_centrality, colour = factor(group1))) + \n  theme_graph() +\n  geom_node_text(aes(label = id), size = 1, repel=TRUE) +\n  ggtitle(\"<span style='font-size: 14pt;'>Betweenness Centrality Network (Company-Company Contacts)</font>\") +\n  theme(plot.title = element_markdown())\n\n\n\n\n\nShow the code\nkable(head(mc3_graph_cccb %>%\n             activate(\"nodes\") %>%\n             as_tibble(), 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ntype\ncountry\nrevenue_omu\nword\nbetweenness_centrality\ncloseness_centrality\ngroup1\n\n\n\n\nAqua Aura SE Marine life\nCompany\nMawazam , Rio Isla , Icarnia , Oceanus , Nalakond , Coralmarica, Alverossia , Isliandor , Talandria\nNA\nfood , ingredients , frozen , fruits , vegetables , ready , eat , products , ready , cook , products , snacks , drinks , kitchen , accessories , seafood , aquatic , products , bone , ash , natural , calcium , phosphate , feldspar , prepared , bone , china , bodies , NA , NA , fish , seafood , products , tuna , salmon , herring , shellfish , groundfish , products , flounder , fillets , cornmeal , pollock , strips , burger , tuna , steak , frozen , halibut , steaks , canned , sockeye , salmon , frozen , sockeye , crabs , alaskan , seafood , domestic , caviar , imported , caviar , NA , NA , NA , optical , fiber , communication , passive , components , fiber , optical , attenuator , fiber , optical , isolator , fiber , optical , switch , optical , filter , fiber , optical , fiber , optical , coupler , NA\n108.5\n0.0357143\n4\n\n\nIrish Mackerel S.A. de C.V. Marine biology\nCompany\nOceanus\nNA\ntransportation , services , ceramic , resin , home , garden , decor , source , freelance , researcher , involved , retailing , fresh , frozen , cured , meats , poultry , NA , NA , NA , NA , NA , NA , NA , NA , NA\n70.5\n0.0277778\n4\n\n\nJillian White\nCompany Contacts\nNULL\nNA\nNA\n30.0\n0.0312500\n4\n\n\nLeah Cruz\nCompany Contacts\nNULL\nNA\nNA\n30.0\n0.0312500\n4\n\n\nMar del Norte NV\nCompany\nOceanus, Marebak\n22966.67\nseafoods , fish , NA , seafood , products , NA\n21.0\n0.0769231\n5\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nThe following configurations should be noted before we interpret the graphs:\n\nNode size is set to betweenness centrality\nNode colour is set to community group\nEdge colour is set to centrality_edge_betweenness\n\nIt is observed that the top 5 ids with highest betweenness centrality are:\n\nAqua Aura SE Marine life\nIrish Mackerel S.A. de C.V. Marine biology\nJillian White\nLeah Cruz\nMar del Norte NV\n\nThis means that the above companies/Company Contacts have higher control over the network. Aqua Aura SE Marine life has the highest betweenness centrality, which is consistent with the earlier finding that it has the most contacts (11). However, there is no info on its revenue_omu to aid the analysis. Both Aqua Aura SE Marine life and Mar del Norte NV are in fishing business while Irish Mackerel S.A. de C.V. Marine biology may possibly be in the fishing business too as the product services description mentioned fresh, frozen, meats.\n\n\nShow the code\nmc3_nodes_cc %>%\n  filter(id %in% c(\"Aqua Aura SE Marine life\", \"Irish Mackerel S.A. de C.V. Marine biology\", \"Mar del Norte NV\"))\n\n\n# A tibble: 3 × 5\n  id                                         type    country   revenue_omu word \n  <chr>                                      <chr>   <list>          <dbl> <chr>\n1 Aqua Aura SE Marine life                   Company <chr [9]>         NA  food…\n2 Irish Mackerel S.A. de C.V. Marine biology Company <chr [1]>         NA  tran…\n3 Mar del Norte NV                           Company <chr [2]>      22967. seaf…\n\n\nIt is also observed that although Angela Wood is associated with the most number of companies, she does not have as high betweenness centrality i.e. control over the network as compared to other contacts who are associated with fewer companies."
  }
]